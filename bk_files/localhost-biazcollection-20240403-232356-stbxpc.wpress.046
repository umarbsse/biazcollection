remote_register( $request ) {
		// This action is documented in class.jetpack-xmlrpc-server.php.
		do_action( 'jetpack_xmlrpc_server_event', 'remote_register', 'begin', array() );

		$user = $this->fetch_and_verify_local_user( $request );

		if ( ! $user ) {
			return $this->error(
				new WP_Error( 'input_error', __( 'Valid user is required', 'jetpack-connection' ), 400 ),
				'remote_register'
			);
		}

		if ( is_wp_error( $user ) || is_a( $user, 'IXR_Error' ) ) {
			return $this->error( $user, 'remote_register' );
		}

		if ( empty( $request['nonce'] ) ) {
			return $this->error(
				new \WP_Error(
					'nonce_missing',
					__( 'The required "nonce" parameter is missing.', 'jetpack-connection' ),
					400
				),
				'remote_register'
			);
		}

		$nonce = sanitize_text_field( $request['nonce'] );
		unset( $request['nonce'] );

		$api_url  = $this->connection->api_url( 'partner_provision_nonce_check' );
		$response = Client::_wp_remote_request(
			esc_url_raw( add_query_arg( 'nonce', $nonce, $api_url ) ),
			array( 'method' => 'GET' ),
			true
		);

		if (
			200 !== wp_remote_retrieve_response_code( $response ) ||
			'OK' !== trim( wp_remote_retrieve_body( $response ) )
		) {
			return $this->error(
				new \WP_Error(
					'invalid_nonce',
					__( 'There was an issue validating this request.', 'jetpack-connection' ),
					400
				),
				'remote_register'
			);
		}

		if ( ! Jetpack_Options::get_option( 'id' ) || ! ( new Tokens() )->get_access_token() || ! empty( $request['force'] ) ) {
			wp_set_current_user( $user->ID );

			// This code mostly copied from Jetpack::admin_page_load.
			if ( isset( $request['from'] ) ) {
				$this->connection->add_register_request_param( 'from', (string) $request['from'] );
			}
			$registered = $this->connection->try_registration();
			if ( is_wp_error( $registered ) ) {
				return $this->error( $registered, 'remote_register' );
			} elseif ( ! $registered ) {
				return $this->error(
					new \WP_Error(
						'registration_error',
						__( 'There was an unspecified error registering the site', 'jetpack-connection' ),
						400
					),
					'remote_register'
				);
			}
		}

		// This action is documented in class.jetpack-xmlrpc-server.php.
		do_action( 'jetpack_xmlrpc_server_event', 'remote_register', 'success' );

		return array(
			'client_id' => Jetpack_Options::get_option( 'id' ),
		);
	}

	/**
	 * This is a substitute for remote_register() when the blog is already registered which returns an error code
	 * signifying that state.
	 * This is an unauthorized call and we should not be responding with any data other than the error code.
	 *
	 * @return \IXR_Error
	 */
	public function remote_already_registered() {
		return $this->error(
			new \WP_Error( 'already_registered', __( 'Blog is already registered', 'jetpack-connection' ), 400 ),
			'remote_register'
		);
	}

	/**
	 * This XML-RPC method is called from the /jpphp/provision endpoint on WPCOM in order to
	 * register this site so that a plan can be provisioned.
	 *
	 * @param array $request An array containing at minimum a nonce key and a local_username key.
	 *
	 * @return \WP_Error|array
	 */
	public function remote_provision( $request ) {
		$user = $this->fetch_and_verify_local_user( $request );

		if ( ! $user ) {
			return $this->error(
				new WP_Error( 'input_error', __( 'Valid user is required', 'jetpack-connection' ), 400 ),
				'remote_provision'
			);
		}

		if ( is_wp_error( $user ) || is_a( $user, 'IXR_Error' ) ) {
			return $this->error( $user, 'remote_provision' );
		}

		$site_icon = get_site_icon_url();

		/**
		 * Filters the Redirect URI returned by the remote_register XMLRPC method
		 *
		 * @param string $redirect_uri The Redirect URI
		 *
		 * @since 1.9.7
		 */
		$redirect_uri = apply_filters( 'jetpack_xmlrpc_remote_register_redirect_uri', admin_url() );

		// Generate secrets.
		$roles   = new Roles();
		$role    = $roles->translate_user_to_role( $user );
		$secrets = ( new Secrets() )->generate( 'authorize', $user->ID );

		$response = array(
			'jp_version'   => Constants::get_constant( 'JETPACK__VERSION' ),
			'redirect_uri' => $redirect_uri,
			'user_id'      => $user->ID,
			'user_email'   => $user->user_email,
			'user_login'   => $user->user_login,
			'scope'        => $this->connection->sign_role( $role, $user->ID ),
			'secret'       => $secrets['secret_1'],
			'is_active'    => $this->connection->has_connected_owner(),
		);

		if ( $site_icon ) {
			$response['site_icon'] = $site_icon;
		}

		/**
		 * Filters the response of the remote_provision XMLRPC method
		 *
		 * @param array    $response The response.
		 * @param array    $request An array containing at minimum a nonce key and a local_username key.
		 * @param \WP_User $user The local authenticated user.
		 *
		 * @since 1.9.7
		 */
		$response = apply_filters( 'jetpack_remote_xmlrpc_provision_response', $response, $request, $user );

		return $response;
	}

	/**
	 * Given an array containing a local user identifier and a nonce, will attempt to fetch and set
	 * an access token for the given user.
	 *
	 * @param array       $request    An array containing local_user and nonce keys at minimum.
	 * @param \IXR_Client $ixr_client The client object, optional.
	 * @return mixed
	 */
	public function remote_connect( $request, $ixr_client = false ) {
		if ( $this->connection->has_connected_owner() ) {
			return $this->error(
				new WP_Error(
					'already_connected',
					__( 'Jetpack is already connected.', 'jetpack-connection' ),
					400
				),
				'remote_connect'
			);
		}

		$user = $this->fetch_and_verify_local_user( $request );

		if ( ! $user || is_wp_error( $user ) || is_a( $user, 'IXR_Error' ) ) {
			return $this->error(
				new WP_Error(
					'input_error',
					__( 'Valid user is required.', 'jetpack-connection' ),
					400
				),
				'remote_connect'
			);
		}

		if ( empty( $request['nonce'] ) ) {
			return $this->error(
				new WP_Error(
					'input_error',
					__( 'A non-empty nonce must be supplied.', 'jetpack-connection' ),
					400
				),
				'remote_connect'
			);
		}

		if ( ! $ixr_client ) {
			$ixr_client = new Jetpack_IXR_Client();
		}
		// TODO: move this query into the Tokens class?
		$ixr_client->query(
			'jetpack.getUserAccessToken',
			array(
				'nonce'            => sanitize_text_field( $request['nonce'] ),
				'external_user_id' => $user->ID,
			)
		);

		$token = $ixr_client->isError() ? false : $ixr_client->getResponse();
		if ( empty( $token ) ) {
			return $this->error(
				new WP_Error(
					'token_fetch_failed',
					__( 'Failed to fetch user token from WordPress.com.', 'jetpack-connection' ),
					400
				),
				'remote_connect'
			);
		}
		$token = sanitize_text_field( $token );

		( new Tokens() )->update_user_token( $user->ID, sprintf( '%s.%d', $token, $user->ID ), true );

		/**
		 * Hook fired at the end of the jetpack.remoteConnect XML-RPC callback
		 *
		 * @since 1.9.7
		 */
		do_action( 'jetpack_remote_connect_end' );

		return $this->connection->has_connected_owner();
	}

	/**
	 * Getter for the local user to act as.
	 *
	 * @param array $request the current request data.
	 */
	private function fetch_and_verify_local_user( $request ) {
		if ( empty( $request['local_user'] ) ) {
			return $this->error(
				new \WP_Error(
					'local_user_missing',
					__( 'The required "local_user" parameter is missing.', 'jetpack-connection' ),
					400
				),
				'remote_provision'
			);
		}

		// Local user is used to look up by login, email or ID.
		$local_user_info = $request['local_user'];

		return $this->get_user_by_anything( $local_user_info );
	}

	/**
	 * Gets the user object by its data.
	 *
	 * @param string $user_id can be any identifying user data.
	 */
	private function get_user_by_anything( $user_id ) {
		$user = get_user_by( 'login', $user_id );

		if ( ! $user ) {
			$user = get_user_by( 'email', $user_id );
		}

		if ( ! $user ) {
			$user = get_user_by( 'ID', $user_id );
		}

		return $user;
	}

	/**
	 * Possible error_codes:
	 *
	 * - verify_secret_1_missing
	 * - verify_secret_1_malformed
	 * - verify_secrets_missing: verification secrets are not found in database
	 * - verify_secrets_incomplete: verification secrets are only partially found in database
	 * - verify_secrets_expired: verification secrets have expired
	 * - verify_secrets_mismatch: stored secret_1 does not match secret_1 sent by Jetpack.WordPress.com
	 * - state_missing: required parameter of state not found
	 * - state_malformed: state is not a digit
	 * - invalid_state: state in request does not match the stored state
	 *
	 * The 'authorize' and 'register' actions have additional error codes
	 *
	 * state_missing: a state ( user id ) was not supplied
	 * state_malformed: state is not the correct data type
	 * invalid_state: supplied state does not match the stored state
	 *
	 * @param array $params action An array of 3 parameters:
	 *     [0]: string action. Possible values are `authorize`, `publicize` and `register`.
	 *     [1]: string secret_1.
	 *     [2]: int state.
	 * @return \IXR_Error|string IXR_Error on failure, secret_2 on success.
	 */
	public function verify_action( $params ) {
		$action        = isset( $params[0] ) ? $params[0] : '';
		$verify_secret = isset( $params[1] ) ? $params[1] : '';
		$state         = isset( $params[2] ) ? $params[2] : '';

		$result = ( new Secrets() )->verify( $action, $verify_secret, $state );

		if ( is_wp_error( $result ) ) {
			return $this->error( $result );
		}

		return $result;
	}

	/**
	 * Wrapper for wp_authenticate( $username, $password );
	 *
	 * @return \WP_User|bool
	 */
	public function login() {
		$this->connection->require_jetpack_authentication();
		$user = wp_authenticate( 'username', 'password' );
		if ( is_wp_error( $user ) ) {
			if ( 'authentication_failed' === $user->get_error_code() ) { // Generic error could mean most anything.
				$this->error = new \WP_Error( 'invalid_request', 'Invalid Request', 403 );
			} else {
				$this->error = $user;
			}
			return false;
		} elseif ( ! $user ) { // Shouldn't happen.
			$this->error = new \WP_Error( 'invalid_request', 'Invalid Request', 403 );
			return false;
		}

		wp_set_current_user( $user->ID );

		return $user;
	}

	/**
	 * Returns the current error as an \IXR_Error
	 *
	 * @param \WP_Error|\IXR_Error $error             The error object, optional.
	 * @param string               $event_name The event name.
	 * @param \WP_User             $user              The user object.
	 * @return bool|\IXR_Error
	 */
	public function error( $error = null, $event_name = null, $user = null ) {
		if ( null !== $event_name ) {
			// This action is documented in class.jetpack-xmlrpc-server.php.
			do_action( 'jetpack_xmlrpc_server_event', $event_name, 'fail', $error, $user );
		}

		if ( $error !== null ) {
			$this->error = $error;
		}

		if ( is_wp_error( $this->error ) ) {
			$code = $this->error->get_error_data();
			if ( ! $code ) {
				$code = -10520;
			}
			$message = sprintf( 'Jetpack: [%s] %s', $this->error->get_error_code(), $this->error->get_error_message() );
			if ( ! class_exists( \IXR_Error::class ) ) {
				require_once ABSPATH . WPINC . '/class-IXR.php';
			}
			return new \IXR_Error( $code, $message );
		} elseif ( is_a( $this->error, 'IXR_Error' ) ) {
			return $this->error;
		}

		return false;
	}

	/* API Methods */

	/**
	 * Just authenticates with the given Jetpack credentials.
	 *
	 * @return string A success string. The Jetpack plugin filters it and make it return the Jetpack plugin version.
	 */
	public function test_connection() {
		/**
		 * Filters the successful response of the XMLRPC test_connection method
		 *
		 * @param string $response The response string.
		 */
		return apply_filters( 'jetpack_xmlrpc_test_connection_response', 'success' );
	}

	/**
	 * Test the API user code.
	 *
	 * @param array $args arguments identifying the test site.
	 */
	public function test_api_user_code( $args ) {
		$client_id = (int) $args[0];
		$user_id   = (int) $args[1];
		$nonce     = (string) $args[2];
		$verify    = (string) $args[3];

		if ( ! $client_id || ! $user_id || ! strlen( $nonce ) || 32 !== strlen( $verify ) ) {
			return false;
		}

		$user = get_user_by( 'id', $user_id );
		if ( ! $user || is_wp_error( $user ) ) {
			return false;
		}

		/* phpcs:ignore
		 debugging
		error_log( "CLIENT: $client_id" );
		error_log( "USER:   $user_id" );
		error_log( "NONCE:  $nonce" );
		error_log( "VERIFY: $verify" );
		*/

		$jetpack_token = ( new Tokens() )->get_access_token( $user_id );

		$api_user_code = get_user_meta( $user_id, "jetpack_json_api_$client_id", true );
		if ( ! $api_user_code ) {
			return false;
		}

		$hmac = hash_hmac(
			'md5',
			json_encode( // phpcs:ignore WordPress.WP.AlternativeFunctions.json_encode_json_encode
				(object) array(
					'client_id' => (int) $client_id,
					'user_id'   => (int) $user_id,
					'nonce'     => (string) $nonce,
					'code'      => (string) $api_user_code,
				)
			),
			$jetpack_token->secret
		);

		if ( ! hash_equals( $hmac, $verify ) ) {
			return false;
		}

		return $user_id;
	}

	/**
	 * Unlink a user from WordPress.com
	 *
	 * When the request is done without any parameter, this XMLRPC callback gets an empty array as input.
	 *
	 * If $user_id is not provided, it will try to disconnect the current logged in user. This will fail if called by the Master User.
	 *
	 * If $user_id is is provided, it will try to disconnect the informed user, even if it's the Master User.
	 *
	 * @param mixed $user_id The user ID to disconnect from this site.
	 */
	public function unlink_user( $user_id = array() ) {
		$user_id = (int) $user_id;
		if ( $user_id < 1 ) {
			$user_id = null;
		}
		/**
		 * Fired when we want to log an event to the Jetpack event log.
		 *
		 * @since 1.7.0
		 * @since-jetpack 7.7.0
		 *
		 * @param string $code Unique name for the event.
		 * @param string $data Optional data about the event.
		 */
		do_action( 'jetpack_event_log', 'unlink' );
		return $this->connection->disconnect_user(
			$user_id,
			(bool) $user_id
		);
	}

	/**
	 * Returns the home URL, site URL, and URL secret for the current site which can be used on the WPCOM side for
	 * IDC mitigation to decide whether sync should be allowed if the home and siteurl values differ between WPCOM
	 * and the remote Jetpack site.
	 *
	 * @since 1.56.0 Additional data may be added via filter `jetpack_connection_validate_urls_for_idc_mitigation_response`.
	 *
	 * @return array
	 */
	public function validate_urls_for_idc_mitigation() {
		$response = array(
			'home'    => Urls::home_url(),
			'siteurl' => Urls::site_url(),
		);

		/**
		 * Allows modifying the response.
		 *
		 * @since 1.56.0
		 *
		 * @param array $response
		 */
		return apply_filters( 'jetpack_connection_validate_urls_for_idc_mitigation_response', $response );
	}

	/**
	 * Updates the attachment parent object.
	 *
	 * @param array $args attachment and parent identifiers.
	 */
	public function update_attachment_parent( $args ) {
		$attachment_id = (int) $args[0];
		$parent_id     = (int) $args[1];

		return wp_update_post(
			array(
				'ID'          => $attachment_id,
				'post_parent' => $parent_id,
			)
		);
	}

	/**
	 * Deprecated: This method is no longer part of the Connection package and now lives on the Jetpack plugin.
	 *
	 * Disconnect this blog from the connected wordpress.com account
	 *
	 * @deprecated since 1.25.0
	 * @see Jetpack_XMLRPC_Methods::disconnect_blog() in the Jetpack plugin
	 *
	 * @return boolean
	 */
	public function disconnect_blog() {
		_deprecated_function( __METHOD__, '1.25.0', 'Jetpack_XMLRPC_Methods::disconnect_blog()' );
		if ( class_exists( 'Jetpack_XMLRPC_Methods' ) ) {
			return Jetpack_XMLRPC_Methods::disconnect_blog();
		}
		return false;
	}

	/**
	 * Deprecated: This method is no longer part of the Connection package and now lives on the Jetpack plugin.
	 *
	 * Returns what features are available. Uses the slug of the module files.
	 *
	 * @deprecated since 1.25.0
	 * @see Jetpack_XMLRPC_Methods::features_available() in the Jetpack plugin
	 *
	 * @return array
	 */
	public function features_available() {
		_deprecated_function( __METHOD__, '1.25.0', 'Jetpack_XMLRPC_Methods::features_available()' );
		if ( class_exists( 'Jetpack_XMLRPC_Methods' ) ) {
			return Jetpack_XMLRPC_Methods::features_available();
		}
		return array();
	}

	/**
	 * Deprecated: This method is no longer part of the Connection package and now lives on the Jetpack plugin.
	 *
	 * Returns what features are enabled. Uses the slug of the modules files.
	 *
	 * @deprecated since 1.25.0
	 * @see Jetpack_XMLRPC_Methods::features_enabled() in the Jetpack plugin
	 *
	 * @return array
	 */
	public function features_enabled() {
		_deprecated_function( __METHOD__, '1.25.0', 'Jetpack_XMLRPC_Methods::features_enabled()' );
		if ( class_exists( 'Jetpack_XMLRPC_Methods' ) ) {
			return Jetpack_XMLRPC_Methods::features_enabled();
		}
		return array();
	}

	/**
	 * Deprecated: This method is no longer part of the Connection package and now lives on the Jetpack plugin.
	 *
	 * Serve a JSON API request.
	 *
	 * @deprecated since 1.25.0
	 * @see Jetpack_XMLRPC_Methods::json_api() in the Jetpack plugin
	 *
	 * @param array $args request arguments.
	 */
	public function json_api( $args = array() ) {
		_deprecated_function( __METHOD__, '1.25.0', 'Jetpack_XMLRPC_Methods::json_api()' );
		if ( class_exists( 'Jetpack_XMLRPC_Methods' ) ) {
			return Jetpack_XMLRPC_Methods::json_api( $args );
		}
		return array();
	}
}
LICENSE.txt                                                                                                                                                                                                                                                    18416         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


===================================


GNU GENERAL PUBLIC LICENSE
   Version 2, June 1991

Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.

		Preamble

The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Lesser General Public License instead.)  You can apply it to
your programs, too.

When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it
in new free programs; and that you know you can do these things.

To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

We protect your rights with two steps: (1) copyright the software, and
(2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

The precise terms and conditions for copying, distribution and
modification follow.

GNU GENERAL PUBLIC LICENSE
TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

0. This License applies to any program or other work which contains
a notice placed by the copyright holder saying it may be distributed
under the terms of this General Public License.  The "Program", below,
refers to any such program or work, and a "work based on the Program"
means either the Program or any derivative work under copyright law:
that is to say, a work containing the Program or a portion of it,
either verbatim or with modifications and/or translated into another
language.  (Hereinafter, translation is included without limitation in
the term "modification".)  Each licensee is addressed as "you".

Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running the Program is not restricted, and the output from the Program
is covered only if its contents constitute a work based on the
Program (independent of having been made by running the Program).
Whether that is true depends on what the Program does.

1. You may copy and distribute verbatim copies of the Program's
source code as you receive it, in any medium, provided that you
conspicuously and appropriately publish on each copy an appropriate
copyright notice and disclaimer of warranty; keep intact all the
notices that refer to this License and to the absence of any warranty;
and give any other recipients of the Program a copy of this License
along with the Program.

You may charge a fee for the physical act of transferring a copy, and
you may at your option offer warranty protection in exchange for a fee.

2. You may modify your copy or copies of the Program or any portion
of it, thus forming a work based on the Program, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

a) You must cause the modified files to carry prominent notices
stating that you changed the files and the date of any change.

b) You must cause any work that you distribute or publish, that in
whole or in part contains or is derived from the Program or any
part thereof, to be licensed as a whole at no charge to all third
parties under the terms of this License.

c) If the modified program normally reads commands interactively
when run, you must cause it, when started running for such
interactive use in the most ordinary way, to print or display an
announcement including an appropriate copyright notice and a
notice that there is no warranty (or else, saying that you provide
a warranty) and that users may redistribute the program under
these conditions, and telling the user how to view a copy of this
License.  (Exception: if the Program itself is interactive but
does not normally print such an announcement, your work based on
the Program is not required to print an announcement.)

These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Program,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Program, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Program.

In addition, mere aggregation of another work not based on the Program
with the Program (or with a work based on the Program) on a volume of
a storage or distribution medium does not bring the other work under
the scope of this License.

3. You may copy and distribute the Program (or a work based on it,
under Section 2) in object code or executable form under the terms of
Sections 1 and 2 above provided that you also do one of the following:

a) Accompany it with the complete corresponding machine-readable
source code, which must be distributed under the terms of Sections
1 and 2 above on a medium customarily used for software interchange; or,

b) Accompany it with a written offer, valid for at least three
years, to give any third party, for a charge no more than your
cost of physically performing source distribution, a complete
machine-readable copy of the corresponding source code, to be
distributed under the terms of Sections 1 and 2 above on a medium
customarily used for software interchange; or,

c) Accompany it with the information you received as to the offer
to distribute corresponding source code.  (This alternative is
allowed only for noncommercial distribution and only if you
received the program in object code or executable form with such
an offer, in accord with Subsection b above.)

The source code for a work means the preferred form of the work for
making modifications to it.  For an executable work, complete source
code means all the source code for all modules it contains, plus any
associated interface definition files, plus the scripts used to
control compilation and installation of the executable.  However, as a
special exception, the source code distributed need not include
anything that is normally distributed (in either source or binary
form) with the major components (compiler, kernel, and so on) of the
operating system on which the executable runs, unless that component
itself accompanies the executable.

If distribution of executable or object code is made by offering
access to copy from a designated place, then offering equivalent
access to copy the source code from the same place counts as
distribution of the source code, even though third parties are not
compelled to copy the source along with the object code.

4. You may not copy, modify, sublicense, or distribute the Program
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense or distribute the Program is
void, and will automatically terminate your rights under this License.
However, parties who have received copies, or rights, from you under
this License will not have their licenses terminated so long as such
parties remain in full compliance.

5. You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Program or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Program (or any work based on the
Program), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying
the Program or works based on it.

6. Each time you redistribute the Program (or any work based on the
Program), the recipient automatically receives a license from the
original licensor to copy, distribute or modify the Program subject to
these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties to
this License.

7. If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Program at all.  For example, if a patent
license would not permit royalty-free redistribution of the Program by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Program.

If any portion of this section is held invalid or unenforceable under
any particular circumstance, the balance of the section is intended to
apply and the section as a whole is intended to apply in other
circumstances.

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

8. If the distribution and/or use of the Program is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Program under this License
may add an explicit geographical distribution limitation excluding
those countries, so that distribution is permitted only in or among
countries not thus excluded.  In such case, this License incorporates
the limitation as if written in the body of this License.

9. The Free Software Foundation may publish revised and/or new versions
of the General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

Each version is given a distinguishing version number.  If the Program
specifies a version number of this License which applies to it and "any
later version", you have the option of following the terms and conditions
either of that version or of any later version published by the Free
Software Foundation.  If the Program does not specify a version number of
this License, you may choose any version ever published by the Free Software
Foundation.

10. If you wish to incorporate parts of the Program into other free
programs whose distribution conditions are different, write to the author
to ask for permission.  For software which is copyrighted by the Free
Software Foundation, write to the Free Software Foundation; we sometimes
make exceptions for this.  Our decision will be guided by the two goals
of preserving the free status of all derivatives of our free software and
of promoting the sharing and reuse of software generally.

		NO WARRANTY

11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
REPAIR OR CORRECTION.

12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.

 END OF TERMS AND CONDITIONS

How to Apply These Terms to Your New Programs

If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

<one line to give the program's name and a brief idea of what it does.>
Copyright (C) <year>  <name of author>

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

Also add information on how to contact you by electronic and paper mail.

If the program is interactive, make it output a short notice like this
when it starts in an interactive mode:

Gnomovision version 69, Copyright (C) year name of author
Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
This is free software, and you are welcome to redistribute it
under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, the commands you use may
be called something other than `show w' and `show c'; they could even be
mouse-clicks or menu items--whatever suits your program.

You should also get your employer (if you work as a programmer) or your
school, if any, to sign a "copyright disclaimer" for the program, if
necessary.  Here is a sample; alter the names:

Yoyodyne, Inc., hereby disclaims all copyright interest in the program
`Gnomovision' (which makes passes at compilers) written by James Hacker.

<signature of Ty Coon>, 1 April 1989
Ty Coon, President of Vice

This General Public License does not permit incorporating your program into
proprietary programs.  If your program is a subroutine library, you may
consider it more useful to permit linking proprietary applications with the
library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.
README.md                                                                                                                                                                                                                                                      1356          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            # Jetpack Connection Package

Let's talk to wordpress.com! 

## Get Started 

Package is published in [Packagist](https://packagist.org/packages/automattic/jetpack-connection). We recommend using the latest version there, or you can also test with the latest development versions like below:

```
"require": {
    "automattic/jetpack-autoloader": "dev-trunk",
    "automattic/jetpack-config": "dev-trunk",
    "automattic/jetpack-connection": "dev-trunk"
}
```

## Guides
* [Connection package guide](docs/register-site.md)

## Tools

1. [Making Authenticated async XML-RPC calls](docs/xmlrpc-async-calls.md)
1. [Customizing error messages](docs/error-handling.md)

## Using this package in your WordPress plugin

If you plan on using this package in your WordPress plugin, we would recommend that you use [Jetpack Autoloader](https://packagist.org/packages/automattic/jetpack-autoloader) as your autoloader. This will allow for maximum interoperability with other plugins that use this package as well.

## Security

Need to report a security vulnerability? Go to [https://automattic.com/security/](https://automattic.com/security/) or directly to our security bug bounty site [https://hackerone.com/automattic](https://hackerone.com/automattic).

## License

jetpack-connection is licensed under [GNU General Public License v2 (or later)](./LICENSE.txt)
SECURITY.md                                                                                                                                                                                                                                                    2506          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            # Security Policy

Full details of the Automattic Security Policy can be found on [automattic.com](https://automattic.com/security/).

## Supported Versions

Generally, only the latest version of Jetpack and its associated plugins have continued support. If a critical vulnerability is found in the current version of a plugin, we may opt to backport any patches to previous versions. 

## Reporting a Vulnerability

Our HackerOne program covers the below plugin software, as well as a variety of related projects and infrastructure:

* [Jetpack](https://jetpack.com/)
* Jetpack Backup
* Jetpack Boost
* Jetpack CRM
* Jetpack Protect
* Jetpack Search
* Jetpack Social
* Jetpack VideoPress

**For responsible disclosure of security issues and to be eligible for our bug bounty program, please submit your report via the [HackerOne](https://hackerone.com/automattic) portal.**

Our most critical targets are:

* Jetpack and the Jetpack composer packages (all within this repo)
* Jetpack.com -- the primary marketing site.
* cloud.jetpack.com -- a management site.
* wordpress.com -- the shared management site for both Jetpack and WordPress.com sites.

For more targets, see the `In Scope` section on [HackerOne](https://hackerone.com/automattic).

_Please note that the **WordPress software is a separate entity** from Automattic. Please report vulnerabilities for WordPress through [the WordPress Foundation's HackerOne page](https://hackerone.com/wordpress)._

## Guidelines

We're committed to working with security researchers to resolve the vulnerabilities they discover. You can help us by following these guidelines:

*   Follow [HackerOne's disclosure guidelines](https://www.hackerone.com/disclosure-guidelines).
*   Pen-testing Production:
    *   Please **setup a local environment** instead whenever possible. Most of our code is open source (see above).
    *   If that's not possible, **limit any data access/modification** to the bare minimum necessary to reproduce a PoC.
    *   **_Don't_ automate form submissions!** That's very annoying for us, because it adds extra work for the volunteers who manage those systems, and reduces the signal/noise ratio in our communication channels.
    *   To be eligible for a bounty, all of these guidelines must be followed.
*   Be Patient - Give us a reasonable time to correct the issue before you disclose the vulnerability.

We also expect you to comply with all applicable laws. You're responsible to pay any taxes associated with your bounties.
class-client.php                                                                                                                                                                                                                                               15348         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Connection Client class file.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

use Automattic\Jetpack\Constants;

/**
 * The Client class that is used to connect to WordPress.com Jetpack API.
 */
class Client {
	const WPCOM_JSON_API_VERSION = '1.1';

	/**
	 * Makes an authorized remote request using Jetpack_Signature
	 *
	 * @param array        $args the arguments for the remote request.
	 * @param array|String $body the request body.
	 * @return array|WP_Error WP HTTP response on success
	 */
	public static function remote_request( $args, $body = null ) {
		if ( isset( $args['url'] ) ) {
			/**
			 * Filters the remote request url.
			 *
			 * @since 1.30.12
			 *
			 * @param string The remote request url.
			 */
			$args['url'] = apply_filters( 'jetpack_remote_request_url', $args['url'] );
		}

		$result = self::build_signed_request( $args, $body );
		if ( ! $result || is_wp_error( $result ) ) {
			return $result;
		}

		$response = self::_wp_remote_request( $result['url'], $result['request'] );

		Error_Handler::get_instance()->check_api_response_for_errors(
			$response,
			$result['auth'],
			empty( $args['url'] ) ? '' : $args['url'],
			empty( $args['method'] ) ? 'POST' : $args['method'],
			'rest'
		);

		/**
		 * Fired when the remote request response has been received.
		 *
		 * @since 1.30.8
		 *
		 * @param array|WP_Error The HTTP response.
		 */
		do_action( 'jetpack_received_remote_request_response', $response );

		return $response;
	}

	/**
	 * Adds authorization signature to a remote request using Jetpack_Signature
	 *
	 * @param array        $args the arguments for the remote request.
	 * @param array|String $body the request body.
	 * @return WP_Error|array {
	 *     An array containing URL and request items.
	 *
	 *     @type String $url     The request URL.
	 *     @type array  $request Request arguments.
	 *     @type array  $auth    Authorization data.
	 * }
	 */
	public static function build_signed_request( $args, $body = null ) {
		add_filter(
			'jetpack_constant_default_value',
			__NAMESPACE__ . '\Utils::jetpack_api_constant_filter',
			10,
			2
		);

		$defaults = array(
			'url'           => '',
			'user_id'       => 0,
			'blog_id'       => 0,
			'auth_location' => Constants::get_constant( 'JETPACK_CLIENT__AUTH_LOCATION' ),
			'method'        => 'POST',
			'timeout'       => 10,
			'redirection'   => 0,
			'headers'       => array(),
			'stream'        => false,
			'filename'      => null,
			'sslverify'     => true,
		);

		$args = wp_parse_args( $args, $defaults );

		$args['blog_id'] = (int) $args['blog_id'];

		if ( 'header' !== $args['auth_location'] ) {
			$args['auth_location'] = 'query_string';
		}

		$token = ( new Tokens() )->get_access_token( $args['user_id'] );
		if ( ! $token ) {
			return new \WP_Error( 'missing_token' );
		}

		$method = strtoupper( $args['method'] );

		$timeout = (int) $args['timeout'];

		$redirection = $args['redirection'];
		$stream      = $args['stream'];
		$filename    = $args['filename'];
		$sslverify   = $args['sslverify'];

		$request = compact( 'method', 'body', 'timeout', 'redirection', 'stream', 'filename', 'sslverify' );

		@list( $token_key, $secret ) = explode( '.', $token->secret ); // phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged
		if ( empty( $token ) || empty( $secret ) ) {
			return new \WP_Error( 'malformed_token' );
		}

		$token_key = sprintf(
			'%s:%d:%d',
			$token_key,
			Constants::get_constant( 'JETPACK__API_VERSION' ),
			$token->external_user_id
		);

		$time_diff         = (int) \Jetpack_Options::get_option( 'time_diff' );
		$jetpack_signature = new \Jetpack_Signature( $token->secret, $time_diff );

		$timestamp = time() + $time_diff;

		if ( function_exists( 'wp_generate_password' ) ) {
			$nonce = wp_generate_password( 10, false );
		} else {
			$nonce = substr( sha1( wp_rand( 0, 1000000 ) ), 0, 10 );
		}

		// Kind of annoying.  Maybe refactor Jetpack_Signature to handle body-hashing.
		if ( $body === null ) {
			$body_hash = '';

		} else {
			// Allow arrays to be used in passing data.
			$body_to_hash = $body;

			if ( is_array( $body ) ) {
				// We cast this to a new variable, because the array form of $body needs to be
				// maintained so it can be passed into the request later on in the code.
				if ( array() !== $body ) {
					$body_to_hash = wp_json_encode( self::_stringify_data( $body ) );
				} else {
					$body_to_hash = '';
				}
			}

			if ( ! is_string( $body_to_hash ) ) {
				return new \WP_Error( 'invalid_body', 'Body is malformed.' );
			}

			$body_hash = base64_encode( sha1( $body_to_hash, true ) ); // phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.obfuscation_base64_encode
		}

		$auth = array(
			'token'     => $token_key,
			'timestamp' => $timestamp,
			'nonce'     => $nonce,
			'body-hash' => $body_hash,
		);

		if ( false !== strpos( $args['url'], 'xmlrpc.php' ) ) {
			$url_args = array(
				'for'           => 'jetpack',
				'wpcom_blog_id' => \Jetpack_Options::get_option( 'id' ),
			);
		} else {
			$url_args = array();
		}

		if ( 'header' !== $args['auth_location'] ) {
			$url_args += $auth;
		}

		$url = add_query_arg( urlencode_deep( $url_args ), $args['url'] );

		$signature = $jetpack_signature->sign_request( $token_key, $timestamp, $nonce, $body_hash, $method, $url, $body, false );

		if ( ! $signature || is_wp_error( $signature ) ) {
			return $signature;
		}

		// Send an Authorization header so various caches/proxies do the right thing.
		$auth['signature'] = $signature;
		$auth['version']   = Constants::get_constant( 'JETPACK__VERSION' );
		$header_pieces     = array();
		foreach ( $auth as $key => $value ) {
			$header_pieces[] = sprintf( '%s="%s"', $key, $value );
		}
		$request['headers'] = array_merge(
			$args['headers'],
			array(
				'Authorization' => 'X_JETPACK ' . implode( ' ', $header_pieces ),
			)
		);

		if ( 'header' !== $args['auth_location'] ) {
			$url = add_query_arg( 'signature', rawurlencode( $signature ), $url );
		}

		return compact( 'url', 'request', 'auth' );
	}

	/**
	 * Wrapper for wp_remote_request().  Turns off SSL verification for certain SSL errors.
	 * This is lame, but many, many, many hosts have misconfigured SSL.
	 *
	 * When Jetpack is registered, the jetpack_fallback_no_verify_ssl_certs option is set to the current time if:
	 * 1. a certificate error is found AND
	 * 2. not verifying the certificate works around the problem.
	 *
	 * The option is checked on each request.
	 *
	 * @internal
	 *
	 * @param String  $url the request URL.
	 * @param array   $args request arguments.
	 * @param Boolean $set_fallback whether to allow flagging this request to use a fallback certficate override.
	 * @return array|WP_Error WP HTTP response on success
	 */
	public static function _wp_remote_request( $url, $args, $set_fallback = false ) { // phpcs:ignore PSR2.Methods.MethodDeclaration.Underscore
		$fallback = \Jetpack_Options::get_option( 'fallback_no_verify_ssl_certs' );
		if ( false === $fallback ) {
			\Jetpack_Options::update_option( 'fallback_no_verify_ssl_certs', 0 );
		}

		/**
		 * SSL verification (`sslverify`) for the JetpackClient remote request
		 * defaults to off, use this filter to force it on.
		 *
		 * Return `true` to ENABLE SSL verification, return `false`
		 * to DISABLE SSL verification.
		 *
		 * @since 1.7.0
		 * @since-jetpack 3.6.0
		 *
		 * @param bool Whether to force `sslverify` or not.
		 */
		if ( apply_filters( 'jetpack_client_verify_ssl_certs', false ) ) {
			return wp_remote_request( $url, $args );
		}

		if ( (int) $fallback ) {
			// We're flagged to fallback.
			$args['sslverify'] = false;
		}

		$response = wp_remote_request( $url, $args );

		if (
			! $set_fallback                                     // We're not allowed to set the flag on this request, so whatever happens happens.
			||
			isset( $args['sslverify'] ) && ! $args['sslverify'] // No verification - no point in doing it again.
			||
			! is_wp_error( $response )                          // Let it ride.
		) {
			self::set_time_diff( $response, $set_fallback );
			return $response;
		}

		// At this point, we're not flagged to fallback and we are allowed to set the flag on this request.

		$message = $response->get_error_message();

		// Is it an SSL Certificate verification error?
		if (
			false === strpos( $message, '14090086' ) // OpenSSL SSL3 certificate error.
			&&
			false === strpos( $message, '1407E086' ) // OpenSSL SSL2 certificate error.
			&&
			false === strpos( $message, 'error setting certificate verify locations' ) // cURL CA bundle not found.
			&&
			false === strpos( $message, 'Peer certificate cannot be authenticated with' ) // cURL CURLE_SSL_CACERT: CA bundle found, but not helpful
			// Different versions of curl have different error messages
			// this string should catch them all.
			&&
			false === strpos( $message, 'Problem with the SSL CA cert' ) // cURL CURLE_SSL_CACERT_BADFILE: probably access rights.
		) {
			// No, it is not.
			return $response;
		}

		// Redo the request without SSL certificate verification.
		$args['sslverify'] = false;
		$response          = wp_remote_request( $url, $args );

		if ( ! is_wp_error( $response ) ) {
			// The request went through this time, flag for future fallbacks.
			\Jetpack_Options::update_option( 'fallback_no_verify_ssl_certs', time() );
			self::set_time_diff( $response, $set_fallback );
		}

		return $response;
	}

	/**
	 * Sets the time difference for correct signature computation.
	 *
	 * @param HTTP_Response $response the response object.
	 * @param Boolean       $force_set whether to force setting the time difference.
	 */
	public static function set_time_diff( &$response, $force_set = false ) {
		$code = wp_remote_retrieve_response_code( $response );

		// Only trust the Date header on some responses.
		if ( 200 != $code && 304 != $code && 400 != $code && 401 != $code ) { // phpcs:ignore  Universal.Operators.StrictComparisons.LooseNotEqual
			return;
		}

		$date = wp_remote_retrieve_header( $response, 'date' );
		if ( ! $date ) {
			return;
		}

		$time = (int) strtotime( $date );
		if ( 0 >= $time ) {
			return;
		}

		$time_diff = $time - time();

		if ( $force_set ) { // During register.
			\Jetpack_Options::update_option( 'time_diff', $time_diff );
		} else { // Otherwise.
			$old_diff = \Jetpack_Options::get_option( 'time_diff' );
			if ( false === $old_diff || abs( $time_diff - (int) $old_diff ) > 10 ) {
				\Jetpack_Options::update_option( 'time_diff', $time_diff );
			}
		}
	}

	/**
	 * Validate and build arguments for a WordPress.com REST API request.
	 *
	 * @param  string $path             REST API path.
	 * @param  string $version          REST API version. Default is `2`.
	 * @param  array  $args             Arguments to {@see WP_Http}. Default is `array()`.
	 * @param  string $base_api_path    REST API root. Default is `wpcom`.
	 *
	 * @return array|WP_Error $response Response data, else {@see WP_Error} on failure.
	 */
	public static function validate_args_for_wpcom_json_api_request(
		$path,
		$version = '2',
		$args = array(),
		$base_api_path = 'wpcom'
	) {
		$base_api_path = trim( $base_api_path, '/' );
		$version       = ltrim( $version, 'v' );
		$path          = ltrim( $path, '/' );

		$filtered_args = array_intersect_key(
			$args,
			array(
				'headers'     => 'array',
				'method'      => 'string',
				'timeout'     => 'int',
				'redirection' => 'int',
				'stream'      => 'boolean',
				'filename'    => 'string',
				'sslverify'   => 'boolean',
			)
		);

		// Use GET by default whereas `remote_request` uses POST.
		$request_method = isset( $filtered_args['method'] ) ? strtoupper( $filtered_args['method'] ) : 'GET';

		$url = sprintf(
			'%s/%s/v%s/%s',
			Constants::get_constant( 'JETPACK__WPCOM_JSON_API_BASE' ),
			$base_api_path,
			$version,
			$path
		);

		$validated_args = array_merge(
			$filtered_args,
			array(
				'url'    => $url,
				'method' => $request_method,
			)
		);

		return $validated_args;
	}

	/**
	 * Queries the WordPress.com REST API with a user token.
	 *
	 * @param  string $path             REST API path.
	 * @param  string $version          REST API version. Default is `2`.
	 * @param  array  $args             Arguments to {@see WP_Http}. Default is `array()`.
	 * @param  string $body             Body passed to {@see WP_Http}. Default is `null`.
	 * @param  string $base_api_path    REST API root. Default is `wpcom`.
	 *
	 * @return array|WP_Error $response Response data, else {@see WP_Error} on failure.
	 */
	public static function wpcom_json_api_request_as_user(
		$path,
		$version = '2',
		$args = array(),
		$body = null,
		$base_api_path = 'wpcom'
	) {
		$args            = self::validate_args_for_wpcom_json_api_request( $path, $version, $args, $base_api_path );
		$args['user_id'] = get_current_user_id();

		if ( isset( $body ) && ! isset( $args['headers'] ) && in_array( $args['method'], array( 'POST', 'PUT', 'PATCH' ), true ) ) {
			$args['headers'] = array( 'Content-Type' => 'application/json' );
		}

		if ( isset( $body ) && ! is_string( $body ) ) {
			$body = wp_json_encode( $body );
		}

		return self::remote_request( $args, $body );
	}

	/**
	 * Query the WordPress.com REST API using the blog token
	 *
	 * @param String $path The API endpoint relative path.
	 * @param String $version The API version.
	 * @param array  $args Request arguments.
	 * @param String $body Request body.
	 * @param String $base_api_path (optional) the API base path override, defaults to 'rest'.
	 * @return array|WP_Error $response Data.
	 */
	public static function wpcom_json_api_request_as_blog(
		$path,
		$version = self::WPCOM_JSON_API_VERSION,
		$args = array(),
		$body = null,
		$base_api_path = 'rest'
	) {
		$validated_args            = self::validate_args_for_wpcom_json_api_request( $path, $version, $args, $base_api_path );
		$validated_args['blog_id'] = (int) \Jetpack_Options::get_option( 'id' );

		// For Simple sites get the response directly without any HTTP requests.
		if ( defined( 'IS_WPCOM' ) && IS_WPCOM ) {
			add_filter( 'is_jetpack_authorized_for_site', '__return_true' );
			require_lib( 'wpcom-api-direct' );
			return \WPCOM_API_Direct::do_request( $validated_args, $body );
		}

		return self::remote_request( $validated_args, $body );
	}

	/**
	 * Takes an array or similar structure and recursively turns all values into strings. This is used to
	 * make sure that body hashes are made ith the string version, which is what will be seen after a
	 * server pulls up the data in the $_POST array.
	 *
	 * @param array|Mixed $data the data that needs to be stringified.
	 *
	 * @return array|string
	 */
	public static function _stringify_data( $data ) { // phpcs:ignore PSR2.Methods.MethodDeclaration.Underscore

		// Booleans are special, lets just makes them and explicit 1/0 instead of the 0 being an empty string.
		if ( is_bool( $data ) ) {
			return $data ? '1' : '0';
		}

		// Cast objects into arrays.
		if ( is_object( $data ) ) {
			$data = (array) $data;
		}

		// Non arrays at this point should be just converted to strings.
		if ( ! is_array( $data ) ) {
			return (string) $data;
		}

		foreach ( $data as &$value ) {
			$value = self::_stringify_data( $value );
		}

		return $data;
	}
}
class-connection-notice.php                                                                                                                                                                                                                                    8111          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * Admin connection notices.
 *
 * @package automattic/jetpack-admin-ui
 */

namespace Automattic\Jetpack\Connection;

use Automattic\Jetpack\Redirect;
use Automattic\Jetpack\Tracking;

/**
 * Admin connection notices.
 */
class Connection_Notice {

	/**
	 * Whether the class has been initialized.
	 *
	 * @var bool
	 */
	private static $is_initialized = false;

	/**
	 * The constructor.
	 */
	public function __construct() {
		if ( ! static::$is_initialized ) {
			add_action( 'current_screen', array( $this, 'initialize_notices' ) );
			static::$is_initialized = true;
		}
	}

	/**
	 * Initialize the notices if needed.
	 *
	 * @param \WP_Screen $screen WP Core's screen object.
	 *
	 * @return void
	 */
	public function initialize_notices( $screen ) {
		if ( ! in_array(
			$screen->id,
			array(
				'jetpack_page_akismet-key-config',
				'admin_page_jetpack_modules',
			),
			true
		) ) {
			add_action( 'admin_notices', array( $this, 'delete_user_update_connection_owner_notice' ) );
		}
	}

	/**
	 * This is an entire admin notice dedicated to messaging and handling of the case where a user is trying to delete
	 * the connection owner.
	 */
	public function delete_user_update_connection_owner_notice() {
		global $current_screen;

		/*
		 * phpcs:disable WordPress.Security.NonceVerification.Recommended
		 *
		 * This function is firing within wp-admin and checks (below) if it is in the midst of a deletion on the users
		 * page. Nonce will be already checked by WordPress, so we do not need to check ourselves.
		 */

		if ( ! isset( $current_screen->base ) || 'users' !== $current_screen->base ) {
			return;
		}

		if ( ! isset( $_REQUEST['action'] ) || 'delete' !== $_REQUEST['action'] ) {
			return;
		}

		// Get connection owner or bail.
		$connection_manager  = new Manager();
		$connection_owner_id = $connection_manager->get_connection_owner_id();
		if ( ! $connection_owner_id ) {
			return;
		}
		$connection_owner_userdata = get_userdata( $connection_owner_id );

		// Bail if we're not trying to delete connection owner.
		$user_ids_to_delete = array();
		if ( isset( $_REQUEST['users'] ) ) {
			$user_ids_to_delete = array_map( 'sanitize_text_field', wp_unslash( $_REQUEST['users'] ) );
		} elseif ( isset( $_REQUEST['user'] ) ) {
			$user_ids_to_delete[] = sanitize_text_field( wp_unslash( $_REQUEST['user'] ) );
		}

		// phpcs:enable
		$user_ids_to_delete        = array_map( 'absint', $user_ids_to_delete );
		$deleting_connection_owner = in_array( $connection_owner_id, (array) $user_ids_to_delete, true );
		if ( ! $deleting_connection_owner ) {
			return;
		}

		// Bail if they're trying to delete themselves to avoid confusion.
		if ( get_current_user_id() === $connection_owner_id ) {
			return;
		}

		$tracking = new Tracking();

		// Track it!
		if ( method_exists( $tracking, 'record_user_event' ) ) {
			$tracking->record_user_event( 'delete_connection_owner_notice_view' );
		}

		$connected_admins = $connection_manager->get_connected_users( 'jetpack_disconnect' );
		$user             = is_a( $connection_owner_userdata, 'WP_User' ) ? esc_html( $connection_owner_userdata->data->user_login ) : '';

		echo "<div class='notice notice-warning' id='jetpack-notice-switch-connection-owner'>";
		echo '<h2>' . esc_html__( 'Important notice about your Jetpack connection:', 'jetpack-connection' ) . '</h2>';
		echo '<p>' . sprintf(
			/* translators: WordPress User, if available. */
			esc_html__( 'Warning! You are about to delete the Jetpack connection owner (%s) for this site, which may cause some of your Jetpack features to stop working.', 'jetpack-connection' ),
			esc_html( $user )
		) . '</p>';

		if ( ! empty( $connected_admins ) && count( $connected_admins ) > 1 ) {
			echo '<form id="jp-switch-connection-owner" action="" method="post">';
			echo "<label for='owner'>" . esc_html__( 'You can choose to transfer connection ownership to one of these already-connected admins:', 'jetpack-connection' ) . ' </label>';

			$connected_admin_ids = array_map(
				function ( $connected_admin ) {
					return $connected_admin->ID;
				},
				$connected_admins
			);

			wp_dropdown_users(
				array(
					'name'    => 'owner',
					'include' => array_diff( $connected_admin_ids, array( $connection_owner_id ) ),
					'show'    => 'display_name_with_login',
				)
			);

			echo '<p>';
			submit_button( esc_html__( 'Set new connection owner', 'jetpack-connection' ), 'primary', 'jp-switch-connection-owner-submit', false );
			echo '</p>';

			echo "<div id='jp-switch-user-results'></div>";
			echo '</form>';
			?>
			<script type="text/javascript">
				( function() {
					const switchOwnerButton = document.getElementById('jp-switch-connection-owner');
					if ( ! switchOwnerButton ) {
						return;
					}

					switchOwnerButton.addEventListener( 'submit', function ( e ) {
						e.preventDefault();

						const submitBtn = document.getElementById('jp-switch-connection-owner-submit');
						submitBtn.disabled = true;

						const results = document.getElementById('jp-switch-user-results');
						results.innerHTML = '';
						results.classList.remove( 'error-message' );

						const handleAPIError = ( message ) => {
							submitBtn.disabled = false;

							results.classList.add( 'error-message' );
							results.innerHTML = message || "<?php esc_html_e( 'Something went wrong. Please try again.', 'jetpack-connection' ); ?>";
						}

						fetch(
							<?php echo wp_json_encode( esc_url_raw( get_rest_url() . 'jetpack/v4/connection/owner' ), JSON_HEX_TAG | JSON_HEX_AMP ); ?>,
							{
								method: 'POST',
								headers: {
									'X-WP-Nonce': <?php echo wp_json_encode( wp_create_nonce( 'wp_rest' ), JSON_HEX_TAG | JSON_HEX_AMP ); ?>,
								},
								body: new URLSearchParams( new FormData( this ) ),
							}
						)
							.then( response => response.json() )
							.then( data => {
								if ( data.hasOwnProperty( 'code' ) && data.code === 'success' ) {
									// Owner successfully changed.
									results.innerHTML = <?php echo wp_json_encode( esc_html__( 'Success!', 'jetpack-connection' ), JSON_HEX_TAG | JSON_HEX_AMP ); ?>;
									setTimeout(function () {
										document.getElementById( 'jetpack-notice-switch-connection-owner' ).style.display = 'none';
									}, 1000);

									return;
								}

								handleAPIError( data?.message );
							} )
							.catch( () => handleAPIError() );
					});
				} )();
			</script>
			<?php
		} else {
			echo '<p>' . esc_html__( 'Every Jetpack site needs at least one connected admin for the features to work properly. Please connect to your WordPress.com account via the button below. Once you connect, you may refresh this page to see an option to change the connection owner.', 'jetpack-connection' ) . '</p>';
			$connect_url = $connection_manager->get_authorization_url();
			$connect_url = add_query_arg( 'from', 'delete_connection_owner_notice', $connect_url );
			echo "<a href='" . esc_url( $connect_url ) . "' target='_blank' rel='noopener noreferrer' class='button-primary'>" . esc_html__( 'Connect to WordPress.com', 'jetpack-connection' ) . '</a>';
		}

		echo '<p>';
		printf(
			wp_kses(
			/* translators: URL to Jetpack support doc regarding the primary user. */
				__( "<a href='%s' target='_blank' rel='noopener noreferrer'>Learn more</a> about the connection owner and what will break if you do not have one.", 'jetpack-connection' ),
				array(
					'a' => array(
						'href'   => true,
						'target' => true,
						'rel'    => true,
					),
				)
			),
			esc_url( Redirect::get_url( 'jetpack-support-primary-user' ) )
		);
		echo '</p>';
		echo '<p>';
		printf(
			wp_kses(
			/* translators: URL to contact Jetpack support. */
				__( 'As always, feel free to <a href="%s" target="_blank" rel="noopener noreferrer">contact our support team</a> if you have any questions.', 'jetpack-connection' ),
				array(
					'a' => array(
						'href'   => true,
						'target' => true,
						'rel'    => true,
					),
				)
			),
			esc_url( Redirect::get_url( 'jetpack-contact-support' ) )
		);
		echo '</p>';
		echo '</div>';
	}
}
class-error-handler.php                                                                                                                                                                                                                                        22230         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Jetpack Connection error class file.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

/**
 * The Jetpack Connection Errors that handles errors
 *
 * This class handles the following workflow:
 *
 * 1. A XML-RCP request with an invalid signature triggers a error
 * 2. Applies a gate to only process each error code once an hour to avoid overflow
 * 3. It stores the error on the database, but we don't know yet if this is a valid error, because
 *    we can't confirm it came from WP.com.
 * 4. It encrypts the error details and send it to thw wp.com server
 * 5. wp.com checks it and, if valid, sends a new request back to this site using the verify_xml_rpc_error REST endpoint
 * 6. This endpoint add this error to the Verified errors in the database
 * 7. Triggers a workflow depending on the error (display user an error message, do some self healing, etc.)
 *
 * Errors are stored in the database as options in the following format:
 *
 * [
 *   $error_code => [
 *     $user_id => [
 *       $error_details
 *     ]
 *   ]
 * ]
 *
 * For each error code we store a maximum of 5 errors for 5 different user ids.
 *
 * An user ID can be
 * * 0 for blog tokens
 * * positive integer for user tokens
 * * 'invalid' for malformed tokens
 *
 * @since 1.14.2
 */
class Error_Handler {

	/**
	 * The name of the option that stores the errors
	 *
	 * @since 1.14.2
	 *
	 * @var string
	 */
	const STORED_ERRORS_OPTION = 'jetpack_connection_xmlrpc_errors';

	/**
	 * The name of the option that stores the errors
	 *
	 * @since 1.14.2
	 *
	 * @var string
	 */
	const STORED_VERIFIED_ERRORS_OPTION = 'jetpack_connection_xmlrpc_verified_errors';

	/**
	 * The prefix of the transient that controls the gate for each error code
	 *
	 * @since 1.14.2
	 *
	 * @var string
	 */
	const ERROR_REPORTING_GATE = 'jetpack_connection_error_reporting_gate_';

	/**
	 * Time in seconds a test should live in the database before being discarded
	 *
	 * @since 1.14.2
	 */
	const ERROR_LIFE_TIME = DAY_IN_SECONDS;

	/**
	 * The error code for event tracking purposes.
	 * If there are many, only the first error code will be tracked.
	 *
	 * @var string
	 */
	private $error_code;

	/**
	 * List of known errors. Only error codes in this list will be handled
	 *
	 * @since 1.14.2
	 *
	 * @var array
	 */
	public $known_errors = array(
		'malformed_token',
		'malformed_user_id',
		'unknown_user',
		'no_user_tokens',
		'empty_master_user_option',
		'no_token_for_user',
		'token_malformed',
		'user_id_mismatch',
		'no_possible_tokens',
		'no_valid_user_token',
		'no_valid_blog_token',
		'unknown_token',
		'could_not_sign',
		'invalid_scheme',
		'invalid_secret',
		'invalid_token',
		'token_mismatch',
		'invalid_body',
		'invalid_signature',
		'invalid_body_hash',
		'invalid_nonce',
		'signature_mismatch',
		'invalid_connection_owner',
	);

	/**
	 * Holds the instance of this singleton class
	 *
	 * @since 1.14.2
	 *
	 * @var Error_Handler $instance
	 */
	public static $instance = null;

	/**
	 * Initialize instance, hookds and load verified errors handlers
	 *
	 * @since 1.14.2
	 */
	private function __construct() {
		defined( 'JETPACK__ERRORS_PUBLIC_KEY' ) || define( 'JETPACK__ERRORS_PUBLIC_KEY', 'KdZY80axKX+nWzfrOcizf0jqiFHnrWCl9X8yuaClKgM=' );

		add_action( 'rest_api_init', array( $this, 'register_verify_error_endpoint' ) );

		$this->handle_verified_errors();

		// If the site gets reconnected, clear errors.
		add_action( 'jetpack_site_registered', array( $this, 'delete_all_errors' ) );
		add_action( 'jetpack_get_site_data_success', array( $this, 'delete_all_api_errors' ) );
		add_filter( 'jetpack_connection_disconnect_site_wpcom', array( $this, 'delete_all_errors_and_return_unfiltered_value' ) );
		add_filter( 'jetpack_connection_delete_all_tokens', array( $this, 'delete_all_errors_and_return_unfiltered_value' ) );
		add_action( 'jetpack_unlinked_user', array( $this, 'delete_all_errors' ) );
		add_action( 'jetpack_updated_user_token', array( $this, 'delete_all_errors' ) );
	}

	/**
	 * Gets the list of verified errors and act upon them
	 *
	 * @since 1.14.2
	 *
	 * @return void
	 */
	public function handle_verified_errors() {
		$verified_errors = $this->get_verified_errors();
		foreach ( array_keys( $verified_errors ) as $error_code ) {
			switch ( $error_code ) {
				case 'malformed_token':
				case 'token_malformed':
				case 'no_possible_tokens':
				case 'no_valid_user_token':
				case 'no_valid_blog_token':
				case 'unknown_token':
				case 'could_not_sign':
				case 'invalid_token':
				case 'token_mismatch':
				case 'invalid_signature':
				case 'signature_mismatch':
				case 'no_user_tokens':
				case 'no_token_for_user':
				case 'invalid_connection_owner':
					add_action( 'admin_notices', array( $this, 'generic_admin_notice_error' ) );
					add_action( 'react_connection_errors_initial_state', array( $this, 'jetpack_react_dashboard_error' ) );
					$this->error_code = $error_code;

					// Since we are only generically handling errors, we don't need to trigger error messages for each one of them.
					break 2;
			}
		}
	}

	/**
	 * Gets the instance of this singleton class
	 *
	 * @since 1.14.2
	 *
	 * @return Error_Handler $instance
	 */
	public static function get_instance() {
		if ( self::$instance === null ) {
			self::$instance = new self();
		}
		return self::$instance;
	}

	/**
	 * Keep track of a connection error that was encountered
	 *
	 * @param \WP_Error $error  The error object.
	 * @param boolean   $force  Force the report, even if should_report_error is false.
	 * @param boolean   $skip_wpcom_verification Set to 'true' to verify the error locally and skip the WP.com verification.
	 *
	 * @return void
	 * @since 1.14.2
	 */
	public function report_error( \WP_Error $error, $force = false, $skip_wpcom_verification = false ) {
		if ( in_array( $error->get_error_code(), $this->known_errors, true ) && $this->should_report_error( $error ) || $force ) {
			$stored_error = $this->store_error( $error );
			if ( $stored_error ) {
				$skip_wpcom_verification ? $this->verify_error( $stored_error ) : $this->send_error_to_wpcom( $stored_error );
			}
		}
	}

	/**
	 * Checks the status of the gate
	 *
	 * This protects the site (and WPCOM) against over loads.
	 *
	 * @since 1.14.2
	 *
	 * @param \WP_Error $error the error object.
	 * @return boolean $should_report True if gate is open and the error should be reported.
	 */
	public function should_report_error( \WP_Error $error ) {
		if ( defined( 'JETPACK_DEV_DEBUG' ) && JETPACK_DEV_DEBUG ) {
			return true;
		}

		/**
		 * Whether to bypass the gate for the error handling
		 *
		 * By default, we only process errors once an hour for each error code.
		 * This is done to avoid overflows. If you need to disable this gate, you can set this variable to true.
		 *
		 * This filter is useful for unit testing
		 *
		 * @since 1.14.2
		 *
		 * @param boolean $bypass_gate whether to bypass the gate. Default is false, do not bypass.
		 */
		$bypass_gate = apply_filters( 'jetpack_connection_bypass_error_reporting_gate', false );
		if ( true === $bypass_gate ) {
			return true;
		}

		$transient = self::ERROR_REPORTING_GATE . $error->get_error_code();

		if ( get_transient( $transient ) ) {
			return false;
		}

		set_transient( $transient, true, HOUR_IN_SECONDS );
		return true;
	}

	/**
	 * Stores the error in the database so we know there is an issue and can inform the user
	 *
	 * @since 1.14.2
	 *
	 * @param \WP_Error $error the error object.
	 * @return boolean|array False if stored errors were not updated and the error array if it was successfully stored.
	 */
	public function store_error( \WP_Error $error ) {

		$stored_errors = $this->get_stored_errors();
		$error_array   = $this->wp_error_to_array( $error );
		$error_code    = $error->get_error_code();
		$user_id       = $error_array['user_id'];

		if ( ! isset( $stored_errors[ $error_code ] ) || ! is_array( $stored_errors[ $error_code ] ) ) {
			$stored_errors[ $error_code ] = array();
		}

		$stored_errors[ $error_code ][ $user_id ] = $error_array;

		// Let's store a maximum of 5 different user ids for each error code.
		$error_code_count = is_countable( $stored_errors[ $error_code ] ) ? count( $stored_errors[ $error_code ] ) : 0;
		if ( $error_code_count > 5 ) {
			// array_shift will destroy keys here because they are numeric, so manually remove first item.
			$keys = array_keys( $stored_errors[ $error_code ] );
			unset( $stored_errors[ $error_code ][ $keys[0] ] );
		}

		if ( update_option( self::STORED_ERRORS_OPTION, $stored_errors ) ) {
			return $error_array;
		}

		return false;
	}

	/**
	 * Converts a WP_Error object in the array representation we store in the database
	 *
	 * @since 1.14.2
	 *
	 * @param \WP_Error $error the error object.
	 * @return boolean|array False if error is invalid or the error array
	 */
	public function wp_error_to_array( \WP_Error $error ) {

		$data = $error->get_error_data();

		if ( ! isset( $data['signature_details'] ) || ! is_array( $data['signature_details'] ) ) {
			return false;
		}

		$signature_details = $data['signature_details'];

		if ( ! isset( $signature_details['token'] ) ) {
			return false;
		}

		$user_id = $this->get_user_id_from_token( $signature_details['token'] );

		$error_array = array(
			'error_code'    => $error->get_error_code(),
			'user_id'       => $user_id,
			'error_message' => $error->get_error_message(),
			'error_data'    => $signature_details,
			'timestamp'     => time(),
			'nonce'         => wp_generate_password( 10, false ),
			'error_type'    => empty( $data['error_type'] ) ? '' : $data['error_type'],
		);

		return $error_array;
	}

	/**
	 * Sends the error to WP.com to be verified
	 *
	 * @since 1.14.2
	 *
	 * @param array $error_array The array representation of the error as it is stored in the database.
	 * @return bool
	 */
	public function send_error_to_wpcom( $error_array ) {

		$blog_id = \Jetpack_Options::get_option( 'id' );

		$encrypted_data = $this->encrypt_data_to_wpcom( $error_array );

		if ( false === $encrypted_data ) {
			return false;
		}

		$args = array(
			'body' => array(
				'error_data' => $encrypted_data,
			),
		);

		// send encrypted data to WP.com Public-API v2.
		wp_remote_post( "https://public-api.wordpress.com/wpcom/v2/sites/{$blog_id}/jetpack-report-error/", $args );
		return true;
	}

	/**
	 * Encrypt data to be sent over to WP.com
	 *
	 * @since 1.14.2
	 *
	 * @param array|string $data the data to be encoded.
	 * @return boolean|string The encoded string on success, false on failure
	 */
	public function encrypt_data_to_wpcom( $data ) {

		try {
			// phpcs:disable WordPress.PHP.DiscouragedPHPFunctions.obfuscation_base64_decode
			// phpcs:disable WordPress.PHP.DiscouragedPHPFunctions.obfuscation_base64_encode
			$encrypted_data = base64_encode( sodium_crypto_box_seal( wp_json_encode( $data ), base64_decode( JETPACK__ERRORS_PUBLIC_KEY ) ) );
			// phpcs:enable WordPress.PHP.DiscouragedPHPFunctions.obfuscation_base64_decode
			// phpcs:enable WordPress.PHP.DiscouragedPHPFunctions.obfuscation_base64_encode
		} catch ( \SodiumException $e ) {
			// error encrypting data.
			return false;
		}

		return $encrypted_data;
	}

	/**
	 * Extracts the user ID from a token
	 *
	 * @since 1.14.2
	 *
	 * @param string $token the token used to make the request.
	 * @return string $the user id or `invalid` if user id not present.
	 */
	public function get_user_id_from_token( $token ) {
		$user_id = 'invalid';

		if ( $token ) {
			$parsed_token = explode( ':', wp_unslash( $token ) );

			if ( isset( $parsed_token[2] ) && ctype_digit( $parsed_token[2] ) ) {
				$user_id = $parsed_token[2];
			}
		}

		return $user_id;
	}

	/**
	 * Gets the reported errors stored in the database
	 *
	 * @since 1.14.2
	 *
	 * @return array $errors
	 */
	public function get_stored_errors() {

		$stored_errors = get_option( self::STORED_ERRORS_OPTION );

		if ( ! is_array( $stored_errors ) ) {
			$stored_errors = array();
		}

		$stored_errors = $this->garbage_collector( $stored_errors );

		return $stored_errors;
	}

	/**
	 * Gets the verified errors stored in the database
	 *
	 * @since 1.14.2
	 *
	 * @return array $errors
	 */
	public function get_verified_errors() {

		$verified_errors = get_option( self::STORED_VERIFIED_ERRORS_OPTION );

		if ( ! is_array( $verified_errors ) ) {
			$verified_errors = array();
		}

		$verified_errors = $this->garbage_collector( $verified_errors );

		return $verified_errors;
	}

	/**
	 * Removes expired errors from the array
	 *
	 * This method is called by get_stored_errors and get_verified errors and filters their result
	 * Whenever a new error is stored to the database or verified, this will be triggered and the
	 * expired error will be permantently removed from the database
	 *
	 * @since 1.14.2
	 *
	 * @param array $errors array of errors as stored in the database.
	 * @return array
	 */
	private function garbage_collector( $errors ) {
		foreach ( $errors as $error_code => $users ) {
			foreach ( $users as $user_id => $error ) {
				if ( self::ERROR_LIFE_TIME < time() - (int) $error['timestamp'] ) {
					unset( $errors[ $error_code ][ $user_id ] );
				}
			}
		}
		// Clear empty error codes.
		$errors = array_filter(
			$errors,
			function ( $user_errors ) {
				return ! empty( $user_errors );
			}
		);
		return $errors;
	}

	/**
	 * Delete all stored and verified errors from the database
	 *
	 * @since 1.14.2
	 *
	 * @return void
	 */
	public function delete_all_errors() {
		$this->delete_stored_errors();
		$this->delete_verified_errors();
	}

	/**
	 * Delete all stored and verified API errors from the database, leave the non-API errors intact.
	 *
	 * @since 1.54.0
	 *
	 * @return void
	 */
	public function delete_all_api_errors() {
		$type_filter = function ( $errors ) {
			if ( is_array( $errors ) ) {
				foreach ( $errors as $key => $error ) {
					if ( ! empty( $error['error_type'] ) && in_array( $error['error_type'], array( 'xmlrpc', 'rest' ), true ) ) {
						unset( $errors[ $key ] );
					}
				}
			}

			return count( $errors ) ? $errors : null;
		};

		$stored_errors = $this->get_stored_errors();
		if ( is_array( $stored_errors ) && count( $stored_errors ) ) {
			$stored_errors = array_filter( array_map( $type_filter, $stored_errors ) );
			if ( count( $stored_errors ) ) {
				update_option( static::STORED_ERRORS_OPTION, $stored_errors );
			} else {
				delete_option( static::STORED_ERRORS_OPTION );
			}
		}

		$verified_errors = $this->get_verified_errors();
		if ( is_array( $verified_errors ) && count( $verified_errors ) ) {
			$verified_errors = array_filter( array_map( $type_filter, $verified_errors ) );
			if ( count( $verified_errors ) ) {
				update_option( static::STORED_VERIFIED_ERRORS_OPTION, $verified_errors );
			} else {
				delete_option( static::STORED_VERIFIED_ERRORS_OPTION );
			}
		}
	}

	/**
	 * Delete all stored and verified errors from the database and returns unfiltered value
	 *
	 * This is used to hook into a couple of filters that expect true to not short circuit the disconnection flow
	 *
	 * @since 8.9.0
	 *
	 * @param mixed $check The input sent by the filter.
	 * @return boolean
	 */
	public function delete_all_errors_and_return_unfiltered_value( $check ) {
		$this->delete_all_errors();
		return $check;
	}

	/**
	 * Delete the reported errors stored in the database
	 *
	 * @since 1.14.2
	 *
	 * @return boolean True, if option is successfully deleted. False on failure.
	 */
	public function delete_stored_errors() {
		return delete_option( self::STORED_ERRORS_OPTION );
	}

	/**
	 * Delete the verified errors stored in the database
	 *
	 * @since 1.14.2
	 *
	 * @return boolean True, if option is successfully deleted. False on failure.
	 */
	public function delete_verified_errors() {
		return delete_option( self::STORED_VERIFIED_ERRORS_OPTION );
	}

	/**
	 * Gets an error based on the nonce
	 *
	 * Receives a nonce and finds the related error.
	 *
	 * @since 1.14.2
	 *
	 * @param string $nonce The nonce created for the error we want to get.
	 * @return null|array Returns the error array representation or null if error not found.
	 */
	public function get_error_by_nonce( $nonce ) {
		$errors = $this->get_stored_errors();
		foreach ( $errors as $user_group ) {
			foreach ( $user_group as $error ) {
				if ( $error['nonce'] === $nonce ) {
					return $error;
				}
			}
		}
		return null;
	}

	/**
	 * Adds an error to the verified error list
	 *
	 * @since 1.14.2
	 *
	 * @param array $error The error array, as it was saved in the unverified errors list.
	 * @return void
	 */
	public function verify_error( $error ) {

		$verified_errors = $this->get_verified_errors();
		$error_code      = $error['error_code'];
		$user_id         = $error['user_id'];

		if ( ! isset( $verified_errors[ $error_code ] ) ) {
			$verified_errors[ $error_code ] = array();
		}

		$verified_errors[ $error_code ][ $user_id ] = $error;

		update_option( self::STORED_VERIFIED_ERRORS_OPTION, $verified_errors );
	}

	/**
	 * Register REST API end point for error hanlding.
	 *
	 * @since 1.14.2
	 *
	 * @return void
	 */
	public function register_verify_error_endpoint() {
		register_rest_route(
			'jetpack/v4',
			'/verify_xmlrpc_error',
			array(
				'methods'             => \WP_REST_Server::CREATABLE,
				'callback'            => array( $this, 'verify_xml_rpc_error' ),
				'permission_callback' => '__return_true',
				'args'                => array(
					'nonce' => array(
						'required' => true,
						'type'     => 'string',
					),
				),
			)
		);
	}

	/**
	 * Handles verification that a xml rpc error is legit and came from WordPres.com
	 *
	 * @since 1.14.2
	 *
	 * @param \WP_REST_Request $request The request sent to the WP REST API.
	 *
	 * @return boolean
	 */
	public function verify_xml_rpc_error( \WP_REST_Request $request ) {
		$error = $this->get_error_by_nonce( $request['nonce'] );

		if ( $error ) {
			$this->verify_error( $error );
			return new \WP_REST_Response( true, 200 );
		}

		return new \WP_REST_Response( false, 200 );
	}

	/**
	 * Prints a generic error notice for all connection errors
	 *
	 * @since 8.9.0
	 *
	 * @return void
	 */
	public function generic_admin_notice_error() {
		// do not add admin notice to the jetpack dashboard.
		global $pagenow;
		if ( 'admin.php' === $pagenow || isset( $_GET['page'] ) && 'jetpack' === $_GET['page'] ) { // phpcs:ignore
			return;
		}

		if ( ! current_user_can( 'jetpack_connect' ) ) {
			return;
		}

		/**
		 * Filters the message to be displayed in the admin notices area when there's a connection error.
		 *
		 * By default  we don't display any errors.
		 *
		 * Return an empty value to disable the message.
		 *
		 * @since 8.9.0
		 *
		 * @param string $message The error message.
		 * @param array  $errors The array of errors. See Automattic\Jetpack\Connection\Error_Handler for details on the array structure.
		 */
		$message = apply_filters( 'jetpack_connection_error_notice_message', '', $this->get_verified_errors() );

		/**
		 * Fires inside the admin_notices hook just before displaying the error message for a broken connection.
		 *
		 * If you want to disable the default message from being displayed, return an emtpy value in the jetpack_connection_error_notice_message filter.
		 *
		 * @since 8.9.0
		 *
		 * @param array $errors The array of errors. See Automattic\Jetpack\Connection\Error_Handler for details on the array structure.
		 */
		do_action( 'jetpack_connection_error_notice', $this->get_verified_errors() );

		if ( empty( $message ) ) {
			return;
		}

		?>
		<div class="notice notice-error is-dismissible jetpack-message jp-connect" style="display:block !important;">
			<p><?php echo esc_html( $message ); ?></p>
		</div>
		<?php
	}

	/**
	 * Adds the error message to the Jetpack React Dashboard
	 *
	 * @since 8.9.0
	 *
	 * @param array $errors The array of errors. See Automattic\Jetpack\Connection\Error_Handler for details on the array structure.
	 * @return array
	 */
	public function jetpack_react_dashboard_error( $errors ) {
		$errors[] = array(
			'code'    => 'connection_error',
			'message' => __( 'Your connection with WordPress.com seems to be broken. If you\'re experiencing issues, please try reconnecting.', 'jetpack-connection' ),
			'action'  => 'reconnect',
			'data'    => array( 'api_error_code' => $this->error_code ),
		);
		return $errors;
	}

	/**
	 * Check REST API response for errors, and report them to WP.com if needed.
	 *
	 * @see wp_remote_request() For more information on the $http_response array format.
	 * @param array|\WP_Error $http_response The response or WP_Error on failure.
	 * @param array           $auth_data Auth data, allowed keys: `token`, `timestamp`, `nonce`, `body-hash`.
	 * @param string          $url Request URL.
	 * @param string          $method Request method.
	 * @param string          $error_type The source of an error: 'xmlrpc' or 'rest'.
	 *
	 * @return void
	 */
	public function check_api_response_for_errors( $http_response, $auth_data, $url, $method, $error_type ) {
		if ( 200 === wp_remote_retrieve_response_code( $http_response ) || ! is_array( $auth_data ) || ! $url || ! $method ) {
			return;
		}

		$body_raw = wp_remote_retrieve_body( $http_response );
		if ( ! $body_raw ) {
			return;
		}

		$body = json_decode( $body_raw, true );
		if ( empty( $body['error'] ) || ( ! is_string( $body['error'] ) && ! is_int( $body['error'] ) ) ) {
			return;
		}

		$error = new \WP_Error(
			$body['error'],
			empty( $body['message'] ) ? '' : $body['message'],
			array(
				'signature_details' => array(
					'token'     => empty( $auth_data['token'] ) ? '' : $auth_data['token'],
					'timestamp' => empty( $auth_data['timestamp'] ) ? '' : $auth_data['timestamp'],
					'nonce'     => empty( $auth_data['nonce'] ) ? '' : $auth_data['nonce'],
					'body_hash' => empty( $auth_data['body_hash'] ) ? '' : $auth_data['body_hash'],
					'method'    => $method,
					'url'       => $url,
				),
				'error_type'        => in_array( $error_type, array( 'xmlrpc', 'rest' ), true ) ? $error_type : '',
			)
		);

		$this->report_error( $error, false, true );
	}
}
class-heartbeat.php                                                                                                                                                                                                                                            6395          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * Jetpack Heartbeat package.
 *
 * @package  automattic/jetpack-connection
 */

namespace Automattic\Jetpack;

use Jetpack_Options;
use WP_CLI;

/**
 * Heartbeat sends a batch of stats to wp.com once a day
 */
class Heartbeat {

	/**
	 * Holds the singleton instance of this class
	 *
	 * @since 1.0.0
	 * @since-jetpack 2.3.3
	 * @var Heartbeat
	 */
	private static $instance = false;

	/**
	 * Cronjob identifier
	 *
	 * @var string
	 */
	private $cron_name = 'jetpack_v2_heartbeat';

	/**
	 * Singleton
	 *
	 * @since 1.0.0
	 * @since-jetpack 2.3.3
	 * @static
	 * @return Heartbeat
	 */
	public static function init() {
		if ( ! self::$instance ) {
			self::$instance = new Heartbeat();
		}

		return self::$instance;
	}

	/**
	 * Constructor for singleton
	 *
	 * @since 1.0.0
	 * @since-jetpack 2.3.3
	 */
	private function __construct() {

		// Schedule the task.
		add_action( $this->cron_name, array( $this, 'cron_exec' ) );

		if ( ! wp_next_scheduled( $this->cron_name ) ) {
			// Deal with the old pre-3.0 weekly one.
			$timestamp = wp_next_scheduled( 'jetpack_heartbeat' );
			if ( $timestamp ) {
				wp_unschedule_event( $timestamp, 'jetpack_heartbeat' );
			}

			wp_schedule_event( time(), 'daily', $this->cron_name );
		}

		add_filter( 'jetpack_xmlrpc_unauthenticated_methods', array( __CLASS__, 'jetpack_xmlrpc_methods' ) );

		if ( defined( 'WP_CLI' ) && WP_CLI ) {
			WP_CLI::add_command( 'jetpack-heartbeat', array( $this, 'cli_callback' ) );
		}
	}

	/**
	 * Method that gets executed on the wp-cron call
	 *
	 * @since 1.0.0
	 * @since-jetpack 2.3.3
	 * @global string $wp_version
	 */
	public function cron_exec() {

		$a8c_mc_stats = new A8c_Mc_Stats();

		/*
		 * This should run daily.  Figuring in for variances in
		 * WP_CRON, don't let it run more than every 23 hours at most.
		 *
		 * i.e. if it ran less than 23 hours ago, fail out.
		 */
		$last = (int) Jetpack_Options::get_option( 'last_heartbeat' );
		if ( $last && ( $last + DAY_IN_SECONDS - HOUR_IN_SECONDS > time() ) ) {
			return;
		}

		/*
		 * Check for an identity crisis
		 *
		 * If one exists:
		 * - Bump stat for ID crisis
		 * - Email site admin about potential ID crisis
		 */

		// Coming Soon!

		foreach ( self::generate_stats_array( 'v2-' ) as $key => $value ) {
			if ( is_array( $value ) ) {
				foreach ( $value as $v ) {
					$a8c_mc_stats->add( $key, (string) $v );
				}
			} else {
				$a8c_mc_stats->add( $key, (string) $value );
			}
		}

		Jetpack_Options::update_option( 'last_heartbeat', time() );

		$a8c_mc_stats->do_server_side_stats();

		/**
		 * Fires when we synchronize all registered options on heartbeat.
		 *
		 * @since 3.3.0
		 */
		do_action( 'jetpack_heartbeat' );
	}

	/**
	 * Generates heartbeat stats data.
	 *
	 * @param string $prefix Prefix to add before stats identifier.
	 *
	 * @return array The stats array.
	 */
	public static function generate_stats_array( $prefix = '' ) {

		/**
		 * This filter is used to build the array of stats that are bumped once a day by Jetpack Heartbeat.
		 *
		 * Filter the array and add key => value pairs where
		 * * key is the stat group name
		 * * value is the stat name.
		 *
		 * Example:
		 * add_filter( 'jetpack_heartbeat_stats_array', function( $stats ) {
		 *    $stats['is-https'] = is_ssl() ? 'https' : 'http';
		 * });
		 *
		 * This will bump the stats for the 'is-https/https' or 'is-https/http' stat.
		 *
		 * @param array  $stats The stats to be filtered.
		 * @param string $prefix The prefix that will automatically be added at the begining at each stat group name.
		 */
		$stats  = apply_filters( 'jetpack_heartbeat_stats_array', array(), $prefix );
		$return = array();

		// Apply prefix to stats.
		foreach ( $stats as $stat => $value ) {
			$return[ "$prefix$stat" ] = $value;
		}

		return $return;
	}

	/**
	 * Registers jetpack.getHeartbeatData xmlrpc method
	 *
	 * @param array $methods The list of methods to be filtered.
	 * @return array $methods
	 */
	public static function jetpack_xmlrpc_methods( $methods ) {
		$methods['jetpack.getHeartbeatData'] = array( __CLASS__, 'xmlrpc_data_response' );
		return $methods;
	}

	/**
	 * Handles the response for the jetpack.getHeartbeatData xmlrpc method
	 *
	 * @param array $params The parameters received in the request.
	 * @return array $params all the stats that heartbeat handles.
	 */
	public static function xmlrpc_data_response( $params = array() ) {
		// The WordPress XML-RPC server sets a default param of array()
		// if no argument is passed on the request and the method handlers get this array in $params.
		// generate_stats_array() needs a string as first argument.
		$params = empty( $params ) ? '' : $params;
		return self::generate_stats_array( $params );
	}

	/**
	 * Clear scheduled events
	 *
	 * @return void
	 */
	public function deactivate() {
		// Deal with the old pre-3.0 weekly one.
		$timestamp = wp_next_scheduled( 'jetpack_heartbeat' );
		if ( $timestamp ) {
			wp_unschedule_event( $timestamp, 'jetpack_heartbeat' );
		}

		$timestamp = wp_next_scheduled( $this->cron_name );
		wp_unschedule_event( $timestamp, $this->cron_name );
	}

	/**
	 * Interact with the Heartbeat
	 *
	 * ## OPTIONS
	 *
	 * inspect (default): Gets the list of data that is going to be sent in the heartbeat and the date/time of the last heartbeat
	 *
	 * @param array $args Arguments passed via CLI.
	 *
	 * @return void
	 */
	public function cli_callback( $args ) {

		$allowed_args = array(
			'inspect',
		);

		if ( isset( $args[0] ) && ! in_array( $args[0], $allowed_args, true ) ) {
			/* translators: %s is a command like "prompt" */
			WP_CLI::error( sprintf( __( '%s is not a valid command.', 'jetpack-connection' ), $args[0] ) );
		}

		$stats           = self::generate_stats_array();
		$formatted_stats = array();

		foreach ( $stats as $stat_name => $bin ) {
			$formatted_stats[] = array(
				'Stat name' => $stat_name,
				'Bin'       => $bin,
			);
		}

		WP_CLI\Utils\format_items( 'table', $formatted_stats, array( 'Stat name', 'Bin' ) );

		$last_heartbeat = Jetpack_Options::get_option( 'last_heartbeat' );

		if ( $last_heartbeat ) {
			$last_date = gmdate( 'Y-m-d H:i:s', $last_heartbeat );
			/* translators: %s is the full datetime of the last heart beat e.g. 2020-01-01 12:21:23 */
			WP_CLI::line( sprintf( __( 'Last heartbeat sent at: %s', 'jetpack-connection' ), $last_date ) );
		}
	}
}
class-initial-state.php                                                                                                                                                                                                                                        1716          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The React initial state.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

use Automattic\Jetpack\Status;

/**
 * The React initial state.
 */
class Initial_State {

	/**
	 * Get the initial state data.
	 *
	 * @return array
	 */
	private static function get_data() {
		global $wp_version;

		$status = new Status();

		return array(
			'apiRoot'            => esc_url_raw( rest_url() ),
			'apiNonce'           => wp_create_nonce( 'wp_rest' ),
			'registrationNonce'  => wp_create_nonce( 'jetpack-registration-nonce' ),
			'connectionStatus'   => REST_Connector::connection_status( false ),
			'userConnectionData' => REST_Connector::get_user_connection_data( false ),
			'connectedPlugins'   => REST_Connector::get_connection_plugins( false ),
			'wpVersion'          => $wp_version,
			'siteSuffix'         => $status->get_site_suffix(),
			'connectionErrors'   => Error_Handler::get_instance()->get_verified_errors(),
			'isOfflineMode'      => $status->is_offline_mode(),
			'calypsoEnv'         => ( new Status\Host() )->get_calypso_env(),
		);
	}

	/**
	 * Render the initial state into a JavaScript variable.
	 *
	 * @return string
	 */
	public static function render() {
		return 'var JP_CONNECTION_INITIAL_STATE; typeof JP_CONNECTION_INITIAL_STATE === "object" || (JP_CONNECTION_INITIAL_STATE = JSON.parse(decodeURIComponent("' . rawurlencode( wp_json_encode( self::get_data() ) ) . '")));';
	}

	/**
	 * Render the initial state using an inline script.
	 *
	 * @param string $handle The JS script handle.
	 *
	 * @return void
	 */
	public static function render_script( $handle ) {
		wp_add_inline_script( $handle, static::render(), 'before' );
	}
}
class-manager.php                                                                                                                                                                                                                                              80805         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Jetpack Connection manager class file.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

use Automattic\Jetpack\A8c_Mc_Stats;
use Automattic\Jetpack\Constants;
use Automattic\Jetpack\Heartbeat;
use Automattic\Jetpack\Partner;
use Automattic\Jetpack\Roles;
use Automattic\Jetpack\Status;
use Automattic\Jetpack\Status\Host;
use Automattic\Jetpack\Terms_Of_Service;
use Automattic\Jetpack\Tracking;
use Jetpack_IXR_Client;
use Jetpack_Options;
use WP_Error;
use WP_User;

/**
 * The Jetpack Connection Manager class that is used as a single gateway between WordPress.com
 * and Jetpack.
 */
class Manager {
	/**
	 * A copy of the raw POST data for signature verification purposes.
	 *
	 * @var String
	 */
	protected $raw_post_data;

	/**
	 * Verification data needs to be stored to properly verify everything.
	 *
	 * @var Object
	 */
	private $xmlrpc_verification = null;

	/**
	 * Plugin management object.
	 *
	 * @var Plugin
	 */
	private $plugin = null;

	/**
	 * Error handler object.
	 *
	 * @var Error_Handler
	 */
	public $error_handler = null;

	/**
	 * Jetpack_XMLRPC_Server object
	 *
	 * @var Jetpack_XMLRPC_Server
	 */
	public $xmlrpc_server = null;

	/**
	 * Holds extra parameters that will be sent along in the register request body.
	 *
	 * Use Manager::add_register_request_param to add values to this array.
	 *
	 * @since 1.26.0
	 * @var array
	 */
	private static $extra_register_params = array();

	/**
	 * Initialize the object.
	 * Make sure to call the "Configure" first.
	 *
	 * @param string $plugin_slug Slug of the plugin using the connection (optional, but encouraged).
	 *
	 * @see \Automattic\Jetpack\Config
	 */
	public function __construct( $plugin_slug = null ) {
		if ( $plugin_slug && is_string( $plugin_slug ) ) {
			$this->set_plugin_instance( new Plugin( $plugin_slug ) );
		}
	}

	/**
	 * Initializes required listeners. This is done separately from the constructors
	 * because some objects sometimes need to instantiate separate objects of this class.
	 *
	 * @todo Implement a proper nonce verification.
	 */
	public static function configure() {
		$manager = new self();

		add_filter(
			'jetpack_constant_default_value',
			__NAMESPACE__ . '\Utils::jetpack_api_constant_filter',
			10,
			2
		);

		$manager->setup_xmlrpc_handlers(
			$_GET, // phpcs:ignore WordPress.Security.NonceVerification.Recommended
			$manager->has_connected_owner(),
			$manager->verify_xml_rpc_signature()
		);

		$manager->error_handler = Error_Handler::get_instance();

		if ( $manager->is_connected() ) {
			add_filter( 'xmlrpc_methods', array( $manager, 'public_xmlrpc_methods' ) );
			add_filter( 'shutdown', array( new Package_Version_Tracker(), 'maybe_update_package_versions' ) );
		}

		add_action( 'rest_api_init', array( $manager, 'initialize_rest_api_registration_connector' ) );

		( new Nonce_Handler() )->init_schedule();

		add_action( 'plugins_loaded', __NAMESPACE__ . '\Plugin_Storage::configure', 100 );

		add_filter( 'map_meta_cap', array( $manager, 'jetpack_connection_custom_caps' ), 1, 4 );

		Heartbeat::init();
		add_filter( 'jetpack_heartbeat_stats_array', array( $manager, 'add_stats_to_heartbeat' ) );

		Webhooks::init( $manager );

		// Set up package version hook.
		add_filter( 'jetpack_package_versions', __NAMESPACE__ . '\Package_Version::send_package_version_to_tracker' );

		if ( defined( 'JETPACK__SANDBOX_DOMAIN' ) && JETPACK__SANDBOX_DOMAIN ) {
			( new Server_Sandbox() )->init();
		}

		// Initialize connection notices.
		new Connection_Notice();

		// Initialize token locks.
		new Tokens_Locks();

		// Initial Partner management.
		Partner::init();
	}

	/**
	 * Sets up the XMLRPC request handlers.
	 *
	 * @since 1.25.0 Deprecate $is_active param.
	 *
	 * @param array                  $request_params incoming request parameters.
	 * @param bool                   $has_connected_owner Whether the site has a connected owner.
	 * @param bool                   $is_signed whether the signature check has been successful.
	 * @param \Jetpack_XMLRPC_Server $xmlrpc_server (optional) an instance of the server to use instead of instantiating a new one.
	 */
	public function setup_xmlrpc_handlers(
		$request_params,
		$has_connected_owner,
		$is_signed,
		\Jetpack_XMLRPC_Server $xmlrpc_server = null
	) {
		add_filter( 'xmlrpc_blog_options', array( $this, 'xmlrpc_options' ), 1000, 2 );

		if (
			! isset( $request_params['for'] )
			|| 'jetpack' !== $request_params['for']
		) {
			return false;
		}

		// Alternate XML-RPC, via ?for=jetpack&jetpack=comms.
		if (
			isset( $request_params['jetpack'] )
			&& 'comms' === $request_params['jetpack']
		) {
			if ( ! Constants::is_defined( 'XMLRPC_REQUEST' ) ) {
				// Use the real constant here for WordPress' sake.
				define( 'XMLRPC_REQUEST', true );
			}

			add_action( 'template_redirect', array( $this, 'alternate_xmlrpc' ) );

			add_filter( 'xmlrpc_methods', array( $this, 'remove_non_jetpack_xmlrpc_methods' ), 1000 );
		}

		if ( ! Constants::get_constant( 'XMLRPC_REQUEST' ) ) {
			return false;
		}
		// Display errors can cause the XML to be not well formed.
		@ini_set( 'display_errors', false ); // phpcs:ignore

		if ( $xmlrpc_server ) {
			$this->xmlrpc_server = $xmlrpc_server;
		} else {
			$this->xmlrpc_server = new \Jetpack_XMLRPC_Server();
		}

		$this->require_jetpack_authentication();

		if ( $is_signed ) {
			// If the site is connected either at a site or user level and the request is signed, expose the methods.
			// The callback is responsible to determine whether the request is signed with blog or user token and act accordingly.
			// The actual API methods.
			$callback = array( $this->xmlrpc_server, 'xmlrpc_methods' );

			// Hack to preserve $HTTP_RAW_POST_DATA.
			add_filter( 'xmlrpc_methods', array( $this, 'xmlrpc_methods' ) );

		} elseif ( $has_connected_owner && ! $is_signed ) {
			// The jetpack.authorize method should be available for unauthenticated users on a site with an
			// active Jetpack connection, so that additional users can link their account.
			$callback = array( $this->xmlrpc_server, 'authorize_xmlrpc_methods' );
		} else {
			// Any other unsigned request should expose the bootstrap methods.
			$callback = array( $this->xmlrpc_server, 'bootstrap_xmlrpc_methods' );
			new XMLRPC_Connector( $this );
		}

		add_filter( 'xmlrpc_methods', $callback );

		// Now that no one can authenticate, and we're whitelisting all XML-RPC methods, force enable_xmlrpc on.
		add_filter( 'pre_option_enable_xmlrpc', '__return_true' );
		return true;
	}

	/**
	 * Initializes the REST API connector on the init hook.
	 */
	public function initialize_rest_api_registration_connector() {
		new REST_Connector( $this );
	}

	/**
	 * Since a lot of hosts use a hammer approach to "protecting" WordPress sites,
	 * and just blanket block all requests to /xmlrpc.php, or apply other overly-sensitive
	 * security/firewall policies, we provide our own alternate XML RPC API endpoint
	 * which is accessible via a different URI. Most of the below is copied directly
	 * from /xmlrpc.php so that we're replicating it as closely as possible.
	 *
	 * @todo Tighten $wp_xmlrpc_server_class a bit to make sure it doesn't do bad things.
	 */
	public function alternate_xmlrpc() {
		// Some browser-embedded clients send cookies. We don't want them.
		$_COOKIE = array();

		include_once ABSPATH . 'wp-admin/includes/admin.php';
		include_once ABSPATH . WPINC . '/class-IXR.php';
		include_once ABSPATH . WPINC . '/class-wp-xmlrpc-server.php';

		/**
		 * Filters the class used for handling XML-RPC requests.
		 *
		 * @since 1.7.0
		 * @since-jetpack 3.1.0
		 *
		 * @param string $class The name of the XML-RPC server class.
		 */
		$wp_xmlrpc_server_class = apply_filters( 'wp_xmlrpc_server_class', 'wp_xmlrpc_server' );
		$wp_xmlrpc_server       = new $wp_xmlrpc_server_class();

		// Fire off the request.
		nocache_headers();
		$wp_xmlrpc_server->serve_request();

		exit;
	}

	/**
	 * Removes all XML-RPC methods that are not `jetpack.*`.
	 * Only used in our alternate XML-RPC endpoint, where we want to
	 * ensure that Core and other plugins' methods are not exposed.
	 *
	 * @param array $methods a list of registered WordPress XMLRPC methods.
	 * @return array filtered $methods
	 */
	public function remove_non_jetpack_xmlrpc_methods( $methods ) {
		$jetpack_methods = array();

		foreach ( $methods as $method => $callback ) {
			if ( str_starts_with( $method, 'jetpack.' ) ) {
				$jetpack_methods[ $method ] = $callback;
			}
		}

		return $jetpack_methods;
	}

	/**
	 * Removes all other authentication methods not to allow other
	 * methods to validate unauthenticated requests.
	 */
	public function require_jetpack_authentication() {
		// Don't let anyone authenticate.
		$_COOKIE = array();
		remove_all_filters( 'authenticate' );
		remove_all_actions( 'wp_login_failed' );

		if ( $this->is_connected() ) {
			// Allow Jetpack authentication.
			add_filter( 'authenticate', array( $this, 'authenticate_jetpack' ), 10, 3 );
		}
	}

	/**
	 * Authenticates XML-RPC and other requests from the Jetpack Server
	 *
	 * @param WP_User|Mixed $user user object if authenticated.
	 * @param String        $username username.
	 * @param String        $password password string.
	 * @return WP_User|Mixed authenticated user or error.
	 */
	public function authenticate_jetpack( $user, $username, $password ) { // phpcs:ignore VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable
		if ( is_a( $user, '\\WP_User' ) ) {
			return $user;
		}

		$token_details = $this->verify_xml_rpc_signature();

		if ( ! $token_details ) {
			return $user;
		}

		if ( 'user' !== $token_details['type'] ) {
			return $user;
		}

		if ( ! $token_details['user_id'] ) {
			return $user;
		}

		nocache_headers();

		return new \WP_User( $token_details['user_id'] );
	}

	/**
	 * Verifies the signature of the current request.
	 *
	 * @return false|array
	 */
	public function verify_xml_rpc_signature() {
		if ( $this->xmlrpc_verification === null ) {
			$this->xmlrpc_verification = $this->internal_verify_xml_rpc_signature();

			if ( is_wp_error( $this->xmlrpc_verification ) ) {
				/**
				 * Action for logging XMLRPC signature verification errors. This data is sensitive.
				 *
				 * @since 1.7.0
				 * @since-jetpack 7.5.0
				 *
				 * @param WP_Error $signature_verification_error The verification error
				 */
				do_action( 'jetpack_verify_signature_error', $this->xmlrpc_verification );

				Error_Handler::get_instance()->report_error( $this->xmlrpc_verification );

			}
		}

		return is_wp_error( $this->xmlrpc_verification ) ? false : $this->xmlrpc_verification;
	}

	/**
	 * Verifies the signature of the current request.
	 *
	 * This function has side effects and should not be used. Instead,
	 * use the memoized version `->verify_xml_rpc_signature()`.
	 *
	 * @internal
	 * @todo Refactor to use proper nonce verification.
	 */
	private function internal_verify_xml_rpc_signature() {
		// phpcs:disable WordPress.Security.NonceVerification.Recommended, WordPress.Security.ValidatedSanitizedInput.InputNotSanitized
		// It's not for us.
		if ( ! isset( $_GET['token'] ) || empty( $_GET['signature'] ) ) {
			return false;
		}

		$signature_details = array(
			'token'     => isset( $_GET['token'] ) ? wp_unslash( $_GET['token'] ) : '',
			'timestamp' => isset( $_GET['timestamp'] ) ? wp_unslash( $_GET['timestamp'] ) : '',
			'nonce'     => isset( $_GET['nonce'] ) ? wp_unslash( $_GET['nonce'] ) : '',
			'body_hash' => isset( $_GET['body-hash'] ) ? wp_unslash( $_GET['body-hash'] ) : '',
			'method'    => isset( $_SERVER['REQUEST_METHOD'] ) ? wp_unslash( $_SERVER['REQUEST_METHOD'] ) : null,
			'url'       => wp_unslash( ( isset( $_SERVER['HTTP_HOST'] ) ? $_SERVER['HTTP_HOST'] : null ) . ( isset( $_SERVER['REQUEST_URI'] ) ? $_SERVER['REQUEST_URI'] : null ) ), // Temp - will get real signature URL later.
			'signature' => isset( $_GET['signature'] ) ? wp_unslash( $_GET['signature'] ) : '',
		);

		$error_type = 'xmlrpc';

		// phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged
		@list( $token_key, $version, $user_id ) = explode( ':', wp_unslash( $_GET['token'] ) );
		// phpcs:enable WordPress.Security.NonceVerification.Recommended, WordPress.Security.ValidatedSanitizedInput.InputNotSanitized

		$jetpack_api_version = Constants::get_constant( 'JETPACK__API_VERSION' );

		if (
			empty( $token_key )
		||
			empty( $version ) || (string) $jetpack_api_version !== $version ) {
			return new \WP_Error( 'malformed_token', 'Malformed token in request', compact( 'signature_details', 'error_type' ) );
		}

		if ( '0' === $user_id ) {
			$token_type = 'blog';
			$user_id    = 0;
		} else {
			$token_type = 'user';
			if ( empty( $user_id ) || ! ctype_digit( $user_id ) ) {
				return new \WP_Error(
					'malformed_user_id',
					'Malformed user_id in request',
					compact( 'signature_details', 'error_type' )
				);
			}
			$user_id = (int) $user_id;

			$user = new \WP_User( $user_id );
			if ( ! $user || ! $user->exists() ) {
				return new \WP_Error(
					'unknown_user',
					sprintf( 'User %d does not exist', $user_id ),
					compact( 'signature_details', 'error_type' )
				);
			}
		}

		$token = $this->get_tokens()->get_access_token( $user_id, $token_key, false );
		if ( is_wp_error( $token ) ) {
			$token->add_data( compact( 'signature_details', 'error_type' ) );
			return $token;
		} elseif ( ! $token ) {
			return new \WP_Error(
				'unknown_token',
				sprintf( 'Token %s:%s:%d does not exist', $token_key, $version, $user_id ),
				compact( 'signature_details', 'error_type' )
			);
		}

		$jetpack_signature = new \Jetpack_Signature( $token->secret, (int) \Jetpack_Options::get_option( 'time_diff' ) );
		// phpcs:disable WordPress.Security.NonceVerification.Missing
		if ( isset( $_POST['_jetpack_is_multipart'] ) ) {
			$post_data   = $_POST;
			$file_hashes = array();
			foreach ( $post_data as $post_data_key => $post_data_value ) {
				if ( ! str_starts_with( $post_data_key, '_jetpack_file_hmac_' ) ) {
					continue;
				}
				$post_data_key                 = substr( $post_data_key, strlen( '_jetpack_file_hmac_' ) );
				$file_hashes[ $post_data_key ] = $post_data_value;
			}

			foreach ( $file_hashes as $post_data_key => $post_data_value ) {
				unset( $post_data[ "_jetpack_file_hmac_{$post_data_key}" ] );
				$post_data[ $post_data_key ] = $post_data_value;
			}

			ksort( $post_data );

			$body = http_build_query( stripslashes_deep( $post_data ) );
		} elseif ( $this->raw_post_data === null ) {
			$body = file_get_contents( 'php://input' );
		} else {
			$body = null;
		}
		// phpcs:enable

		$signature = $jetpack_signature->sign_current_request(
			array( 'body' => $body === null ? $this->raw_post_data : $body )
		);

		$signature_details['url'] = $jetpack_signature->current_request_url;

		if ( ! $signature ) {
			return new \WP_Error(
				'could_not_sign',
				'Unknown signature error',
				compact( 'signature_details', 'error_type' )
			);
		} elseif ( is_wp_error( $signature ) ) {
			return $signature;
		}

		// phpcs:disable WordPress.Security.NonceVerification.Recommended
		$timestamp = (int) $_GET['timestamp'];
		$nonce     = wp_unslash( (string) $_GET['nonce'] ); // phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- WP Core doesn't sanitize nonces either.
		// phpcs:enable WordPress.Security.NonceVerification.Recommended

		// Use up the nonce regardless of whether the signature matches.
		if ( ! ( new Nonce_Handler() )->add( $timestamp, $nonce ) ) {
			return new \WP_Error(
				'invalid_nonce',
				'Could not add nonce',
				compact( 'signature_details', 'error_type' )
			);
		}

		// Be careful about what you do with this debugging data.
		// If a malicious requester has access to the expected signature,
		// bad things might be possible.
		$signature_details['expected'] = $signature;

		// phpcs:ignore WordPress.Security.NonceVerification.Recommended
		if ( ! hash_equals( $signature, wp_unslash( $_GET['signature'] ) ) ) {
			return new \WP_Error(
				'signature_mismatch',
				'Signature mismatch',
				compact( 'signature_details', 'error_type' )
			);
		}

		/**
		 * Action for additional token checking.
		 *
		 * @since 1.7.0
		 * @since-jetpack 7.7.0
		 *
		 * @param array $post_data request data.
		 * @param array $token_data token data.
		 */
		return apply_filters(
			'jetpack_signature_check_token',
			array(
				'type'      => $token_type,
				'token_key' => $token_key,
				'user_id'   => $token->external_user_id,
			),
			$token,
			$this->raw_post_data
		);
	}

	/**
	 * Returns true if the current site is connected to WordPress.com and has the minimum requirements to enable Jetpack UI.
	 *
	 * This method is deprecated since version 1.25.0 of this package. Please use has_connected_owner instead.
	 *
	 * Since this method has a wide spread use, we decided not to throw any deprecation warnings for now.
	 *
	 * @deprecated 1.25.0
	 * @see Manager::has_connected_owner
	 * @return Boolean is the site connected?
	 */
	public function is_active() {
		return (bool) $this->get_tokens()->get_access_token( true );
	}

	/**
	 * Obtains an instance of the Tokens class.
	 *
	 * @return Tokens the Tokens object
	 */
	public function get_tokens() {
		return new Tokens();
	}

	/**
	 * Returns true if the site has both a token and a blog id, which indicates a site has been registered.
	 *
	 * @access public
	 * @deprecated 1.12.1 Use is_connected instead
	 * @see Manager::is_connected
	 *
	 * @return bool
	 */
	public function is_registered() {
		_deprecated_function( __METHOD__, '1.12.1' );
		return $this->is_connected();
	}

	/**
	 * Returns true if the site has both a token and a blog id, which indicates a site has been connected.
	 *
	 * @access public
	 * @since 1.21.1
	 *
	 * @return bool
	 */
	public function is_connected() {
		$has_blog_id    = (bool) \Jetpack_Options::get_option( 'id' );
		$has_blog_token = (bool) $this->get_tokens()->get_access_token();
		return $has_blog_id && $has_blog_token;
	}

	/**
	 * Returns true if the site has at least one connected administrator.
	 *
	 * @access public
	 * @since 1.21.1
	 *
	 * @return bool
	 */
	public function has_connected_admin() {
		return (bool) count( $this->get_connected_users( 'manage_options' ) );
	}

	/**
	 * Returns true if the site has any connected user.
	 *
	 * @access public
	 * @since 1.21.1
	 *
	 * @return bool
	 */
	public function has_connected_user() {
		return (bool) count( $this->get_connected_users( 'any', 1 ) );
	}

	/**
	 * Returns an array of users that have user tokens for communicating with wpcom.
	 * Able to select by specific capability.
	 *
	 * @since 9.9.1 Added $limit parameter.
	 *
	 * @param string   $capability The capability of the user.
	 * @param int|null $limit How many connected users to get before returning.
	 * @return WP_User[] Array of WP_User objects if found.
	 */
	public function get_connected_users( $capability = 'any', $limit = null ) {
		$connected_users = array();
		$user_tokens     = $this->get_tokens()->get_user_tokens();

		if ( ! is_array( $user_tokens ) || empty( $user_tokens ) ) {
			return $connected_users;
		}
		$connected_user_ids = array_keys( $user_tokens );

		if ( ! empty( $connected_user_ids ) ) {
			foreach ( $connected_user_ids as $id ) {
				// Check for capability.
				if ( 'any' !== $capability && ! user_can( $id, $capability ) ) {
					continue;
				}

				$user_data = get_userdata( $id );
				if ( $user_data instanceof \WP_User ) {
					$connected_users[] = $user_data;
					if ( $limit && count( $connected_users ) >= $limit ) {
						return $connected_users;
					}
				}
			}
		}

		return $connected_users;
	}

	/**
	 * Returns true if the site has a connected Blog owner (master_user).
	 *
	 * @access public
	 * @since 1.21.1
	 *
	 * @return bool
	 */
	public function has_connected_owner() {
		return (bool) $this->get_connection_owner_id();
	}

	/**
	 * Returns true if the site is connected only at a site level.
	 *
	 * Note that we are explicitly checking for the existence of the master_user option in order to account for cases where we don't have any user tokens (user-level connection) but the master_user option is set, which could be the result of a problematic user connection.
	 *
	 * @access public
	 * @since 1.25.0
	 * @deprecated 1.27.0
	 *
	 * @return bool
	 */
	public function is_userless() {
		_deprecated_function( __METHOD__, '1.27.0', 'Automattic\\Jetpack\\Connection\\Manager::is_site_connection' );
		return $this->is_site_connection();
	}

	/**
	 * Returns true if the site is connected only at a site level.
	 *
	 * Note that we are explicitly checking for the existence of the master_user option in order to account for cases where we don't have any user tokens (user-level connection) but the master_user option is set, which could be the result of a problematic user connection.
	 *
	 * @access public
	 * @since 1.27.0
	 *
	 * @return bool
	 */
	public function is_site_connection() {
		return $this->is_connected() && ! $this->has_connected_user() && ! \Jetpack_Options::get_option( 'master_user' );
	}

	/**
	 * Checks to see if the connection owner of the site is missing.
	 *
	 * @return bool
	 */
	public function is_missing_connection_owner() {
		$connection_owner = $this->get_connection_owner_id();
		if ( ! get_user_by( 'id', $connection_owner ) ) {
			return true;
		}

		return false;
	}

	/**
	 * Returns true if the user with the specified identifier is connected to
	 * WordPress.com.
	 *
	 * @param int $user_id the user identifier. Default is the current user.
	 * @return bool Boolean is the user connected?
	 */
	public function is_user_connected( $user_id = false ) {
		$user_id = false === $user_id ? get_current_user_id() : absint( $user_id );
		if ( ! $user_id ) {
			return false;
		}

		return (bool) $this->get_tokens()->get_access_token( $user_id );
	}

	/**
	 * Returns the local user ID of the connection owner.
	 *
	 * @return bool|int Returns the ID of the connection owner or False if no connection owner found.
	 */
	public function get_connection_owner_id() {
		$owner = $this->get_connection_owner();
		return $owner instanceof \WP_User ? $owner->ID : false;
	}

	/**
	 * Get the wpcom user data of the current|specified connected user.
	 *
	 * @todo Refactor to properly load the XMLRPC client independently.
	 *
	 * @param Integer $user_id the user identifier.
	 * @return bool|array An array with the WPCOM user data on success, false otherwise.
	 */
	public function get_connected_user_data( $user_id = null ) {
		if ( ! $user_id ) {
			$user_id = get_current_user_id();
		}

		// Check if the user is connected and return false otherwise.
		if ( ! $this->is_user_connected( $user_id ) ) {
			return false;
		}

		$transient_key    = "jetpack_connected_user_data_$user_id";
		$cached_user_data = get_transient( $transient_key );

		if ( $cached_user_data ) {
			return $cached_user_data;
		}

		$xml = new Jetpack_IXR_Client(
			array(
				'user_id' => $user_id,
			)
		);
		$xml->query( 'wpcom.getUser' );

		if ( ! $xml->isError() ) {
			$user_data = $xml->getResponse();
			set_transient( $transient_key, $xml->getResponse(), DAY_IN_SECONDS );
			return $user_data;
		}

		return false;
	}

	/**
	 * Returns a user object of the connection owner.
	 *
	 * @return WP_User|false False if no connection owner found.
	 */
	public function get_connection_owner() {

		$user_id = \Jetpack_Options::get_option( 'master_user' );

		if ( ! $user_id ) {
			return false;
		}

		// Make sure user is connected.
		$user_token = $this->get_tokens()->get_access_token( $user_id );

		$connection_owner = false;

		if ( $user_token && is_object( $user_token ) && isset( $user_token->external_user_id ) ) {
			$connection_owner = get_userdata( $user_token->external_user_id );
		}

		if ( $connection_owner === false ) {
			Error_Handler::get_instance()->report_error(
				new WP_Error(
					'invalid_connection_owner',
					'Invalid connection owner',
					array(
						'user_id'           => $user_id,
						'has_user_token'    => (bool) $user_token,
						'error_type'        => 'connection',
						'signature_details' => array(
							'token' => '',
						),
					)
				),
				false,
				true
			);
		}

		return $connection_owner;
	}

	/**
	 * Returns true if the provided user is the Jetpack connection owner.
	 * If user ID is not specified, the current user will be used.
	 *
	 * @param Integer|Boolean $user_id the user identifier. False for current user.
	 * @return Boolean True the user the connection owner, false otherwise.
	 */
	public function is_connection_owner( $user_id = false ) {
		if ( ! $user_id ) {
			$user_id = get_current_user_id();
		}

		return ( (int) $user_id ) === $this->get_connection_owner_id();
	}

	/**
	 * Connects the user with a specified ID to a WordPress.com user using the
	 * remote login flow.
	 *
	 * @access public
	 *
	 * @param Integer $user_id (optional) the user identifier, defaults to current user.
	 * @param String  $redirect_url the URL to redirect the user to for processing, defaults to
	 *                              admin_url().
	 * @return WP_Error only in case of a failed user lookup.
	 */
	public function connect_user( $user_id = null, $redirect_url = null ) {
		$user = null;
		if ( null === $user_id ) {
			$user = wp_get_current_user();
		} else {
			$user = get_user_by( 'ID', $user_id );
		}

		if ( empty( $user ) ) {
			return new \WP_Error( 'user_not_found', 'Attempting to connect a non-existent user.' );
		}

		if ( null === $redirect_url ) {
			$redirect_url = admin_url();
		}

		// Using wp_redirect intentionally because we're redirecting outside.
		wp_redirect( $this->get_authorization_url( $user, $redirect_url ) ); // phpcs:ignore WordPress.Security.SafeRedirect
		exit();
	}

	/**
	 * Unlinks the current user from the linked WordPress.com user.
	 *
	 * @access public
	 * @static
	 *
	 * @todo Refactor to properly load the XMLRPC client independently.
	 *
	 * @param Integer $user_id the user identifier.
	 * @param bool    $can_overwrite_primary_user Allow for the primary user to be disconnected.
	 * @param bool    $force_disconnect_locally Disconnect user locally even if we were unable to disconnect them from WP.com.
	 * @return Boolean Whether the disconnection of the user was successful.
	 */
	public function disconnect_user( $user_id = null, $can_overwrite_primary_user = false, $force_disconnect_locally = false ) {
		$user_id         = empty( $user_id ) ? get_current_user_id() : (int) $user_id;
		$is_primary_user = Jetpack_Options::get_option( 'master_user' ) === $user_id;

		if ( $is_primary_user && ! $can_overwrite_primary_user ) {
			return false;
		}

		// Attempt to disconnect the user from WordPress.com.
		$is_disconnected_from_wpcom = $this->unlink_user_from_wpcom( $user_id );

		$is_disconnected_locally = false;
		if ( $is_disconnected_from_wpcom || $force_disconnect_locally ) {
			// Disconnect the user locally.
			$is_disconnected_locally = $this->get_tokens()->disconnect_user( $user_id );

			if ( $is_disconnected_locally ) {
				// Delete cached connected user data.
				$transient_key = "jetpack_connected_user_data_$user_id";
				delete_transient( $transient_key );

				/**
				 * Fires after the current user has been unlinked from WordPress.com.
				 *
				 * @since 1.7.0
				 * @since-jetpack 4.1.0
				 *
				 * @param int $user_id The current user's ID.
				 */
				do_action( 'jetpack_unlinked_user', $user_id );

				if ( $is_primary_user ) {
					Jetpack_Options::delete_option( 'master_user' );
				}
			}
		}

		return $is_disconnected_from_wpcom && $is_disconnected_locally;
	}

	/**
	 * Request to wpcom for a user to be unlinked from their WordPress.com account
	 *
	 * @param int $user_id The user identifier.
	 *
	 * @return bool Whether the disconnection of the user was successful.
	 */
	public function unlink_user_from_wpcom( $user_id ) {
		// Attempt to disconnect the user from WordPress.com.
		$xml = new Jetpack_IXR_Client();

		$xml->query( 'jetpack.unlink_user', $user_id );
		if ( $xml->isError() ) {
			return false;
		}

		return (bool) $xml->getResponse();
	}

	/**
	 * Update the connection owner.
	 *
	 * @since 1.29.0
	 *
	 * @param Integer $new_owner_id The ID of the user to become the connection owner.
	 *
	 * @return true|WP_Error True if owner successfully changed, WP_Error otherwise.
	 */
	public function update_connection_owner( $new_owner_id ) {
		$roles = new Roles();
		if ( ! user_can( $new_owner_id, $roles->translate_role_to_cap( 'administrator' ) ) ) {
			return new WP_Error(
				'new_owner_not_admin',
				__( 'New owner is not admin', 'jetpack-connection' ),
				array( 'status' => 400 )
			);
		}

		$old_owner_id = $this->get_connection_owner_id();

		if ( $old_owner_id === $new_owner_id ) {
			return new WP_Error(
				'new_owner_is_existing_owner',
				__( 'New owner is same as existing owner', 'jetpack-connection' ),
				array( 'status' => 400 )
			);
		}

		if ( ! $this->is_user_connected( $new_owner_id ) ) {
			return new WP_Error(
				'new_owner_not_connected',
				__( 'New owner is not connected', 'jetpack-connection' ),
				array( 'status' => 400 )
			);
		}

		// Notify WPCOM about the connection owner change.
		$owner_updated_wpcom = $this->update_connection_owner_wpcom( $new_owner_id );

		if ( $owner_updated_wpcom ) {
			// Update the connection owner in Jetpack only if they were successfully updated on WPCOM.
			// This will ensure consistency with WPCOM.
			\Jetpack_Options::update_option( 'master_user', $new_owner_id );

			// Track it.
			( new Tracking() )->record_user_event( 'set_connection_owner_success' );

			return true;
		}
		return new WP_Error(
			'error_setting_new_owner',
			__( 'Could not confirm new owner.', 'jetpack-connection' ),
			array( 'status' => 500 )
		);
	}

	/**
	 * Request to WPCOM to update the connection owner.
	 *
	 * @since 1.29.0
	 *
	 * @param Integer $new_owner_id The ID of the user to become the connection owner.
	 *
	 * @return Boolean Whether the ownership transfer was successful.
	 */
	public function update_connection_owner_wpcom( $new_owner_id ) {
		// Notify WPCOM about the connection owner change.
		$xml = new Jetpack_IXR_Client(
			array(
				'user_id' => get_current_user_id(),
			)
		);
		$xml->query(
			'jetpack.switchBlogOwner',
			array(
				'new_blog_owner' => $new_owner_id,
			)
		);
		if ( $xml->isError() ) {
			return false;
		}

		return (bool) $xml->getResponse();
	}

	/**
	 * Returns the requested Jetpack API URL.
	 *
	 * @param String $relative_url the relative API path.
	 * @return String API URL.
	 */
	public function api_url( $relative_url ) {
		$api_base    = Constants::get_constant( 'JETPACK__API_BASE' );
		$api_version = '/' . Constants::get_constant( 'JETPACK__API_VERSION' ) . '/';

		/**
		 * Filters the API URL that Jetpack uses for server communication.
		 *
		 * @since 1.7.0
		 * @since-jetpack 8.0.0
		 *
		 * @param String $url the generated URL.
		 * @param String $relative_url the relative URL that was passed as an argument.
		 * @param String $api_base the API base string that is being used.
		 * @param String $api_version the API version string that is being used.
		 */
		return apply_filters(
			'jetpack_api_url',
			rtrim( $api_base . $relative_url, '/\\' ) . $api_version,
			$relative_url,
			$api_base,
			$api_version
		);
	}

	/**
	 * Returns the Jetpack XMLRPC WordPress.com API endpoint URL.
	 *
	 * @return String XMLRPC API URL.
	 */
	public function xmlrpc_api_url() {
		$base = preg_replace(
			'#(https?://[^?/]+)(/?.*)?$#',
			'\\1',
			Constants::get_constant( 'JETPACK__API_BASE' )
		);
		return untrailingslashit( $base ) . '/xmlrpc.php';
	}

	/**
	 * Attempts Jetpack registration which sets up the site for connection. Should
	 * remain public because the call to action comes from the current site, not from
	 * WordPress.com.
	 *
	 * @param String $api_endpoint (optional) an API endpoint to use, defaults to 'register'.
	 * @return true|WP_Error The error object.
	 */
	public function register( $api_endpoint = 'register' ) {
		// Clean-up leftover tokens just in-case.
		// This fixes an edge case that was preventing users to register when the blog token was missing but
		// there were still leftover user tokens present.
		$this->delete_all_connection_tokens( true );

		add_action( 'pre_update_jetpack_option_register', array( '\\Jetpack_Options', 'delete_option' ) );
		$secrets = ( new Secrets() )->generate( 'register', get_current_user_id(), 600 );

		if ( false === $secrets ) {
			return new WP_Error( 'cannot_save_secrets', __( 'Jetpack experienced an issue trying to save options (cannot_save_secrets). We suggest that you contact your hosting provider, and ask them for help checking that the options table is writable on your site.', 'jetpack-connection' ) );
		}

		if (
			empty( $secrets['secret_1'] ) ||
			empty( $secrets['secret_2'] ) ||
			empty( $secrets['exp'] )
		) {
			return new \WP_Error( 'missing_secrets' );
		}

		// Better to try (and fail) to set a higher timeout than this system
		// supports than to have register fail for more users than it should.
		$timeout = $this->set_min_time_limit( 60 ) / 2;

		$gmt_offset = get_option( 'gmt_offset' );
		if ( ! $gmt_offset ) {
			$gmt_offset = 0;
		}

		$stats_options = get_option( 'stats_options' );
		$stats_id      = isset( $stats_options['blog_id'] )
			? $stats_options['blog_id']
			: null;

		/* This action is documented in src/class-package-version-tracker.php */
		$package_versions = apply_filters( 'jetpack_package_versions', array() );

		$active_plugins_using_connection = Plugin_Storage::get_all();

		/**
		 * Filters the request body for additional property addition.
		 *
		 * @since 1.7.0
		 * @since-jetpack 7.7.0
		 *
		 * @param array $post_data request data.
		 * @param Array $token_data token data.
		 */
		$body = apply_filters(
			'jetpack_register_request_body',
			array_merge(
				array(
					'siteurl'                  => Urls::site_url(),
					'home'                     => Urls::home_url(),
					'gmt_offset'               => $gmt_offset,
					'timezone_string'          => (string) get_option( 'timezone_string' ),
					'site_name'                => (string) get_option( 'blogname' ),
					'secret_1'                 => $secrets['secret_1'],
					'secret_2'                 => $secrets['secret_2'],
					'site_lang'                => get_locale(),
					'timeout'                  => $timeout,
					'stats_id'                 => $stats_id,
					'state'                    => get_current_user_id(),
					'site_created'             => $this->get_assumed_site_creation_date(),
					'jetpack_version'          => Constants::get_constant( 'JETPACK__VERSION' ),
					'ABSPATH'                  => Constants::get_constant( 'ABSPATH' ),
					'current_user_email'       => wp_get_current_user()->user_email,
					'connect_plugin'           => $this->get_plugin() ? $this->get_plugin()->get_slug() : null,
					'package_versions'         => $package_versions,
					'active_connected_plugins' => $active_plugins_using_connection,
				),
				self::$extra_register_params
			)
		);

		$args = array(
			'method'  => 'POST',
			'body'    => $body,
			'headers' => array(
				'Accept' => 'application/json',
			),
			'timeout' => $timeout,
		);

		$args['body'] = static::apply_activation_source_to_args( $args['body'] );

		// TODO: fix URLs for bad hosts.
		$response = Client::_wp_remote_request(
			$this->api_url( $api_endpoint ),
			$args,
			true
		);

		// Make sure the response is valid and does not contain any Jetpack errors.
		$registration_details = $this->validate_remote_register_response( $response );

		if ( is_wp_error( $registration_details ) ) {
			return $registration_details;
		} elseif ( ! $registration_details ) {
			return new \WP_Error(
				'unknown_error',
				'Unknown error registering your Jetpack site.',
				wp_remote_retrieve_response_code( $response )
			);
		}

		if ( empty( $registration_details->jetpack_secret ) || ! is_string( $registration_details->jetpack_secret ) ) {
			return new \WP_Error(
				'jetpack_secret',
				'Unable to validate registration of your Jetpack site.',
				wp_remote_retrieve_response_code( $response )
			);
		}

		if ( isset( $registration_details->jetpack_public ) ) {
			$jetpack_public = (int) $registration_details->jetpack_public;
		} else {
			$jetpack_public = false;
		}

		Jetpack_Options::update_options(
			array(
				'id'     => (int) $registration_details->jetpack_id,
				'public' => $jetpack_public,
			)
		);

		update_option( Package_Version_Tracker::PACKAGE_VERSION_OPTION, $package_versions );

		$this->get_tokens()->update_blog_token( (string) $registration_details->jetpack_secret );

		if ( ! Jetpack_Options::get_option( 'id' ) || ! $this->get_tokens()->get_access_token() ) {
			return new WP_Error(
				'connection_data_save_failed',
				'Failed to save connection data in the database'
			);
		}

		$alternate_authorization_url = isset( $registration_details->alternate_authorization_url ) ? $registration_details->alternate_authorization_url : '';

		add_filter(
			'jetpack_register_site_rest_response',
			function ( $response ) use ( $alternate_authorization_url ) {
				$response['alternateAuthorizeUrl'] = $alternate_authorization_url;
				return $response;
			}
		);

		/**
		 * Fires when a site is registered on WordPress.com.
		 *
		 * @since 1.7.0
		 * @since-jetpack 3.7.0
		 *
		 * @param int $json->jetpack_id Jetpack Blog ID.
		 * @param string $json->jetpack_secret Jetpack Blog Token.
		 * @param int|bool $jetpack_public Is the site public.
		 */
		do_action(
			'jetpack_site_registered',
			$registration_details->jetpack_id,
			$registration_details->jetpack_secret,
			$jetpack_public
		);

		if ( isset( $registration_details->token ) ) {
			/**
			 * Fires when a user token is sent along with the registration data.
			 *
			 * @since 1.7.0
			 * @since-jetpack 7.6.0
			 *
			 * @param object $token the administrator token for the newly registered site.
			 */
			do_action( 'jetpack_site_registered_user_token', $registration_details->token );
		}

		return true;
	}

	/**
	 * Attempts Jetpack registration.
	 *
	 * @param bool $tos_agree Whether the user agreed to TOS.
	 *
	 * @return bool|WP_Error
	 */
	public function try_registration( $tos_agree = true ) {
		if ( $tos_agree ) {
			$terms_of_service = new Terms_Of_Service();
			$terms_of_service->agree();
		}

		/**
		 * Action fired when the user attempts the registration.
		 *
		 * @since 1.26.0
		 */
		$pre_register = apply_filters( 'jetpack_pre_register', null );

		if ( is_wp_error( $pre_register ) ) {
			return $pre_register;
		}

		$tracking_data = array();

		if ( null !== $this->get_plugin() ) {
			$tracking_data['plugin_slug'] = $this->get_plugin()->get_slug();
		}

		$tracking = new Tracking();
		$tracking->record_user_event( 'jpc_register_begin', $tracking_data );

		add_filter( 'jetpack_register_request_body', array( Utils::class, 'filter_register_request_body' ) );

		$result = $this->register();

		remove_filter( 'jetpack_register_request_body', array( Utils::class, 'filter_register_request_body' ) );

		// If there was an error with registration and the site was not registered, record this so we can show a message.
		if ( ! $result || is_wp_error( $result ) ) {
			return $result;
		}

		return true;
	}

	/**
	 * Adds a parameter to the register request body
	 *
	 * @since 1.26.0
	 *
	 * @param string $name The name of the parameter to be added.
	 * @param string $value The value of the parameter to be added.
	 *
	 * @throws \InvalidArgumentException If supplied arguments are not strings.
	 * @return void
	 */
	public function add_register_request_param( $name, $value ) {
		if ( ! is_string( $name ) || ! is_string( $value ) ) {
			throw new \InvalidArgumentException( 'name and value must be strings' );
		}
		self::$extra_register_params[ $name ] = $value;
	}

	/**
	 * Takes the response from the Jetpack register new site endpoint and
	 * verifies it worked properly.
	 *
	 * @since 1.7.0
	 * @since-jetpack 2.6.0
	 *
	 * @param Mixed $response the response object, or the error object.
	 * @return string|WP_Error A JSON object on success or WP_Error on failures
	 **/
	protected function validate_remote_register_response( $response ) {
		if ( is_wp_error( $response ) ) {
			return new \WP_Error(
				'register_http_request_failed',
				$response->get_error_message()
			);
		}

		$code   = wp_remote_retrieve_response_code( $response );
		$entity = wp_remote_retrieve_body( $response );

		if ( $entity ) {
			$registration_response = json_decode( $entity );
		} else {
			$registration_response = false;
		}

		$code_type = (int) ( $code / 100 );
		if ( 5 === $code_type ) {
			return new \WP_Error( 'wpcom_5??', $code );
		} elseif ( 408 === $code ) {
			return new \WP_Error( 'wpcom_408', $code );
		} elseif ( ! empty( $registration_response->error ) ) {
			if (
				'xml_rpc-32700' === $registration_response->error
				&& ! function_exists( 'xml_parser_create' )
			) {
				$error_description = __( "PHP's XML extension is not available. Jetpack requires the XML extension to communicate with WordPress.com. Please contact your hosting provider to enable PHP's XML extension.", 'jetpack-connection' );
			} else {
				$error_description = isset( $registration_response->error_description )
					? (string) $registration_response->error_description
					: '';
			}

			return new \WP_Error(
				(string) $registration_response->error,
				$error_description,
				$code
			);
		} elseif ( 200 !== $code ) {
			return new \WP_Error( 'wpcom_bad_response', $code );
		}

		// Jetpack ID error block.
		if ( empty( $registration_response->jetpack_id ) ) {
			return new \WP_Error(
				'jetpack_id',
				/* translators: %s is an error message string */
				sprintf( __( 'Error Details: Jetpack ID is empty. Do not publicly post this error message! %s', 'jetpack-connection' ), $entity ),
				$entity
			);
		} elseif ( ! is_scalar( $registration_response->jetpack_id ) ) {
			return new \WP_Error(
				'jetpack_id',
				/* translators: %s is an error message string */
				sprintf( __( 'Error Details: Jetpack ID is not a scalar. Do not publicly post this error message! %s', 'jetpack-connection' ), $entity ),
				$entity
			);
		} elseif ( preg_match( '/[^0-9]/', $registration_response->jetpack_id ) ) {
			return new \WP_Error(
				'jetpack_id',
				/* translators: %s is an error message string */
				sprintf( __( 'Error Details: Jetpack ID begins with a numeral. Do not publicly post this error message! %s', 'jetpack-connection' ), $entity ),
				$entity
			);
		}

		return $registration_response;
	}

	/**
	 * Adds a used nonce to a list of known nonces.
	 *
	 * @param int    $timestamp the current request timestamp.
	 * @param string $nonce the nonce value.
	 * @return bool whether the nonce is unique or not.
	 *
	 * @deprecated since 1.24.0
	 * @see Nonce_Handler::add()
	 */
	public function add_nonce( $timestamp, $nonce ) {
		_deprecated_function( __METHOD__, '1.24.0', 'Automattic\\Jetpack\\Connection\\Nonce_Handler::add' );
		return ( new Nonce_Handler() )->add( $timestamp, $nonce );
	}

	/**
	 * Cleans nonces that were saved when calling ::add_nonce.
	 *
	 * @todo Properly prepare the query before executing it.
	 *
	 * @param bool $all whether to clean even non-expired nonces.
	 *
	 * @deprecated since 1.24.0
	 * @see Nonce_Handler::clean_all()
	 */
	public function clean_nonces( $all = false ) {
		_deprecated_function( __METHOD__, '1.24.0', 'Automattic\\Jetpack\\Connection\\Nonce_Handler::clean_all' );
		( new Nonce_Handler() )->clean_all( $all ? PHP_INT_MAX : ( time() - Nonce_Handler::LIFETIME ) );
	}

	/**
	 * Sets the Connection custom capabilities.
	 *
	 * @param string[] $caps    Array of the user's capabilities.
	 * @param string   $cap     Capability name.
	 * @param int      $user_id The user ID.
	 * @param array    $args    Adds the context to the cap. Typically the object ID.
	 */
	public function jetpack_connection_custom_caps( $caps, $cap, $user_id, $args ) { // phpcs:ignore VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable
		switch ( $cap ) {
			case 'jetpack_connect':
			case 'jetpack_reconnect':
				$is_offline_mode = ( new Status() )->is_offline_mode();
				if ( $is_offline_mode ) {
					$caps = array( 'do_not_allow' );
					break;
				}
				// Pass through. If it's not offline mode, these should match disconnect.
				// Let users disconnect if it's offline mode, just in case things glitch.
			case 'jetpack_disconnect':
				/**
				 * Filters the jetpack_disconnect capability.
				 *
				 * @since 1.14.2
				 *
				 * @param array An array containing the capability name.
				 */
				$caps = apply_filters( 'jetpack_disconnect_cap', array( 'manage_options' ) );
				break;
			case 'jetpack_connect_user':
				$is_offline_mode = ( new Status() )->is_offline_mode();
				if ( $is_offline_mode ) {
					$caps = array( 'do_not_allow' );
					break;
				}
				// With site connections in mind, non-admin users can connect their account only if a connection owner exists.
				$caps = $this->has_connected_owner() ? array( 'read' ) : array( 'manage_options' );
				break;
		}
		return $caps;
	}

	/**
	 * Builds the timeout limit for queries talking with the wpcom servers.
	 *
	 * Based on local php max_execution_time in php.ini
	 *
	 * @since 1.7.0
	 * @since-jetpack 5.4.0
	 * @return int
	 **/
	public function get_max_execution_time() {
		$timeout = (int) ini_get( 'max_execution_time' );

		// Ensure exec time set in php.ini.
		if ( ! $timeout ) {
			$timeout = 30;
		}
		return $timeout;
	}

	/**
	 * Sets a minimum request timeout, and returns the current timeout
	 *
	 * @since 1.7.0
	 * @since-jetpack 5.4.0
	 * @param Integer $min_timeout the minimum timeout value.
	 **/
	public function set_min_time_limit( $min_timeout ) {
		$timeout = $this->get_max_execution_time();
		if ( $timeout < $min_timeout ) {
			$timeout = $min_timeout;
			set_time_limit( $timeout );
		}
		return $timeout;
	}

	/**
	 * Get our assumed site creation date.
	 * Calculated based on the earlier date of either:
	 * - Earliest admin user registration date.
	 * - Earliest date of post of any post type.
	 *
	 * @since 1.7.0
	 * @since-jetpack 7.2.0
	 *
	 * @return string Assumed site creation date and time.
	 */
	public function get_assumed_site_creation_date() {
		$cached_date = get_transient( 'jetpack_assumed_site_creation_date' );
		if ( ! empty( $cached_date ) ) {
			return $cached_date;
		}

		$earliest_registered_users  = get_users(
			array(
				'role'    => 'administrator',
				'orderby' => 'user_registered',
				'order'   => 'ASC',
				'fields'  => array( 'user_registered' ),
				'number'  => 1,
			)
		);
		$earliest_registration_date = $earliest_registered_users[0]->user_registered;

		$earliest_posts = get_posts(
			array(
				'posts_per_page' => 1,
				'post_type'      => 'any',
				'post_status'    => 'any',
				'orderby'        => 'date',
				'order'          => 'ASC',
			)
		);

		// If there are no posts at all, we'll count only on user registration date.
		if ( $earliest_posts ) {
			$earliest_post_date = $earliest_posts[0]->post_date;
		} else {
			$earliest_post_date = PHP_INT_MAX;
		}

		$assumed_date = min( $earliest_registration_date, $earliest_post_date );
		set_transient( 'jetpack_assumed_site_creation_date', $assumed_date );

		return $assumed_date;
	}

	/**
	 * Adds the activation source string as a parameter to passed arguments.
	 *
	 * @todo Refactor to use rawurlencode() instead of urlencode().
	 *
	 * @param array $args arguments that need to have the source added.
	 * @return array $amended arguments.
	 */
	public static function apply_activation_source_to_args( $args ) {
		list( $activation_source_name, $activation_source_keyword ) = get_option( 'jetpack_activation_source' );

		if ( $activation_source_name ) {
			// phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.urlencode_urlencode
			$args['_as'] = urlencode( $activation_source_name );
		}

		if ( $activation_source_keyword ) {
			// phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.urlencode_urlencode
			$args['_ak'] = urlencode( $activation_source_keyword );
		}

		return $args;
	}

	/**
	 * Generates two secret tokens and the end of life timestamp for them.
	 *
	 * @param String  $action  The action name.
	 * @param Integer $user_id The user identifier.
	 * @param Integer $exp     Expiration time in seconds.
	 */
	public function generate_secrets( $action, $user_id = false, $exp = 600 ) {
		return ( new Secrets() )->generate( $action, $user_id, $exp );
	}

	/**
	 * Returns two secret tokens and the end of life timestamp for them.
	 *
	 * @deprecated 1.24.0 Use Automattic\Jetpack\Connection\Secrets->get() instead.
	 *
	 * @param String  $action  The action name.
	 * @param Integer $user_id The user identifier.
	 * @return string|array an array of secrets or an error string.
	 */
	public function get_secrets( $action, $user_id ) {
		_deprecated_function( __METHOD__, '1.24.0', 'Automattic\\Jetpack\\Connection\\Secrets->get' );
		return ( new Secrets() )->get( $action, $user_id );
	}

	/**
	 * Deletes secret tokens in case they, for example, have expired.
	 *
	 * @deprecated 1.24.0 Use Automattic\Jetpack\Connection\Secrets->delete() instead.
	 *
	 * @param String  $action  The action name.
	 * @param Integer $user_id The user identifier.
	 */
	public function delete_secrets( $action, $user_id ) {
		_deprecated_function( __METHOD__, '1.24.0', 'Automattic\\Jetpack\\Connection\\Secrets->delete' );
		( new Secrets() )->delete( $action, $user_id );
	}

	/**
	 * Deletes all connection tokens and transients from the local Jetpack site.
	 * If the plugin object has been provided in the constructor, the function first checks
	 * whether it's the only active connection.
	 * If there are any other connections, the function will do nothing and return `false`
	 * (unless `$ignore_connected_plugins` is set to `true`).
	 *
	 * @param bool $ignore_connected_plugins Delete the tokens even if there are other connected plugins.
	 *
	 * @return bool True if disconnected successfully, false otherwise.
	 */
	public function delete_all_connection_tokens( $ignore_connected_plugins = false ) {
		// refuse to delete if we're not the last Jetpack plugin installed.
		if ( ! $ignore_connected_plugins && null !== $this->plugin && ! $this->plugin->is_only() ) {
			return false;
		}

		/**
		 * Fires upon the disconnect attempt.
		 * Return `false` to prevent the disconnect.
		 *
		 * @since 1.14.2
		 */
		if ( ! apply_filters( 'jetpack_connection_delete_all_tokens', true ) ) {
			return false;
		}

		\Jetpack_Options::delete_option(
			array(
				'master_user',
				'time_diff',
				'fallback_no_verify_ssl_certs',
			)
		);

		( new Secrets() )->delete_all();
		$this->get_tokens()->delete_all();

		// Delete cached connected user data.
		$transient_key = 'jetpack_connected_user_data_' . get_current_user_id();
		delete_transient( $transient_key );

		// Delete all XML-RPC errors.
		Error_Handler::get_instance()->delete_all_errors();

		return true;
	}

	/**
	 * Tells WordPress.com to disconnect the site and clear all tokens from cached site.
	 * If the plugin object has been provided in the constructor, the function first check
	 * whether it's the only active connection.
	 * If there are any other connections, the function will do nothing and return `false`
	 * (unless `$ignore_connected_plugins` is set to `true`).
	 *
	 * @param bool $ignore_connected_plugins Delete the tokens even if there are other connected plugins.
	 *
	 * @return bool True if disconnected successfully, false otherwise.
	 */
	public function disconnect_site_wpcom( $ignore_connected_plugins = false ) {
		if ( ! $ignore_connected_plugins && null !== $this->plugin && ! $this->plugin->is_only() ) {
			return false;
		}

		if ( ( new Status() )->is_offline_mode() && ! apply_filters( 'jetpack_connection_disconnect_site_wpcom_offline_mode', false ) ) {
			// Prevent potential disconnect of the live site by removing WPCOM tokens.
			return false;
		}

		/**
		 * Fires upon the disconnect attempt.
		 * Return `false` to prevent the disconnect.
		 *
		 * @since 1.14.2
		 */
		if ( ! apply_filters( 'jetpack_connection_disconnect_site_wpcom', true, $this ) ) {
			return false;
		}

		$xml = new Jetpack_IXR_Client();
		$xml->query( 'jetpack.deregister', get_current_user_id() );

		return true;
	}

	/**
	 * Disconnect the plugin and remove the tokens.
	 * This function will automatically perform "soft" or "hard" disconnect depending on whether other plugins are using the connection.
	 * This is a proxy method to simplify the Connection package API.
	 *
	 * @see Manager::disconnect_site()
	 *
	 * @param boolean $disconnect_wpcom Should disconnect_site_wpcom be called.
	 * @param bool    $ignore_connected_plugins Delete the tokens even if there are other connected plugins.
	 * @return bool
	 */
	public function remove_connection( $disconnect_wpcom = true, $ignore_connected_plugins = false ) {

		$this->disconnect_site( $disconnect_wpcom, $ignore_connected_plugins );

		return true;
	}

	/**
	 * Completely clearing up the connection, and initiating reconnect.
	 *
	 * @return true|WP_Error True if reconnected successfully, a `WP_Error` object otherwise.
	 */
	public function reconnect() {
		( new Tracking() )->record_user_event( 'restore_connection_reconnect' );

		$this->disconnect_site_wpcom( true );

		return $this->register();
	}

	/**
	 * Validate the tokens, and refresh the invalid ones.
	 *
	 * @return string|bool|WP_Error True if connection restored or string indicating what's to be done next. A `WP_Error` object or false otherwise.
	 */
	public function restore() {
		// If this is a site connection we need to trigger a full reconnection as our only secure means of
		// communication with WPCOM, aka the blog token, is compromised.
		if ( $this->is_site_connection() ) {
			return $this->reconnect();
		}

		$validate_tokens_response = $this->get_tokens()->validate();

		// If token validation failed, trigger a full reconnection.
		if ( is_array( $validate_tokens_response ) &&
			isset( $validate_tokens_response['blog_token']['is_healthy'] ) &&
			isset( $validate_tokens_response['user_token']['is_healthy'] ) ) {
			$blog_token_healthy = $validate_tokens_response['blog_token']['is_healthy'];
			$user_token_healthy = $validate_tokens_response['user_token']['is_healthy'];
		} else {
			$blog_token_healthy = false;
			$user_token_healthy = false;
		}

		// Tokens are both valid, or both invalid. We can't fix the problem we don't see, so the full reconnection is needed.
		if ( $blog_token_healthy === $user_token_healthy ) {
			$result = $this->reconnect();
			return ( true === $result ) ? 'authorize' : $result;
		}

		if ( ! $blog_token_healthy ) {
			return $this->refresh_blog_token();
		}

		if ( ! $user_token_healthy ) {
			return ( true === $this->refresh_user_token() ) ? 'authorize' : false;
		}

		return false;
	}

	/**
	 * Responds to a WordPress.com call to register the current site.
	 * Should be changed to protected.
	 *
	 * @param array $registration_data Array of [ secret_1, user_id ].
	 */
	public function handle_registration( array $registration_data ) {
		list( $registration_secret_1, $registration_user_id ) = $registration_data;
		if ( empty( $registration_user_id ) ) {
			return new \WP_Error( 'registration_state_invalid', __( 'Invalid Registration State', 'jetpack-connection' ), 400 );
		}

		return ( new Secrets() )->verify( 'register', $registration_secret_1, (int) $registration_user_id );
	}

	/**
	 * Perform the API request to validate the blog and user tokens.
	 *
	 * @deprecated 1.24.0 Use Automattic\Jetpack\Connection\Tokens->validate_tokens() instead.
	 *
	 * @param int|null $user_id ID of the user we need to validate token for. Current user's ID by default.
	 *
	 * @return array|false|WP_Error The API response: `array( 'blog_token_is_healthy' => true|false, 'user_token_is_healthy' => true|false )`.
	 */
	public function validate_tokens( $user_id = null ) {
		_deprecated_function( __METHOD__, '1.24.0', 'Automattic\\Jetpack\\Connection\\Tokens->validate' );
		return $this->get_tokens()->validate( $user_id );
	}

	/**
	 * Verify a Previously Generated Secret.
	 *
	 * @deprecated 1.24.0 Use Automattic\Jetpack\Connection\Secrets->verify() instead.
	 *
	 * @param string $action   The type of secret to verify.
	 * @param string $secret_1 The secret string to compare to what is stored.
	 * @param int    $user_id  The user ID of the owner of the secret.
	 * @return \WP_Error|string WP_Error on failure, secret_2 on success.
	 */
	public function verify_secrets( $action, $secret_1, $user_id ) {
		_deprecated_function( __METHOD__, '1.24.0', 'Automattic\\Jetpack\\Connection\\Secrets->verify' );
		return ( new Secrets() )->verify( $action, $secret_1, $user_id );
	}

	/**
	 * Responds to a WordPress.com call to authorize the current user.
	 * Should be changed to protected.
	 */
	public function handle_authorization() {
	}

	/**
	 * Obtains the auth token.
	 *
	 * @param array $data The request data.
	 * @return object|\WP_Error Returns the auth token on success.
	 *                          Returns a \WP_Error on failure.
	 */
	public function get_token( $data ) {
		return $this->get_tokens()->get( $data, $this->api_url( 'token' ) );
	}

	/**
	 * Builds a URL to the Jetpack connection auth page.
	 *
	 * @param WP_User $user (optional) defaults to the current logged in user.
	 * @param String  $redirect (optional) a redirect URL to use instead of the default.
	 * @return string Connect URL.
	 */
	public function get_authorization_url( $user = null, $redirect = null ) {
		if ( empty( $user ) ) {
			$user = wp_get_current_user();
		}

		$roles       = new Roles();
		$role        = $roles->translate_user_to_role( $user );
		$signed_role = $this->get_tokens()->sign_role( $role );

		/**
		 * Filter the URL of the first time the user gets redirected back to your site for connection
		 * data processing.
		 *
		 * @since 1.7.0
		 * @since-jetpack 8.0.0
		 *
		 * @param string $redirect_url Defaults to the site admin URL.
		 */
		$processing_url = apply_filters( 'jetpack_connect_processing_url', admin_url( 'admin.php' ) );

		/**
		 * Filter the URL to redirect the user back to when the authorization process
		 * is complete.
		 *
		 * @since 1.7.0
		 * @since-jetpack 8.0.0
		 *
		 * @param string $redirect_url Defaults to the site URL.
		 */
		$redirect = apply_filters( 'jetpack_connect_redirect_url', $redirect );

		$secrets = ( new Secrets() )->generate( 'authorize', $user->ID, 2 * HOUR_IN_SECONDS );

		/**
		 * Filter the type of authorization.
		 * 'calypso' completes authorization on wordpress.com/jetpack/connect
		 * while 'jetpack' ( or any other value ) completes the authorization at jetpack.wordpress.com.
		 *
		 * @since 1.7.0
		 * @since-jetpack 4.3.3
		 *
		 * @param string $auth_type Defaults to 'calypso', can also be 'jetpack'.
		 */
		$auth_type = apply_filters( 'jetpack_auth_type', 'calypso' );

		/**
		 * Filters the user connection request data for additional property addition.
		 *
		 * @since 1.7.0
		 * @since-jetpack 8.0.0
		 *
		 * @param array $request_data request data.
		 */
		$body = apply_filters(
			'jetpack_connect_request_body',
			array(
				'response_type'         => 'code',
				'client_id'             => \Jetpack_Options::get_option( 'id' ),
				'redirect_uri'          => add_query_arg(
					array(
						'handler'  => 'jetpack-connection-webhooks',
						'action'   => 'authorize',
						'_wpnonce' => wp_create_nonce( "jetpack-authorize_{$role}_{$redirect}" ),
						'redirect' => $redirect ? rawurlencode( $redirect ) : false,
					),
					esc_url( $processing_url )
				),
				'state'                 => $user->ID,
				'scope'                 => $signed_role,
				'user_email'            => $user->user_email,
				'user_login'            => $user->user_login,
				'is_active'             => $this->has_connected_owner(), // TODO Deprecate this.
				'jp_version'            => (string) Constants::get_constant( 'JETPACK__VERSION' ),
				'auth_type'             => $auth_type,
				'secret'                => $secrets['secret_1'],
				'blogname'              => get_option( 'blogname' ),
				'site_url'              => Urls::site_url(),
				'home_url'              => Urls::home_url(),
				'site_icon'             => get_site_icon_url(),
				'site_lang'             => get_locale(),
				'site_created'          => $this->get_assumed_site_creation_date(),
				'allow_site_connection' => ! $this->has_connected_owner(),
				'calypso_env'           => ( new Host() )->get_calypso_env(),
				'source'                => ( new Host() )->get_source_query(),
			)
		);

		$body = static::apply_activation_source_to_args( urlencode_deep( $body ) );

		$api_url = $this->api_url( 'authorize' );

		$url = add_query_arg( $body, $api_url );

		/** This filter is documented in plugins/jetpack/class-jetpack.php  */
		return apply_filters( 'jetpack_build_authorize_url', $url );
	}

	/**
	 * Authorizes the user by obtaining and storing the user token.
	 *
	 * @param array $data The request data.
	 * @return string|\WP_Error Returns a string on success.
	 *                          Returns a \WP_Error on failure.
	 */
	public function authorize( $data = array() ) {
		/**
		 * Action fired when user authorization starts.
		 *
		 * @since 1.7.0
		 * @since-jetpack 8.0.0
		 */
		do_action( 'jetpack_authorize_starting' );

		$roles = new Roles();
		$role  = $roles->translate_current_user_to_role();

		if ( ! $role ) {
			return new \WP_Error( 'no_role', 'Invalid request.', 400 );
		}

		$cap = $roles->translate_role_to_cap( $role );
		if ( ! $cap ) {
			return new \WP_Error( 'no_cap', 'Invalid request.', 400 );
		}

		if ( ! empty( $data['error'] ) ) {
			return new \WP_Error( $data['error'], 'Error included in the request.', 400 );
		}

		if ( ! isset( $data['state'] ) ) {
			return new \WP_Error( 'no_state', 'Request must include state.', 400 );
		}

		if ( ! ctype_digit( $data['state'] ) ) {
			return new \WP_Error( $data['error'], 'State must be an integer.', 400 );
		}

		$current_user_id = get_current_user_id();
		if ( $current_user_id !== (int) $data['state'] ) {
			return new \WP_Error( 'wrong_state', 'State does not match current user.', 400 );
		}

		if ( empty( $data['code'] ) ) {
			return new \WP_Error( 'no_code', 'Request must include an authorization code.', 400 );
		}

		$token = $this->get_tokens()->get( $data, $this->api_url( 'token' ) );

		if ( is_wp_error( $token ) ) {
			$code = $token->get_error_code();
			if ( empty( $code ) ) {
				$code = 'invalid_token';
			}
			return new \WP_Error( $code, $token->get_error_message(), 400 );
		}

		if ( ! $token ) {
			return new \WP_Error( 'no_token', 'Error generating token.', 400 );
		}

		$is_connection_owner = ! $this->has_connected_owner();

		$this->get_tokens()->update_user_token( $current_user_id, sprintf( '%s.%d', $token, $current_user_id ), $is_connection_owner );

		/**
		 * Fires after user has successfully received an auth token.
		 *
		 * @since 1.7.0
		 * @since-jetpack 3.9.0
		 */
		do_action( 'jetpack_user_authorized' );

		if ( ! $is_connection_owner ) {
			/**
			 * Action fired when a secondary user has been authorized.
			 *
			 * @since 1.7.0
			 * @since-jetpack 8.0.0
			 */
			do_action( 'jetpack_authorize_ending_linked' );
			return 'linked';
		}

		/**
		 * Action fired when the master user has been authorized.
		 *
		 * @since 1.7.0
		 * @since-jetpack 8.0.0
		 *
		 * @param array $data The request data.
		 */
		do_action( 'jetpack_authorize_ending_authorized', $data );

		\Jetpack_Options::delete_raw_option( 'jetpack_last_connect_url_check' );

		( new Nonce_Handler() )->reschedule();

		return 'authorized';
	}

	/**
	 * Disconnects from the Jetpack servers.
	 * Forgets all connection details and tells the Jetpack servers to do the same.
	 *
	 * @param boolean $disconnect_wpcom Should disconnect_site_wpcom be called.
	 * @param bool    $ignore_connected_plugins Delete the tokens even if there are other connected plugins.
	 */
	public function disconnect_site( $disconnect_wpcom = true, $ignore_connected_plugins = true ) {
		if ( ! $ignore_connected_plugins && null !== $this->plugin && ! $this->plugin->is_only() ) {
			return false;
		}

		wp_clear_scheduled_hook( 'jetpack_clean_nonces' );

		( new Nonce_Handler() )->clean_all();

		/**
		 * Fires when a site is disconnected.
		 *
		 * @since 1.36.3
		 */
		do_action( 'jetpack_site_before_disconnected' );

		// If the site is in an IDC because sync is not allowed,
		// let's make sure to not disconnect the production site.
		if ( $disconnect_wpcom ) {
			$tracking = new Tracking();
			$tracking->record_user_event( 'disconnect_site', array() );

			$this->disconnect_site_wpcom( $ignore_connected_plugins );
		}

		$this->delete_all_connection_tokens( $ignore_connected_plugins );

		// Remove tracked package versions, since they depend on the Jetpack Connection.
		delete_option( Package_Version_Tracker::PACKAGE_VERSION_OPTION );

		$jetpack_unique_connection = \Jetpack_Options::get_option( 'unique_connection' );
		if ( $jetpack_unique_connection ) {
			// Check then record unique disconnection if site has never been disconnected previously.
			if ( - 1 === $jetpack_unique_connection['disconnected'] ) {
				$jetpack_unique_connection['disconnected'] = 1;
			} else {
				if ( 0 === $jetpack_unique_connection['disconnected'] ) {
					$a8c_mc_stats_instance = new A8c_Mc_Stats();
					$a8c_mc_stats_instance->add( 'connections', 'unique-disconnect' );
					$a8c_mc_stats_instance->do_server_side_stats();
				}
				// increment number of times disconnected.
				$jetpack_unique_connection['disconnected'] += 1;
			}

			\Jetpack_Options::update_option( 'unique_connection', $jetpack_unique_connection );
		}

		/**
		 * Fires when a site is disconnected.
		 *
		 * @since 1.30.1
		 */
		do_action( 'jetpack_site_disconnected' );
	}

	/**
	 * The Base64 Encoding of the SHA1 Hash of the Input.
	 *
	 * @param string $text The string to hash.
	 * @return string
	 */
	public function sha1_base64( $text ) {
		return base64_encode( sha1( $text, true ) ); // phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.obfuscation_base64_encode
	}

	/**
	 * This function mirrors Jetpack_Data::is_usable_domain() in the WPCOM codebase.
	 *
	 * @param string $domain The domain to check.
	 *
	 * @return bool|WP_Error
	 */
	public function is_usable_domain( $domain ) {

		// If it's empty, just fail out.
		if ( ! $domain ) {
			return new \WP_Error(
				'fail_domain_empty',
				/* translators: %1$s is a domain name. */
				sprintf( __( 'Domain `%1$s` just failed is_usable_domain check as it is empty.', 'jetpack-connection' ), $domain )
			);
		}

		/**
		 * Skips the usuable domain check when connecting a site.
		 *
		 * Allows site administrators with domains that fail gethostname-based checks to pass the request to WP.com
		 *
		 * @since 1.7.0
		 * @since-jetpack 4.1.0
		 *
		 * @param bool If the check should be skipped. Default false.
		 */
		if ( apply_filters( 'jetpack_skip_usuable_domain_check', false ) ) {
			return true;
		}

		// None of the explicit localhosts.
		$forbidden_domains = array(
			'wordpress.com',
			'localhost',
			'localhost.localdomain',
			'local.wordpress.test',         // VVV pattern.
			'local.wordpress-trunk.test',   // VVV pattern.
			'src.wordpress-develop.test',   // VVV pattern.
			'build.wordpress-develop.test', // VVV pattern.
		);
		if ( in_array( $domain, $forbidden_domains, true ) ) {
			return new \WP_Error(
				'fail_domain_forbidden',
				sprintf(
					/* translators: %1$s is a domain name. */
					__(
						'Domain `%1$s` just failed is_usable_domain check as it is in the forbidden array.',
						'jetpack-connection'
					),
					$domain
				)
			);
		}

		// No .test or .local domains.
		if ( preg_match( '#\.(test|local)$#i', $domain ) ) {
			return new \WP_Error(
				'fail_domain_tld',
				sprintf(
					/* translators: %1$s is a domain name. */
					__(
						'Domain `%1$s` just failed is_usable_domain check as it uses an invalid top level domain.',
						'jetpack-connection'
					),
					$domain
				)
			);
		}

		// No WPCOM subdomains.
		if ( preg_match( '#\.WordPress\.com$#i', $domain ) ) {
			return new \WP_Error(
				'fail_subdomain_wpcom',
				sprintf(
					/* translators: %1$s is a domain name. */
					__(
						'Domain `%1$s` just failed is_usable_domain check as it is a subdomain of WordPress.com.',
						'jetpack-connection'
					),
					$domain
				)
			);
		}

		// If PHP was compiled without support for the Filter module (very edge case).
		if ( ! function_exists( 'filter_var' ) ) {
			// Just pass back true for now, and let wpcom sort it out.
			return true;
		}

		$domain = preg_replace( '#^https?://#', '', untrailingslashit( $domain ) );

		if ( filter_var( $domain, FILTER_VALIDATE_IP )
			&& ! filter_var( $domain, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE )
		) {
			return new \WP_Error(
				'fail_ip_forbidden',
				sprintf(
					/* translators: %1$s is a domain name. */
					__(
						'IP address `%1$s` just failed is_usable_domain check as it is in the private network.',
						'jetpack-connection'
					),
					$domain
				)
			);
		}

		return true;
	}

	/**
	 * Gets the requested token.
	 *
	 * @deprecated 1.24.0 Use Automattic\Jetpack\Connection\Tokens->get_access_token() instead.
	 *
	 * @param int|false    $user_id   false: Return the Blog Token. int: Return that user's User Token.
	 * @param string|false $token_key If provided, check that the token matches the provided input.
	 * @param bool|true    $suppress_errors If true, return a falsy value when the token isn't found; When false, return a descriptive WP_Error when the token isn't found.
	 *
	 * @return object|false
	 *
	 * @see $this->get_tokens()->get_access_token()
	 */
	public function get_access_token( $user_id = false, $token_key = false, $suppress_errors = true ) {
		_deprecated_function( __METHOD__, '1.24.0', 'Automattic\\Jetpack\\Connection\\Tokens->get_access_token' );
		return $this->get_tokens()->get_access_token( $user_id, $token_key, $suppress_errors );
	}

	/**
	 * In some setups, $HTTP_RAW_POST_DATA can be emptied during some IXR_Server paths
	 * since it is passed by reference to various methods.
	 * Capture it here so we can verify the signature later.
	 *
	 * @param array $methods an array of available XMLRPC methods.
	 * @return array the same array, since this method doesn't add or remove anything.
	 */
	public function xmlrpc_methods( $methods ) {
		$this->raw_post_data = isset( $GLOBALS['HTTP_RAW_POST_DATA'] ) ? $GLOBALS['HTTP_RAW_POST_DATA'] : null;
		return $methods;
	}

	/**
	 * Resets the raw post data parameter for testing purposes.
	 */
	public function reset_raw_post_data() {
		$this->raw_post_data = null;
	}

	/**
	 * Registering an additional method.
	 *
	 * @param array $methods an array of available XMLRPC methods.
	 * @return array the amended array in case the method is added.
	 */
	public function public_xmlrpc_methods( $methods ) {
		if ( array_key_exists( 'wp.getOptions', $methods ) ) {
			$methods['wp.getOptions'] = array( $this, 'jetpack_get_options' );
		}
		return $methods;
	}

	/**
	 * Handles a getOptions XMLRPC method call.
	 *
	 * @param array $args method call arguments.
	 * @return an amended XMLRPC server options array.
	 */
	public function jetpack_get_options( $args ) {
		global $wp_xmlrpc_server;

		$wp_xmlrpc_server->escape( $args );

		$username = $args[1];
		$password = $args[2];

		$user = $wp_xmlrpc_server->login( $username, $password );
		if ( ! $user ) {
			return $wp_xmlrpc_server->error;
		}

		$options   = array();
		$user_data = $this->get_connected_user_data();
		if ( is_array( $user_data ) ) {
			$options['jetpack_user_id']         = array(
				'desc'     => __( 'The WP.com user ID of the connected user', 'jetpack-connection' ),
				'readonly' => true,
				'value'    => $user_data['ID'],
			);
			$options['jetpack_user_login']      = array(
				'desc'     => __( 'The WP.com username of the connected user', 'jetpack-connection' ),
				'readonly' => true,
				'value'    => $user_data['login'],
			);
			$options['jetpack_user_email']      = array(
				'desc'     => __( 'The WP.com user email of the connected user', 'jetpack-connection' ),
				'readonly' => true,
				'value'    => $user_data['email'],
			);
			$options['jetpack_user_site_count'] = array(
				'desc'     => __( 'The number of sites of the connected WP.com user', 'jetpack-connection' ),
				'readonly' => true,
				'value'    => $user_data['site_count'],
			);
		}
		$wp_xmlrpc_server->blog_options = array_merge( $wp_xmlrpc_server->blog_options, $options );
		$args                           = stripslashes_deep( $args );
		return $wp_xmlrpc_server->wp_getOptions( $args );
	}

	/**
	 * Adds Jetpack-specific options to the output of the XMLRPC options method.
	 *
	 * @param array $options standard Core options.
	 * @return array amended options.
	 */
	public function xmlrpc_options( $options ) {
		$jetpack_client_id = false;
		if ( $this->is_connected() ) {
			$jetpack_client_id = \Jetpack_Options::get_option( 'id' );
		}
		$options['jetpack_version'] = array(
			'desc'     => __( 'Jetpack Plugin Version', 'jetpack-connection' ),
			'readonly' => true,
			'value'    => Constants::get_constant( 'JETPACK__VERSION' ),
		);

		$options['jetpack_client_id'] = array(
			'desc'     => __( 'The Client ID/WP.com Blog ID of this site', 'jetpack-connection' ),
			'readonly' => true,
			'value'    => $jetpack_client_id,
		);
		return $options;
	}

	/**
	 * Resets the saved authentication state in between testing requests.
	 */
	public function reset_saved_auth_state() {
		$this->xmlrpc_verification = null;
	}

	/**
	 * Sign a user role with the master access token.
	 * If not specified, will default to the current user.
	 *
	 * @access public
	 *
	 * @param string $role    User role.
	 * @param int    $user_id ID of the user.
	 * @return string Signed user role.
	 */
	public function sign_role( $role, $user_id = null ) {
		return $this->get_tokens()->sign_role( $role, $user_id );
	}

	/**
	 * Set the plugin instance.
	 *
	 * @param Plugin $plugin_instance The plugin instance.
	 *
	 * @return $this
	 */
	public function set_plugin_instance( Plugin $plugin_instance ) {
		$this->plugin = $plugin_instance;

		return $this;
	}

	/**
	 * Retrieve the plugin management object.
	 *
	 * @return Plugin|null
	 */
	public function get_plugin() {
		return $this->plugin;
	}

	/**
	 * Get all connected plugins information, excluding those disconnected by user.
	 * WARNING: the method cannot be called until Plugin_Storage::configure is called, which happens on plugins_loaded
	 * Even if you don't use Jetpack Config, it may be introduced later by other plugins,
	 * so please make sure not to run the method too early in the code.
	 *
	 * @return array|WP_Error
	 */
	public function get_connected_plugins() {
		$maybe_plugins = Plugin_Storage::get_all();

		if ( $maybe_plugins instanceof WP_Error ) {
			return $maybe_plugins;
		}

		return $maybe_plugins;
	}

	/**
	 * Force plugin disconnect. After its called, the plugin will not be allowed to use the connection.
	 * Note: this method does not remove any access tokens.
	 *
	 * @deprecated since 1.39.0
	 * @return bool
	 */
	public function disable_plugin() {
		return null;
	}

	/**
	 * Force plugin reconnect after user-initiated disconnect.
	 * After its called, the plugin will be allowed to use the connection again.
	 * Note: this method does not initialize access tokens.
	 *
	 * @deprecated since 1.39.0.
	 * @return bool
	 */
	public function enable_plugin() {
		return null;
	}

	/**
	 * Whether the plugin is allowed to use the connection, or it's been disconnected by user.
	 * If no plugin slug was passed into the constructor, always returns true.
	 *
	 * @deprecated 1.42.0 This method no longer has a purpose after the removal of the soft disconnect feature.
	 *
	 * @return bool
	 */
	public function is_plugin_enabled() {
		return true;
	}

	/**
	 * Perform the API request to refresh the blog token.
	 * Note that we are making this request on behalf of the Jetpack master user,
	 * given they were (most probably) the ones that registered the site at the first place.
	 *
	 * @return WP_Error|bool The result of updating the blog_token option.
	 */
	public function refresh_blog_token() {
		( new Tracking() )->record_user_event( 'restore_connection_refresh_blog_token' );

		$blog_id = \Jetpack_Options::get_option( 'id' );
		if ( ! $blog_id ) {
			return new WP_Error( 'site_not_registered', 'Site not registered.' );
		}

		$url     = sprintf(
			'%s/%s/v%s/%s',
			Constants::get_constant( 'JETPACK__WPCOM_JSON_API_BASE' ),
			'wpcom',
			'2',
			'sites/' . $blog_id . '/jetpack-refresh-blog-token'
		);
		$method  = 'POST';
		$user_id = get_current_user_id();

		$response = Client::remote_request( compact( 'url', 'method', 'user_id' ) );

		if ( is_wp_error( $response ) ) {
			return new WP_Error( 'refresh_blog_token_http_request_failed', $response->get_error_message() );
		}

		$code   = wp_remote_retrieve_response_code( $response );
		$entity = wp_remote_retrieve_body( $response );

		if ( $entity ) {
			$json = json_decode( $entity );
		} else {
			$json = false;
		}

		if ( 200 !== $code ) {
			if ( empty( $json->code ) ) {
				return new WP_Error( 'unknown', '', $code );
			}

			/* translators: Error description string. */
			$error_description = isset( $json->message ) ? sprintf( __( 'Error Details: %s', 'jetpack-connection' ), (string) $json->message ) : '';

			return new WP_Error( (string) $json->code, $error_description, $code );
		}

		if ( empty( $json->jetpack_secret ) || ! is_scalar( $json->jetpack_secret ) ) {
			return new WP_Error( 'jetpack_secret', '', $code );
		}

		Error_Handler::get_instance()->delete_all_errors();

		return $this->get_tokens()->update_blog_token( (string) $json->jetpack_secret );
	}

	/**
	 * Disconnect the user from WP.com, and initiate the reconnect process.
	 *
	 * @return bool
	 */
	public function refresh_user_token() {
		( new Tracking() )->record_user_event( 'restore_connection_refresh_user_token' );
		$this->disconnect_user( null, true, true );
		return true;
	}

	/**
	 * Fetches a signed token.
	 *
	 * @deprecated 1.24.0 Use Automattic\Jetpack\Connection\Tokens->get_signed_token() instead.
	 *
	 * @param object $token the token.
	 * @return WP_Error|string a signed token
	 */
	public function get_signed_token( $token ) {
		_deprecated_function( __METHOD__, '1.24.0', 'Automattic\\Jetpack\\Connection\\Tokens->get_signed_token' );
		return $this->get_tokens()->get_signed_token( $token );
	}

	/**
	 * If the site-level connection is active, add the list of plugins using connection to the heartbeat (except Jetpack itself)
	 *
	 * @param array $stats The Heartbeat stats array.
	 * @return array $stats
	 */
	public function add_stats_to_heartbeat( $stats ) {

		if ( ! $this->is_connected() ) {
			return $stats;
		}

		$active_plugins_using_connection = Plugin_Storage::get_all();
		foreach ( array_keys( $active_plugins_using_connection ) as $plugin_slug ) {
			if ( 'jetpack' !== $plugin_slug ) {
				$stats_group             = isset( $active_plugins_using_connection['jetpack'] ) ? 'combined-connection' : 'standalone-connection';
				$stats[ $stats_group ][] = $plugin_slug;
			}
		}
		return $stats;
	}

	/**
	 * Get the WPCOM or self-hosted site ID.
	 *
	 * @param bool $quiet Return null instead of an error.
	 *
	 * @return int|WP_Error|null
	 */
	public static function get_site_id( $quiet = false ) {
		$is_wpcom = ( defined( 'IS_WPCOM' ) && IS_WPCOM );
		$site_id  = $is_wpcom ? get_current_blog_id() : \Jetpack_Options::get_option( 'id' );
		if ( ! $site_id ) {
			return $quiet
				? null
				: new \WP_Error(
					'unavailable_site_id',
					__( 'Sorry, something is wrong with your Jetpack connection.', 'jetpack-connection' ),
					403
				);
		}
		return (int) $site_id;
	}

	/**
	 * Check if Jetpack is ready for uninstall cleanup.
	 *
	 * @param string $current_plugin_slug The current plugin's slug.
	 *
	 * @return bool
	 */
	public static function is_ready_for_cleanup( $current_plugin_slug ) {
		$active_plugins = get_option( Plugin_Storage::ACTIVE_PLUGINS_OPTION_NAME );

		return empty( $active_plugins ) || ! is_array( $active_plugins )
			|| ( count( $active_plugins ) === 1 && array_key_exists( $current_plugin_slug, $active_plugins ) );
	}
}
class-nonce-handler.php                                                                                                                                                                                                                                        5812          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The nonce handler.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

/**
 * The nonce handler.
 */
class Nonce_Handler {

	/**
	 * How long the scheduled cleanup can run (in seconds).
	 * Can be modified using the filter `jetpack_connection_nonce_scheduled_cleanup_limit`.
	 */
	const SCHEDULED_CLEANUP_TIME_LIMIT = 5;

	/**
	 * How many nonces should be removed per batch during the `clean_all()` run.
	 */
	const CLEAN_ALL_LIMIT_PER_BATCH = 1000;

	/**
	 * Nonce lifetime in seconds.
	 */
	const LIFETIME = HOUR_IN_SECONDS;

	/**
	 * The nonces used during the request are stored here to keep them valid.
	 * The property is static to keep the nonces accessible between the `Nonce_Handler` instances.
	 *
	 * @var array
	 */
	private static $nonces_used_this_request = array();

	/**
	 * The database object.
	 *
	 * @var \wpdb
	 */
	private $db;

	/**
	 * Initializing the object.
	 */
	public function __construct() {
		global $wpdb;

		$this->db = $wpdb;
	}

	/**
	 * Scheduling the WP-cron cleanup event.
	 */
	public function init_schedule() {
		add_action( 'jetpack_clean_nonces', array( __CLASS__, 'clean_scheduled' ) );
		if ( ! wp_next_scheduled( 'jetpack_clean_nonces' ) ) {
			wp_schedule_event( time(), 'hourly', 'jetpack_clean_nonces' );
		}
	}

	/**
	 * Reschedule the WP-cron cleanup event to make it start sooner.
	 */
	public function reschedule() {
		wp_clear_scheduled_hook( 'jetpack_clean_nonces' );
		wp_schedule_event( time(), 'hourly', 'jetpack_clean_nonces' );
	}

	/**
	 * Adds a used nonce to a list of known nonces.
	 *
	 * @param int    $timestamp the current request timestamp.
	 * @param string $nonce the nonce value.
	 *
	 * @return bool whether the nonce is unique or not.
	 */
	public function add( $timestamp, $nonce ) {
		if ( isset( static::$nonces_used_this_request[ "$timestamp:$nonce" ] ) ) {
			return static::$nonces_used_this_request[ "$timestamp:$nonce" ];
		}

		// This should always have gone through Jetpack_Signature::sign_request() first to check $timestamp and $nonce.
		$timestamp = (int) $timestamp;
		$nonce     = esc_sql( $nonce );

		// Raw query so we can avoid races: add_option will also update.
		$show_errors = $this->db->hide_errors();

		// Running `try...finally` to make sure that we re-enable errors in case of an exception.
		try {
			$old_nonce = $this->db->get_row(
				$this->db->prepare( "SELECT 1 FROM `{$this->db->options}` WHERE option_name = %s", "jetpack_nonce_{$timestamp}_{$nonce}" )
			);

			if ( $old_nonce === null ) {
				$return = (bool) $this->db->query(
					$this->db->prepare(
						"INSERT INTO `{$this->db->options}` (`option_name`, `option_value`, `autoload`) VALUES (%s, %s, %s)",
						"jetpack_nonce_{$timestamp}_{$nonce}",
						time(),
						'no'
					)
				);
			} else {
				$return = false;
			}
		} finally {
			$this->db->show_errors( $show_errors );
		}

		static::$nonces_used_this_request[ "$timestamp:$nonce" ] = $return;

		return $return;
	}

	/**
	 * Removing all existing nonces, or at least as many as possible.
	 * Capped at 20 seconds to avoid breaking the site.
	 *
	 * @param int $cutoff_timestamp All nonces added before this timestamp will be removed.
	 * @param int $time_limit How long the cleanup can run (in seconds).
	 *
	 * @return true
	 */
	public function clean_all( $cutoff_timestamp = PHP_INT_MAX, $time_limit = 20 ) {
		// phpcs:ignore Generic.CodeAnalysis.ForLoopWithTestFunctionCall.NotAllowed
		for ( $end_time = time() + $time_limit; time() < $end_time; ) {
			$result = $this->delete( static::CLEAN_ALL_LIMIT_PER_BATCH, $cutoff_timestamp );

			if ( ! $result ) {
				break;
			}
		}

		return true;
	}

	/**
	 * Scheduled clean up of the expired nonces.
	 */
	public static function clean_scheduled() {
		/**
		 * Adjust the time limit for the scheduled cleanup.
		 *
		 * @since 9.5.0
		 *
		 * @param int $time_limit How long the cleanup can run (in seconds).
		 */
		$time_limit = apply_filters( 'jetpack_connection_nonce_cleanup_runtime_limit', static::SCHEDULED_CLEANUP_TIME_LIMIT );

		( new static() )->clean_all( time() - static::LIFETIME, $time_limit );
	}

	/**
	 * Delete the nonces.
	 *
	 * @param int      $limit How many nonces to delete.
	 * @param null|int $cutoff_timestamp All nonces added before this timestamp will be removed.
	 *
	 * @return int|false Number of removed nonces, or `false` if nothing to remove (or in case of a database error).
	 */
	public function delete( $limit = 10, $cutoff_timestamp = null ) {
		global $wpdb;

		$ids = $wpdb->get_col(
			$wpdb->prepare(
				"SELECT option_id FROM `{$wpdb->options}`"
				. " WHERE `option_name` >= 'jetpack_nonce_' AND `option_name` < %s"
				. ' LIMIT %d',
				'jetpack_nonce_' . $cutoff_timestamp,
				$limit
			)
		);

		if ( ! is_array( $ids ) ) {
			// There's an error and we can't proceed.
			return false;
		}

		// Removing zeroes in case AUTO_INCREMENT of the options table is broken, and all ID's are zeroes.
		$ids = array_filter( $ids );

		if ( array() === $ids ) {
			// There's nothing to remove.
			return false;
		}

		$ids_fill = implode( ', ', array_fill( 0, count( $ids ), '%d' ) );

		$args   = $ids;
		$args[] = 'jetpack_nonce_%';

		// The Code Sniffer is unable to understand what's going on...
		// phpcs:ignore WordPress.DB.PreparedSQL.InterpolatedNotPrepared,WordPress.DB.PreparedSQLPlaceholders.ReplacementsWrongNumber
		return $wpdb->query( $wpdb->prepare( "DELETE FROM `{$wpdb->options}` WHERE `option_id` IN ( {$ids_fill} ) AND option_name LIKE %s", $args ) );
	}

	/**
	 * Clean the cached nonces valid during the current request, therefore making them invalid.
	 *
	 * @return bool
	 */
	public static function invalidate_request_nonces() {
		static::$nonces_used_this_request = array();

		return true;
	}
}
class-package-version-tracker.php                                                                                                                                                                                                                              4922          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Package_Version_Tracker class.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

/**
 * The Package_Version_Tracker class.
 */
class Package_Version_Tracker {

	const PACKAGE_VERSION_OPTION = 'jetpack_package_versions';

	/**
	 * The cache key for storing a failed request to update remote package versions.
	 * The caching logic is that when a failed request occurs, we cache it temporarily
	 * with a set expiration time.
	 * Only after the key has expired, we'll be able to repeat a remote request.
	 * This also implies that the cached value is redundant, however we chose the datetime
	 * of the failed request to avoid using booleans.
	 */
	const CACHED_FAILED_REQUEST_KEY = 'jetpack_failed_update_remote_package_versions';

	/**
	 * The min time difference in seconds for attempting to
	 * update remote tracked package versions after a failed remote request.
	 */
	const CACHED_FAILED_REQUEST_EXPIRATION = 1 * HOUR_IN_SECONDS;

	/**
	 * Transient key for rate limiting the package version requests;
	 */
	const RATE_LIMITER_KEY = 'jetpack_update_remote_package_last_query';

	/**
	 * Only allow one versions check (and request) per minute.
	 */
	const RATE_LIMITER_TIMEOUT = MINUTE_IN_SECONDS;

	/**
	 * Uses the jetpack_package_versions filter to obtain the package versions from packages that need
	 * version tracking. If the package versions have changed, updates the option and notifies WPCOM.
	 */
	public function maybe_update_package_versions() {
		// Do not run too early or all the modules may not be loaded.
		if ( ! did_action( 'init' ) ) {
			return;
		}

		// The version check is being rate limited.
		if ( $this->is_rate_limiting() ) {
			return;
		}

		/**
		 * Obtains the package versions.
		 *
		 * @since 1.30.2
		 *
		 * @param array An associative array of Jetpack package slugs and their corresponding versions as key/value pairs.
		 */
		$filter_versions = apply_filters( 'jetpack_package_versions', array() );

		if ( ! is_array( $filter_versions ) ) {
			return;
		}

		$option_versions = get_option( self::PACKAGE_VERSION_OPTION, array() );

		foreach ( $filter_versions as $package => $version ) {
			if ( ! is_string( $package ) || ! is_string( $version ) ) {
				unset( $filter_versions[ $package ] );
			}
		}

		if ( ! is_array( $option_versions )
			|| count( array_diff_assoc( $filter_versions, $option_versions ) )
			|| count( array_diff_assoc( $option_versions, $filter_versions ) )
		) {
			$this->update_package_versions_option( $filter_versions );
		}
	}

	/**
	 * Updates the package versions option.
	 *
	 * @param array $package_versions The package versions.
	 */
	protected function update_package_versions_option( $package_versions ) {
		if ( ! $this->is_sync_enabled() ) {
			$this->update_package_versions_via_remote_request( $package_versions );
			return;
		}

		update_option( self::PACKAGE_VERSION_OPTION, $package_versions );
	}

	/**
	 * Whether Jetpack Sync is enabled.
	 *
	 * @return boolean true if Sync is present and enabled, false otherwise
	 */
	protected function is_sync_enabled() {
		if ( class_exists( 'Automattic\Jetpack\Sync\Settings' ) && \Automattic\Jetpack\Sync\Settings::is_sync_enabled() ) {

			return true;
		}

		return false;
	}

	/**
	 * Fallback for updating the package versions via a remote request when Sync is not present.
	 *
	 * Updates the package versions as follows:
	 *   - Sends the updated package versions to wpcom.
	 *   - Updates the 'jetpack_package_versions' option.
	 *
	 * @param array $package_versions The package versions.
	 */
	protected function update_package_versions_via_remote_request( $package_versions ) {
		$connection = new Manager();
		if ( ! $connection->is_connected() ) {
			return;
		}

		$site_id = \Jetpack_Options::get_option( 'id' );

		$last_failed_attempt_within_hour = get_transient( self::CACHED_FAILED_REQUEST_KEY );

		if ( $last_failed_attempt_within_hour ) {
			return;
		}

		$body = wp_json_encode(
			array(
				'package_versions' => $package_versions,
			)
		);

		$response = Client::wpcom_json_api_request_as_blog(
			sprintf( '/sites/%d/jetpack-package-versions', $site_id ),
			'2',
			array(
				'headers' => array( 'content-type' => 'application/json' ),
				'method'  => 'POST',
			),
			$body,
			'wpcom'
		);

		if ( 200 === wp_remote_retrieve_response_code( $response ) ) {
			update_option( self::PACKAGE_VERSION_OPTION, $package_versions );
		} else {
			set_transient( self::CACHED_FAILED_REQUEST_KEY, time(), self::CACHED_FAILED_REQUEST_EXPIRATION );
		}
	}

	/**
	 * Check if version check is being rate limited, and update the rate limiting transient if needed.
	 *
	 * @return bool
	 */
	private function is_rate_limiting() {
		if ( get_transient( static::RATE_LIMITER_KEY ) ) {
			return true;
		}

		set_transient( static::RATE_LIMITER_KEY, time(), static::RATE_LIMITER_TIMEOUT );

		return false;
	}
}
class-package-version.php                                                                                                                                                                                                                                      647           1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Package_Version class.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

/**
 * The Package_Version class.
 */
class Package_Version {

	const PACKAGE_VERSION = '2.3.2';

	const PACKAGE_SLUG = 'connection';

	/**
	 * Adds the package slug and version to the package version tracker's data.
	 *
	 * @param array $package_versions The package version array.
	 *
	 * @return array The packge version array.
	 */
	public static function send_package_version_to_tracker( $package_versions ) {
		$package_versions[ self::PACKAGE_SLUG ] = self::PACKAGE_VERSION;
		return $package_versions;
	}
}
class-partner-coupon.php                                                                                                                                                                                                                                       11197         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * Class for the Jetpack partner coupon logic.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack;

use Automattic\Jetpack\Connection\Client as Connection_Client;
use Automattic\Jetpack\Connection\Manager as Connection_Manager;
use Jetpack_Options;

/**
 * Disable direct access.
 */
if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

/**
 * Class Jetpack_Partner_Coupon
 *
 * @since partner-1.6.0
 * @since 2.0.0
 */
class Partner_Coupon {

	/**
	 * Name of the Jetpack_Option coupon option.
	 *
	 * @var string
	 */
	public static $coupon_option = 'partner_coupon';

	/**
	 * Name of the Jetpack_Option added option.
	 *
	 * @var string
	 */
	public static $added_option = 'partner_coupon_added';

	/**
	 * Name of "last availability check" transient.
	 *
	 * @var string
	 */
	public static $last_check_transient = 'jetpack_partner_coupon_last_check';

	/**
	 * Callable that executes a blog-authenticated request.
	 *
	 * @var callable
	 */
	protected $request_as_blog;

	/**
	 * Jetpack_Partner_Coupon
	 *
	 * @var Partner_Coupon|null
	 **/
	private static $instance = null;

	/**
	 * A list of supported partners.
	 *
	 * @var array
	 */
	private static $supported_partners = array(
		'IONOS' => array(
			'name' => 'IONOS',
			'logo' => array(
				'src'    => '/images/ionos-logo.jpg',
				'width'  => 119,
				'height' => 32,
			),
		),
	);

	/**
	 * A list of supported presets.
	 *
	 * @var array
	 */
	private static $supported_presets = array(
		'IONA' => 'jetpack_backup_daily',
	);

	/**
	 * Get singleton instance of class.
	 *
	 * @return Partner_Coupon
	 */
	public static function get_instance() {
		if ( self::$instance === null ) {
			self::$instance = new Partner_Coupon( array( Connection_Client::class, 'wpcom_json_api_request_as_blog' ) );
		}

		return self::$instance;
	}

	/**
	 * Constructor.
	 *
	 * @param callable $request_as_blog Callable that executes a blog-authenticated request.
	 */
	public function __construct( $request_as_blog ) {
		$this->request_as_blog = $request_as_blog;
	}

	/**
	 * Register hooks to catch and purge coupon.
	 *
	 * @param string $plugin_slug The plugin slug to differentiate between Jetpack connections.
	 * @param string $redirect_location The location we should redirect to after catching the coupon.
	 */
	public static function register_coupon_admin_hooks( $plugin_slug, $redirect_location ) {
		$instance = self::get_instance();

		// We have to use an anonymous function, so we can pass along relevant information
		// and not have to hardcode values for a single plugin.
		// This open up the opportunity for e.g. the "all-in-one" and backup plugins
		// to both implement partner coupon logic.
		add_action(
			'admin_init',
			function () use ( $plugin_slug, $redirect_location, $instance ) {
				$instance->catch_coupon( $plugin_slug, $redirect_location );
				$instance->maybe_purge_coupon( $plugin_slug );
			}
		);
	}

	/**
	 * Catch partner coupon and redirect to claim component.
	 *
	 * @param string $plugin_slug The plugin slug to differentiate between Jetpack connections.
	 * @param string $redirect_location The location we should redirect to after catching the coupon.
	 */
	public function catch_coupon( $plugin_slug, $redirect_location ) {
		// Accept and store a partner coupon if present, and redirect to Jetpack connection screen.
		$partner_coupon = isset( $_GET['jetpack-partner-coupon'] ) ? sanitize_text_field( wp_unslash( $_GET['jetpack-partner-coupon'] ) ) : false; // phpcs:ignore WordPress.Security.NonceVerification.Recommended
		if ( $partner_coupon ) {
			Jetpack_Options::update_options(
				array(
					self::$coupon_option => $partner_coupon,
					self::$added_option  => time(),
				)
			);

			$connection = new Connection_Manager( $plugin_slug );
			if ( $connection->is_connected() ) {
				$redirect_location = add_query_arg( array( 'showCouponRedemption' => 1 ), $redirect_location );
				wp_safe_redirect( $redirect_location );
			} else {
				wp_safe_redirect( $redirect_location );
			}
		}
	}

	/**
	 * Purge partner coupon.
	 *
	 * We try to remotely check if a coupon looks valid. We also automatically purge
	 * partner coupons after a certain amount of time to prevent unnecessary look-ups
	 * and/or promoting a product for months or years in the future due to unknown
	 * errors.
	 *
	 * @param string $plugin_slug The plugin slug to differentiate between Jetpack connections.
	 */
	public function maybe_purge_coupon( $plugin_slug ) {
		// Only run coupon checks on Jetpack admin pages.
		// The "admin-ui" package is responsible for registering the Jetpack admin
		// page for all Jetpack plugins and has hardcoded the settings page to be
		// "jetpack", so we shouldn't need to allow for dynamic/custom values.
		// phpcs:ignore WordPress.Security.NonceVerification.Recommended
		if ( ! isset( $_GET['page'] ) || 'jetpack' !== $_GET['page'] ) {
			return;
		}

		if ( ( new Status() )->is_offline_mode() ) {
			return;
		}

		$connection = new Connection_Manager( $plugin_slug );
		if ( ! $connection->is_connected() ) {
			return;
		}

		if ( $this->maybe_purge_coupon_by_added_date() ) {
			return;
		}

		// Limit checks to happen once a minute at most.
		if ( get_transient( self::$last_check_transient ) ) {
			return;
		}

		set_transient( self::$last_check_transient, true, MINUTE_IN_SECONDS );

		$this->maybe_purge_coupon_by_availability_check();
	}

	/**
	 * Purge coupon based on local added date.
	 *
	 * We automatically remove the coupon after a month to "self-heal" if
	 * something in the claim process has broken with the site.
	 *
	 * @return bool Return whether we should skip further purge checks.
	 */
	protected function maybe_purge_coupon_by_added_date() {
		$date = Jetpack_Options::get_option( self::$added_option, '' );

		if ( empty( $date ) ) {
			return true;
		}

		$expire_date = strtotime( '+30 days', $date );
		$today       = time();

		if ( $today >= $expire_date ) {
			$this->delete_coupon_data();

			return true;
		}

		return false;
	}

	/**
	 * Purge coupon based on availability check.
	 *
	 * @return bool Return whether we deleted coupon data.
	 */
	protected function maybe_purge_coupon_by_availability_check() {
		$blog_id = Jetpack_Options::get_option( 'id', false );

		if ( ! $blog_id ) {
			return false;
		}

		$coupon = self::get_coupon();

		if ( ! $coupon ) {
			return false;
		}

		$response = call_user_func_array(
			$this->request_as_blog,
			array(
				add_query_arg(
					array( 'coupon_code' => $coupon['coupon_code'] ),
					sprintf(
						'/sites/%d/jetpack-partner/coupon/v1/site/coupon',
						$blog_id
					)
				),
				2,
				array( 'method' => 'GET' ),
				null,
				'wpcom',
			)
		);

		$body = json_decode( wp_remote_retrieve_body( $response ), true );

		if (
			200 === wp_remote_retrieve_response_code( $response ) &&
			is_array( $body ) &&
			isset( $body['available'] ) &&
			false === $body['available']
		) {
			$this->delete_coupon_data();

			return true;
		}

		return false;
	}

	/**
	 * Delete all coupon data.
	 */
	protected function delete_coupon_data() {
		Jetpack_Options::delete_option(
			array(
				self::$coupon_option,
				self::$added_option,
			)
		);
	}

	/**
	 * Get partner coupon data.
	 *
	 * @return array|bool
	 */
	public static function get_coupon() {
		$coupon_code = Jetpack_Options::get_option( self::$coupon_option, '' );

		if ( ! is_string( $coupon_code ) || empty( $coupon_code ) ) {
			return false;
		}

		$instance = self::get_instance();
		$partner  = $instance->get_coupon_partner( $coupon_code );

		if ( ! $partner ) {
			return false;
		}

		$preset = $instance->get_coupon_preset( $coupon_code );

		if ( ! $preset ) {
			return false;
		}

		$product = $instance->get_coupon_product( $preset );

		if ( ! $product ) {
			return false;
		}

		return array(
			'coupon_code' => $coupon_code,
			'partner'     => $partner,
			'preset'      => $preset,
			'product'     => $product,
		);
	}

	/**
	 * Get coupon partner.
	 *
	 * @param string $coupon_code Coupon code to go through.
	 * @return array|bool
	 */
	private function get_coupon_partner( $coupon_code ) {
		if ( ! is_string( $coupon_code ) || false === strpos( $coupon_code, '_' ) ) {
			return false;
		}

		$prefix             = strtok( $coupon_code, '_' );
		$supported_partners = $this->get_supported_partners();

		if ( ! isset( $supported_partners[ $prefix ] ) ) {
			return false;
		}

		return array(
			'name'   => $supported_partners[ $prefix ]['name'],
			'prefix' => $prefix,
			'logo'   => isset( $supported_partners[ $prefix ]['logo'] ) ? $supported_partners[ $prefix ]['logo'] : null,
		);
	}

	/**
	 * Get coupon product.
	 *
	 * @param string $coupon_preset The preset we wish to find a product for.
	 * @return array|bool
	 */
	private function get_coupon_product( $coupon_preset ) {
		if ( ! is_string( $coupon_preset ) ) {
			return false;
		}

		/**
		 * Allow for plugins to register supported products.
		 *
		 * @since 1.6.0
		 *
		 * @param array A list of product details.
		 * @return array
		 */
		$product_details = apply_filters( 'jetpack_partner_coupon_products', array() );
		$product_slug    = $this->get_supported_presets()[ $coupon_preset ];

		foreach ( $product_details as $product ) {
			if ( ! $this->array_keys_exist( array( 'title', 'slug', 'description', 'features' ), $product ) ) {
				continue;
			}

			if ( $product_slug === $product['slug'] ) {
				return $product;
			}
		}

		return false;
	}

	/**
	 * Checks if multiple keys are present in an array.
	 *
	 * @param array $needles The keys we wish to check for.
	 * @param array $haystack The array we want to compare keys against.
	 *
	 * @return bool
	 */
	private function array_keys_exist( $needles, $haystack ) {
		foreach ( $needles as $needle ) {
			if ( ! isset( $haystack[ $needle ] ) ) {
				return false;
			}
		}

		return true;
	}

	/**
	 * Get coupon preset.
	 *
	 * @param string $coupon_code Coupon code to go through.
	 * @return string|bool
	 */
	private function get_coupon_preset( $coupon_code ) {
		if ( ! is_string( $coupon_code ) ) {
			return false;
		}

		$regex   = '/^.*?_(?P<slug>.*?)_.+$/';
		$matches = array();

		if ( ! preg_match( $regex, $coupon_code, $matches ) ) {
			return false;
		}

		return isset( $this->get_supported_presets()[ $matches['slug'] ] ) ? $matches['slug'] : false;
	}

	/**
	 * Get supported partners.
	 *
	 * @return array
	 */
	private function get_supported_partners() {
		/**
		 * Allow external code to add additional supported partners.
		 *
		 * @since partner-1.6.0
		 * @since 2.0.0
		 *
		 * @param array $supported_partners A list of supported partners.
		 * @return array
		 */
		return apply_filters( 'jetpack_partner_coupon_supported_partners', self::$supported_partners );
	}

	/**
	 * Get supported presets.
	 *
	 * @return array
	 */
	private function get_supported_presets() {
		/**
		 * Allow external code to add additional supported presets.
		 *
		 * @since partner-1.6.0
		 * @since 2.0.0
		 *
		 * @param array $supported_presets A list of supported presets.
		 * @return array
		 */
		return apply_filters( 'jetpack_partner_coupon_supported_presets', self::$supported_presets );
	}
}
class-partner.php                                                                                                                                                                                                                                              5072          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * Jetpack Partner utilities.
 *
 * @package  automattic/jetpack-connection
 */

namespace Automattic\Jetpack;

/**
 * This class introduces functionality used by Jetpack hosting partners.
 *
 * @since partner-1.0.0
 * @since 2.0.0
 */
class Partner {

	/**
	 * Affiliate code.
	 */
	const AFFILIATE_CODE = 'affiliate';

	/**
	 * Subsidiary id code.
	 */
	const SUBSIDIARY_CODE = 'subsidiary';

	/**
	 * Singleton instance.
	 *
	 * @since partner-1.0.0
	 * @since 2.0.0
	 *
	 * @var Partner This class instance.
	 */
	private static $instance = null;

	/**
	 * Partner constructor.
	 */
	private function __construct() {
	}

	/**
	 * Initializes the class or returns the singleton.
	 *
	 * @since partner-1.0.0
	 * @since 2.0.0
	 *
	 * @return Partner | false
	 */
	public static function init() {
		if ( self::$instance === null ) {
			self::$instance = new Partner();
			add_filter( 'jetpack_build_authorize_url', array( self::$instance, 'add_subsidiary_id_as_query_arg' ) );
			add_filter( 'jetpack_build_authorize_url', array( self::$instance, 'add_affiliate_code_as_query_arg' ) );
			add_filter( 'jetpack_build_connection_url', array( self::$instance, 'add_subsidiary_id_as_query_arg' ) );
			add_filter( 'jetpack_build_connection_url', array( self::$instance, 'add_affiliate_code_as_query_arg' ) );

			add_filter( 'jetpack_register_request_body', array( self::$instance, 'add_subsidiary_id_to_params_array' ) );
			add_filter( 'jetpack_register_request_body', array( self::$instance, 'add_affiliate_code_to_params_array' ) );
		}

		return self::$instance;
	}

	/**
	 * Adds the partner subsidiary code to the passed URL.
	 *
	 * @param string $url The URL.
	 *
	 * @return string
	 */
	public function add_subsidiary_id_as_query_arg( $url ) {
		return $this->add_code_as_query_arg( self::SUBSIDIARY_CODE, $url );
	}

	/**
	 * Adds the affiliate code to the passed URL.
	 *
	 * @param string $url The URL.
	 *
	 * @return string
	 */
	public function add_affiliate_code_as_query_arg( $url ) {
		return $this->add_code_as_query_arg( self::AFFILIATE_CODE, $url );
	}

	/**
	 * Adds the partner subsidiary code to the passed array.
	 *
	 * @since partner-1.5.0
	 * @since 2.0.0
	 *
	 * @param array $params The parameters array.
	 *
	 * @return array
	 */
	public function add_subsidiary_id_to_params_array( $params ) {
		if ( ! is_array( $params ) ) {
			return $params;
		}
		return array_merge( $params, $this->get_code_as_array( self::SUBSIDIARY_CODE ) );
	}

	/**
	 * Adds the affiliate code to the passed array.
	 *
	 * @since partner-1.5.0
	 * @since 2.0.0
	 *
	 * @param array $params The parameters array.
	 *
	 * @return array
	 */
	public function add_affiliate_code_to_params_array( $params ) {
		if ( ! is_array( $params ) ) {
			return $params;
		}
		return array_merge( $params, $this->get_code_as_array( self::AFFILIATE_CODE ) );
	}

	/**
	 * Returns the passed URL with the partner code added as a URL query arg.
	 *
	 * @since partner-1.0.0
	 * @since 2.0.0
	 *
	 * @param string $type The partner code.
	 * @param string $url The URL where the partner subsidiary id will be added.
	 *
	 * @return string The passed URL with the partner code added.
	 */
	public function add_code_as_query_arg( $type, $url ) {
		return add_query_arg( $this->get_code_as_array( $type ), $url );
	}

	/**
	 * Gets the partner code in an associative array format
	 *
	 * @since partner-1.5.0
	 * @since 2.0.0
	 *
	 * @param string $type The partner code.
	 * @return array
	 */
	private function get_code_as_array( $type ) {
		switch ( $type ) {
			case self::AFFILIATE_CODE:
				$query_arg_name = 'aff';
				break;
			case self::SUBSIDIARY_CODE:
				$query_arg_name = 'subsidiaryId';
				break;
			default:
				return array();
		}

		$code = $this->get_partner_code( $type );

		if ( '' === $code ) {
			return array();
		}

		return array( $query_arg_name => $code );
	}

	/**
	 * Returns a partner code.
	 *
	 * @since partner-1.0.0
	 * @since 2.0.0
	 *
	 * @param string $type This can be either 'affiliate' or 'subsidiary'. Returns empty string when code is unknown.
	 *
	 * @return string The partner code.
	 */
	public function get_partner_code( $type ) {
		switch ( $type ) {
			case self::AFFILIATE_CODE:
				/**
				 * Allow to filter the affiliate code.
				 *
				 * @since partner-1.0.0
				 * @since-jetpack 6.9.0
				 * @since 2.0.0
				 *
				 * @param string $affiliate_code The affiliate code, blank by default.
				 */
				return apply_filters( 'jetpack_affiliate_code', get_option( 'jetpack_affiliate_code', '' ) );
			case self::SUBSIDIARY_CODE:
				/**
				 * Allow to filter the partner subsidiary id.
				 *
				 * @since partner-1.0.0
				 * @since 2.0.0
				 *
				 * @param string $subsidiary_id The partner subsidiary id, blank by default.
				 */
				return apply_filters(
					'jetpack_partner_subsidiary_id',
					get_option( 'jetpack_partner_subsidiary_id', '' )
				);
			default:
				return '';
		}
	}

	/**
	 * Resets the singleton for testing purposes.
	 */
	public static function reset() {
		self::$instance = null;
	}
}
class-plugin-storage.php                                                                                                                                                                                                                                       7371          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * Storage for plugin connection information.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

use WP_Error;

/**
 * The class serves a single purpose - to store the data which plugins use the connection, along with some auxiliary information.
 */
class Plugin_Storage {

	const ACTIVE_PLUGINS_OPTION_NAME = 'jetpack_connection_active_plugins';

	/**
	 * Options where disabled plugins were stored
	 *
	 * @deprecated since 1.39.0.
	 * @var string
	 */
	const PLUGINS_DISABLED_OPTION_NAME = 'jetpack_connection_disabled_plugins';

	/**
	 * Whether this class was configured for the first time or not.
	 *
	 * @var boolean
	 */
	private static $configured = false;

	/**
	 * Refresh list of connected plugins upon intialization.
	 *
	 * @var boolean
	 */
	private static $refresh_connected_plugins = false;

	/**
	 * Connected plugins.
	 *
	 * @var array
	 */
	private static $plugins = array();

	/**
	 * The blog ID the storage is setup for.
	 * The data will be refreshed if the blog ID changes.
	 * Used for the multisite networks.
	 *
	 * @var int
	 */
	private static $current_blog_id = null;

	/**
	 * Add or update the plugin information in the storage.
	 *
	 * @param string $slug Plugin slug.
	 * @param array  $args Plugin arguments, optional.
	 *
	 * @return bool
	 */
	public static function upsert( $slug, array $args = array() ) {
		self::$plugins[ $slug ] = $args;

		// if plugin is not in the list of active plugins, refresh the list.
		if ( ! array_key_exists( $slug, (array) get_option( self::ACTIVE_PLUGINS_OPTION_NAME, array() ) ) ) {
			self::$refresh_connected_plugins = true;
		}

		return true;
	}

	/**
	 * Retrieve the plugin information by slug.
	 * WARNING: the method cannot be called until Plugin_Storage::configure is called, which happens on plugins_loaded
	 * Even if you don't use Jetpack Config, it may be introduced later by other plugins,
	 * so please make sure not to run the method too early in the code.
	 *
	 * @param string $slug The plugin slug.
	 *
	 * @return array|null|WP_Error
	 */
	public static function get_one( $slug ) {
		$plugins = self::get_all();

		if ( $plugins instanceof WP_Error ) {
			return $plugins;
		}

		return empty( $plugins[ $slug ] ) ? null : $plugins[ $slug ];
	}

	/**
	 * Retrieve info for all plugins that use the connection.
	 * WARNING: the method cannot be called until Plugin_Storage::configure is called, which happens on plugins_loaded
	 * Even if you don't use Jetpack Config, it may be introduced later by other plugins,
	 * so please make sure not to run the method too early in the code.
	 *
	 * @since 1.39.0 deprecated the $connected_only argument.
	 *
	 * @param null $deprecated null plugins that were explicitly disconnected. Deprecated, there's no such a thing as disconnecting only specific plugins anymore.
	 *
	 * @return array|WP_Error
	 */
	public static function get_all( $deprecated = null ) { // phpcs:ignore VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable
		$maybe_error = self::ensure_configured();

		if ( $maybe_error instanceof WP_Error ) {
			return $maybe_error;
		}

		return self::$plugins;
	}

	/**
	 * Remove the plugin connection info from Jetpack.
	 * WARNING: the method cannot be called until Plugin_Storage::configure is called, which happens on plugins_loaded
	 * Even if you don't use Jetpack Config, it may be introduced later by other plugins,
	 * so please make sure not to run the method too early in the code.
	 *
	 * @param string $slug The plugin slug.
	 *
	 * @return bool|WP_Error
	 */
	public static function delete( $slug ) {
		$maybe_error = self::ensure_configured();

		if ( $maybe_error instanceof WP_Error ) {
			return $maybe_error;
		}

		if ( array_key_exists( $slug, self::$plugins ) ) {
			unset( self::$plugins[ $slug ] );
		}

		return true;
	}

	/**
	 * The method makes sure that `Jetpack\Config` has finished, and it's now safe to retrieve the list of plugins.
	 *
	 * @return bool|WP_Error
	 */
	private static function ensure_configured() {
		if ( ! self::$configured ) {
			return new WP_Error( 'too_early', __( 'You cannot call this method until Jetpack Config is configured', 'jetpack-connection' ) );
		}

		if ( is_multisite() && get_current_blog_id() !== self::$current_blog_id ) {
			self::$plugins         = (array) get_option( self::ACTIVE_PLUGINS_OPTION_NAME, array() );
			self::$current_blog_id = get_current_blog_id();
		}

		return true;
	}

	/**
	 * Called once to configure this class after plugins_loaded.
	 *
	 * @return void
	 */
	public static function configure() {
		if ( self::$configured ) {
			return;
		}

		if ( is_multisite() ) {
			self::$current_blog_id = get_current_blog_id();
		}

		// If a plugin was activated or deactivated.
		// self::$plugins is populated in Config::ensure_options_connection().
		$number_of_plugins_differ = count( self::$plugins ) !== count( (array) get_option( self::ACTIVE_PLUGINS_OPTION_NAME, array() ) );

		if ( $number_of_plugins_differ || true === self::$refresh_connected_plugins ) {
			self::update_active_plugins_option();
		}

		self::$configured = true;
	}

	/**
	 * Updates the active plugins option with current list of active plugins.
	 *
	 * @return void
	 */
	public static function update_active_plugins_option() {
		// Note: Since this options is synced to wpcom, if you change its structure, you have to update the sanitizer at wpcom side.
		update_option( self::ACTIVE_PLUGINS_OPTION_NAME, self::$plugins );

		if ( ! class_exists( 'Automattic\Jetpack\Sync\Settings' ) || ! \Automattic\Jetpack\Sync\Settings::is_sync_enabled() ) {
			self::update_active_plugins_wpcom_no_sync_fallback();
		}
	}

	/**
	 * Add the plugin to the set of disconnected ones.
	 *
	 * @deprecated since 1.39.0.
	 *
	 * @param string $slug Plugin slug.
	 *
	 * @return bool
	 */
	public static function disable_plugin( $slug ) { // phpcs:ignore VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable
		return true;
	}

	/**
	 * Remove the plugin from the set of disconnected ones.
	 *
	 * @deprecated since 1.39.0.
	 *
	 * @param string $slug Plugin slug.
	 *
	 * @return bool
	 */
	public static function enable_plugin( $slug ) { // phpcs:ignore VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable
		return true;
	}

	/**
	 * Get all plugins that were disconnected by user.
	 *
	 * @deprecated since 1.39.0.
	 *
	 * @return array
	 */
	public static function get_all_disabled_plugins() { // phpcs:ignore VariableAnalysis.CodeAnalysis.VariableAnalysis.UnusedVariable
		return array();
	}

	/**
	 * Update active plugins option with current list of active plugins on WPCOM.
	 * This is a fallback to ensure this option is always up to date on WPCOM in case
	 * Sync is not present or disabled.
	 *
	 * @since 1.34.0
	 */
	private static function update_active_plugins_wpcom_no_sync_fallback() {
		$connection = new Manager();
		if ( ! $connection->is_connected() ) {
			return;
		}

		$site_id = \Jetpack_Options::get_option( 'id' );

		$body = wp_json_encode(
			array(
				'active_connected_plugins' => self::$plugins,
			)
		);

		Client::wpcom_json_api_request_as_blog(
			sprintf( '/sites/%d/jetpack-active-connected-plugins', $site_id ),
			'2',
			array(
				'headers' => array( 'content-type' => 'application/json' ),
				'method'  => 'POST',
			),
			$body,
			'wpcom'
		);
	}
}
class-plugin.php                                                                                                                                                                                                                                               2382          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * Plugin connection management class.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

/**
 * Plugin connection management class.
 * The class represents a single plugin that uses Jetpack connection.
 * Its functionality has been pretty simplistic so far: add to the storage (`Plugin_Storage`), remove it from there,
 * and determine whether it's the last active connection. As the component grows, there'll be more functionality added.
 */
class Plugin {

	/**
	 * List of the keys allowed as arguments
	 *
	 * @var array
	 */
	private $arguments_whitelist = array(
		'url_info',
	);

	/**
	 * Plugin slug.
	 *
	 * @var string
	 */
	private $slug;

	/**
	 * Initialize the plugin manager.
	 *
	 * @param string $slug Plugin slug.
	 */
	public function __construct( $slug ) {
		$this->slug = $slug;
	}

	/**
	 * Get the plugin slug.
	 *
	 * @return string
	 */
	public function get_slug() {
		return $this->slug;
	}

	/**
	 * Add the plugin connection info into Jetpack.
	 *
	 * @param string $name Plugin name, required.
	 * @param array  $args Plugin arguments, optional.
	 *
	 * @return $this
	 * @see $this->arguments_whitelist
	 */
	public function add( $name, array $args = array() ) {
		$args = compact( 'name' ) + array_intersect_key( $args, array_flip( $this->arguments_whitelist ) );

		Plugin_Storage::upsert( $this->slug, $args );

		return $this;
	}

	/**
	 * Remove the plugin connection info from Jetpack.
	 *
	 * @return $this
	 */
	public function remove() {
		Plugin_Storage::delete( $this->slug );

		return $this;
	}

	/**
	 * Determine if this plugin connection is the only one active at the moment, if any.
	 *
	 * @return bool
	 */
	public function is_only() {
		$plugins = Plugin_Storage::get_all();

		return ! $plugins || ( array_key_exists( $this->slug, $plugins ) && 1 === count( $plugins ) );
	}

	/**
	 * Add the plugin to the set of disconnected ones.
	 *
	 * @deprecated since 1.39.0.
	 *
	 * @return bool
	 */
	public function disable() {
		return true;
	}

	/**
	 * Remove the plugin from the set of disconnected ones.
	 *
	 * @deprecated since 1.39.0.
	 *
	 * @return bool
	 */
	public function enable() {
		return true;
	}

	/**
	 * Whether this plugin is allowed to use the connection.
	 *
	 * @deprecated since 11.0
	 * @return bool
	 */
	public function is_enabled() {
		return true;
	}
}
class-rest-authentication.php                                                                                                                                                                                                                                  5918          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Jetpack Connection Rest Authentication file.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

/**
 * The Jetpack Connection Rest Authentication class.
 */
class Rest_Authentication {

	/**
	 * The rest authentication status.
	 *
	 * @since 1.17.0
	 * @var boolean
	 */
	private $rest_authentication_status = null;

	/**
	 * The rest authentication type.
	 * Can be either 'user' or 'blog' depending on whether the request
	 * is signed with a user or a blog token.
	 *
	 * @since 1.29.0
	 * @var string
	 */
	private $rest_authentication_type = null;

	/**
	 * The Manager object.
	 *
	 * @since 1.17.0
	 * @var Object
	 */
	private $connection_manager = null;

	/**
	 * Holds the singleton instance of this class
	 *
	 * @since 1.17.0
	 * @var Object
	 */
	private static $instance = false;

	/**
	 * Flag used to avoid determine_current_user filter to enter an infinite loop
	 *
	 * @since 1.26.0
	 * @var boolean
	 */
	private $doing_determine_current_user_filter = false;

	/**
	 * The constructor.
	 */
	private function __construct() {
		$this->connection_manager = new Manager();
	}

	/**
	 * Controls the single instance of this class.
	 *
	 * @static
	 */
	public static function init() {
		if ( ! self::$instance ) {
			self::$instance = new self();

			add_filter( 'determine_current_user', array( self::$instance, 'wp_rest_authenticate' ) );
			add_filter( 'rest_authentication_errors', array( self::$instance, 'wp_rest_authentication_errors' ) );
		}

		return self::$instance;
	}

	/**
	 * Authenticates requests from Jetpack server to WP REST API endpoints.
	 * Uses the existing XMLRPC request signing implementation.
	 *
	 * @param int|bool $user User ID if one has been determined, false otherwise.
	 *
	 * @return int|null The user id or null if the request was authenticated via blog token, or not authenticated at all.
	 */
	public function wp_rest_authenticate( $user ) {
		if ( $this->doing_determine_current_user_filter ) {
			return $user;
		}

		$this->doing_determine_current_user_filter = true;

		try {
			if ( ! empty( $user ) ) {
				// Another authentication method is in effect.
				return $user;
			}

			add_filter(
				'jetpack_constant_default_value',
				__NAMESPACE__ . '\Utils::jetpack_api_constant_filter',
				10,
				2
			);

			// phpcs:ignore WordPress.Security.NonceVerification.Recommended
			if ( ! isset( $_GET['_for'] ) || 'jetpack' !== $_GET['_for'] ) {
				// Nothing to do for this authentication method.
				return null;
			}

			// phpcs:ignore WordPress.Security.NonceVerification.Recommended
			if ( ! isset( $_GET['token'] ) && ! isset( $_GET['signature'] ) ) {
				// Nothing to do for this authentication method.
				return null;
			}

			if ( ! isset( $_SERVER['REQUEST_METHOD'] ) ) {
				$this->rest_authentication_status = new \WP_Error(
					'rest_invalid_request',
					__( 'The request method is missing.', 'jetpack-connection' ),
					array( 'status' => 400 )
				);
				return null;
			}

			// Only support specific request parameters that have been tested and
			// are known to work with signature verification.  A different method
			// can be passed to the WP REST API via the '?_method=' parameter if
			// needed.
			if ( 'GET' !== $_SERVER['REQUEST_METHOD'] && 'POST' !== $_SERVER['REQUEST_METHOD'] ) {
				$this->rest_authentication_status = new \WP_Error(
					'rest_invalid_request',
					__( 'This request method is not supported.', 'jetpack-connection' ),
					array( 'status' => 400 )
				);
				return null;
			}
			if ( 'POST' !== $_SERVER['REQUEST_METHOD'] && ! empty( file_get_contents( 'php://input' ) ) ) {
				$this->rest_authentication_status = new \WP_Error(
					'rest_invalid_request',
					__( 'This request method does not support body parameters.', 'jetpack-connection' ),
					array( 'status' => 400 )
				);
				return null;
			}

			$verified = $this->connection_manager->verify_xml_rpc_signature();

			if (
				$verified &&
				isset( $verified['type'] ) &&
				'blog' === $verified['type']
			) {
				// Site-level authentication successful.
				$this->rest_authentication_status = true;
				$this->rest_authentication_type   = 'blog';
				return null;
			}

			if (
				$verified &&
				isset( $verified['type'] ) &&
				'user' === $verified['type'] &&
				! empty( $verified['user_id'] )
			) {
				// User-level authentication successful.
				$this->rest_authentication_status = true;
				$this->rest_authentication_type   = 'user';
				return $verified['user_id'];
			}

			// Something else went wrong.  Probably a signature error.
			$this->rest_authentication_status = new \WP_Error(
				'rest_invalid_signature',
				__( 'The request is not signed correctly.', 'jetpack-connection' ),
				array( 'status' => 400 )
			);
			return null;
		} finally {
			$this->doing_determine_current_user_filter = false;
		}
	}

	/**
	 * Report authentication status to the WP REST API.
	 *
	 * @param  WP_Error|mixed $value Error from another authentication handler, null if we should handle it, or another value if not.
	 * @return WP_Error|boolean|null {@see WP_JSON_Server::check_authentication}
	 */
	public function wp_rest_authentication_errors( $value ) {
		if ( null !== $value ) {
			return $value;
		}
		return $this->rest_authentication_status;
	}

	/**
	 * Resets the saved authentication state in between testing requests.
	 */
	public function reset_saved_auth_state() {
		$this->rest_authentication_status = null;
		$this->connection_manager->reset_saved_auth_state();
	}

	/**
	 * Whether the request was signed with a blog token.
	 *
	 * @since 1.29.0
	 *
	 * @return bool True if the request was signed with a valid blog token, false otherwise.
	 */
	public static function is_signed_with_blog_token() {
		$instance = self::init();

		return true === $instance->rest_authentication_status && 'blog' === $instance->rest_authentication_type;
	}
}
class-rest-connector.php                                                                                                                                                                                                                                       25915         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * Sets up the Connection REST API endpoints.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

use Automattic\Jetpack\Constants;
use Automattic\Jetpack\Redirect;
use Automattic\Jetpack\Status;
use Jetpack_XMLRPC_Server;
use WP_Error;
use WP_REST_Request;
use WP_REST_Response;
use WP_REST_Server;

/**
 * Registers the REST routes for Connections.
 */
class REST_Connector {
	/**
	 * The Connection Manager.
	 *
	 * @var Manager
	 */
	private $connection;

	/**
	 * This property stores the localized "Insufficient Permissions" error message.
	 *
	 * @var string Generic error message when user is not allowed to perform an action.
	 */
	private static $user_permissions_error_msg;

	const JETPACK__DEBUGGER_PUBLIC_KEY = "\r\n" . '-----BEGIN PUBLIC KEY-----' . "\r\n"
	. 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm+uLLVoxGCY71LS6KFc6' . "\r\n"
	. '1UnF6QGBAsi5XF8ty9kR3/voqfOkpW+gRerM2Kyjy6DPCOmzhZj7BFGtxSV2ZoMX' . "\r\n"
	. '9ZwWxzXhl/Q/6k8jg8BoY1QL6L2K76icXJu80b+RDIqvOfJruaAeBg1Q9NyeYqLY' . "\r\n"
	. 'lEVzN2vIwcFYl+MrP/g6Bc2co7Jcbli+tpNIxg4Z+Hnhbs7OJ3STQLmEryLpAxQO' . "\r\n"
	. 'q8cbhQkMx+FyQhxzSwtXYI/ClCUmTnzcKk7SgGvEjoKGAmngILiVuEJ4bm7Q1yok' . "\r\n"
	. 'xl9+wcfW6JAituNhml9dlHCWnn9D3+j8pxStHihKy2gVMwiFRjLEeD8K/7JVGkb/' . "\r\n"
	. 'EwIDAQAB' . "\r\n"
	. '-----END PUBLIC KEY-----' . "\r\n";

	/**
	 * Constructor.
	 *
	 * @param Manager $connection The Connection Manager.
	 */
	public function __construct( Manager $connection ) {
		$this->connection = $connection;

		self::$user_permissions_error_msg = esc_html__(
			'You do not have the correct user permissions to perform this action.
			Please contact your site admin if you think this is a mistake.',
			'jetpack-connection'
		);

		$jp_version = Constants::get_constant( 'JETPACK__VERSION' );

		if ( ! $this->connection->has_connected_owner() ) {
			// Register a site.
			register_rest_route(
				'jetpack/v4',
				'/verify_registration',
				array(
					'methods'             => WP_REST_Server::EDITABLE,
					'callback'            => array( $this, 'verify_registration' ),
					'permission_callback' => '__return_true',
				)
			);
		}

		// Authorize a remote user.
		register_rest_route(
			'jetpack/v4',
			'/remote_authorize',
			array(
				'methods'             => WP_REST_Server::EDITABLE,
				'callback'            => __CLASS__ . '::remote_authorize',
				'permission_callback' => '__return_true',
			)
		);

		// Get current connection status of Jetpack.
		register_rest_route(
			'jetpack/v4',
			'/connection',
			array(
				'methods'             => WP_REST_Server::READABLE,
				'callback'            => __CLASS__ . '::connection_status',
				'permission_callback' => '__return_true',
			)
		);

		// Disconnect site.
		register_rest_route(
			'jetpack/v4',
			'/connection',
			array(
				'methods'             => WP_REST_Server::EDITABLE,
				'callback'            => __CLASS__ . '::disconnect_site',
				'permission_callback' => __CLASS__ . '::disconnect_site_permission_check',
				'args'                => array(
					'isActive' => array(
						'description'       => __( 'Set to false will trigger the site to disconnect.', 'jetpack-connection' ),
						'validate_callback' => function ( $value ) {
							if ( false !== $value ) {
								return new WP_Error(
									'rest_invalid_param',
									__( 'The isActive argument should be set to false.', 'jetpack-connection' ),
									array( 'status' => 400 )
								);
							}

							return true;
						},
						'required'          => true,
					),
				),
			)
		);

		// We are only registering this route if Jetpack-the-plugin is not active or it's version is ge 10.0-alpha.
		// The reason for doing so is to avoid conflicts between the Connection package and
		// older versions of Jetpack, registering the same route twice.
		if ( empty( $jp_version ) || version_compare( $jp_version, '10.0-alpha', '>=' ) ) {
			// Get current user connection data.
			register_rest_route(
				'jetpack/v4',
				'/connection/data',
				array(
					'methods'             => WP_REST_Server::READABLE,
					'callback'            => __CLASS__ . '::get_user_connection_data',
					'permission_callback' => __CLASS__ . '::user_connection_data_permission_check',
				)
			);
		}

		// Get list of plugins that use the Jetpack connection.
		register_rest_route(
			'jetpack/v4',
			'/connection/plugins',
			array(
				'methods'             => WP_REST_Server::READABLE,
				'callback'            => array( __CLASS__, 'get_connection_plugins' ),
				'permission_callback' => __CLASS__ . '::connection_plugins_permission_check',
			)
		);

		// Full or partial reconnect in case of connection issues.
		register_rest_route(
			'jetpack/v4',
			'/connection/reconnect',
			array(
				'methods'             => WP_REST_Server::EDITABLE,
				'callback'            => array( $this, 'connection_reconnect' ),
				'permission_callback' => __CLASS__ . '::jetpack_reconnect_permission_check',
			)
		);

		// Register the site (get `blog_token`).
		register_rest_route(
			'jetpack/v4',
			'/connection/register',
			array(
				'methods'             => WP_REST_Server::EDITABLE,
				'callback'            => array( $this, 'connection_register' ),
				'permission_callback' => __CLASS__ . '::jetpack_register_permission_check',
				'args'                => array(
					'from'               => array(
						'description' => __( 'Indicates where the registration action was triggered for tracking/segmentation purposes', 'jetpack-connection' ),
						'type'        => 'string',
					),
					'registration_nonce' => array(
						'description' => __( 'The registration nonce', 'jetpack-connection' ),
						'type'        => 'string',
						'required'    => true,
					),
					'redirect_uri'       => array(
						'description' => __( 'URI of the admin page where the user should be redirected after connection flow', 'jetpack-connection' ),
						'type'        => 'string',
					),
					'plugin_slug'        => array(
						'description' => __( 'Indicates from what plugin the request is coming from', 'jetpack-connection' ),
						'type'        => 'string',
					),
				),
			)
		);

		// Get authorization URL.
		register_rest_route(
			'jetpack/v4',
			'/connection/authorize_url',
			array(
				'methods'             => WP_REST_Server::READABLE,
				'callback'            => array( $this, 'connection_authorize_url' ),
				'permission_callback' => __CLASS__ . '::user_connection_data_permission_check',
				'args'                => array(
					'redirect_uri' => array(
						'description' => __( 'URI of the admin page where the user should be redirected after connection flow', 'jetpack-connection' ),
						'type'        => 'string',
					),
				),
			)
		);

		register_rest_route(
			'jetpack/v4',
			'/user-token',
			array(
				array(
					'methods'             => WP_REST_Server::EDITABLE,
					'callback'            => array( static::class, 'update_user_token' ),
					'permission_callback' => array( static::class, 'update_user_token_permission_check' ),
					'args'                => array(
						'user_token'          => array(
							'description' => __( 'New user token', 'jetpack-connection' ),
							'type'        => 'string',
							'required'    => true,
						),
						'is_connection_owner' => array(
							'description' => __( 'Is connection owner', 'jetpack-connection' ),
							'type'        => 'boolean',
						),
					),
				),
			)
		);

		// Set the connection owner.
		register_rest_route(
			'jetpack/v4',
			'/connection/owner',
			array(
				'methods'             => WP_REST_Server::EDITABLE,
				'callback'            => array( static::class, 'set_connection_owner' ),
				'permission_callback' => array( static::class, 'set_connection_owner_permission_check' ),
				'args'                => array(
					'owner' => array(
						'description' => __( 'New owner', 'jetpack-connection' ),
						'type'        => 'integer',
						'required'    => true,
					),
				),
			)
		);
	}

	/**
	 * Handles verification that a site is registered.
	 *
	 * @since 1.7.0
	 * @since-jetpack 5.4.0
	 *
	 * @param WP_REST_Request $request The request sent to the WP REST API.
	 *
	 * @return string|WP_Error
	 */
	public function verify_registration( WP_REST_Request $request ) {
		$registration_data = array( $request['secret_1'], $request['state'] );

		return $this->connection->handle_registration( $registration_data );
	}

	/**
	 * Handles verification that a site is registered
	 *
	 * @since 1.7.0
	 * @since-jetpack 5.4.0
	 *
	 * @param WP_REST_Request $request The request sent to the WP REST API.
	 *
	 * @return array|wp-error
	 */
	public static function remote_authorize( $request ) {
		$xmlrpc_server = new Jetpack_XMLRPC_Server();
		$result        = $xmlrpc_server->remote_authorize( $request );

		if ( is_a( $result, 'IXR_Error' ) ) {
			$result = new WP_Error( $result->code, $result->message );
		}

		return $result;
	}

	/**
	 * Get connection status for this Jetpack site.
	 *
	 * @since 1.7.0
	 * @since-jetpack 4.3.0
	 *
	 * @param bool $rest_response Should we return a rest response or a simple array. Default to rest response.
	 *
	 * @return WP_REST_Response|array Connection information.
	 */
	public static function connection_status( $rest_response = true ) {
		$status     = new Status();
		$connection = new Manager();

		$connection_status = array(
			'isActive'          => $connection->has_connected_owner(), // TODO deprecate this.
			'isStaging'         => $status->is_staging_site(),
			'isRegistered'      => $connection->is_connected(),
			'isUserConnected'   => $connection->is_user_connected(),
			'hasConnectedOwner' => $connection->has_connected_owner(),
			'offlineMode'       => array(
				'isActive'        => $status->is_offline_mode(),
				'constant'        => defined( 'JETPACK_DEV_DEBUG' ) && JETPACK_DEV_DEBUG,
				'url'             => $status->is_local_site(),
				/** This filter is documented in packages/status/src/class-status.php */
				'filter'          => ( apply_filters( 'jetpack_development_mode', false ) || apply_filters( 'jetpack_offline_mode', false ) ), // jetpack_development_mode is deprecated.
				'wpLocalConstant' => defined( 'WP_LOCAL_DEV' ) && WP_LOCAL_DEV,
			),
			'isPublic'          => '1' == get_option( 'blog_public' ), // phpcs:ignore Universal.Operators.StrictComparisons.LooseEqual
		);

		/**
		 * Filters the connection status data.
		 *
		 * @since 1.25.0
		 *
		 * @param array An array containing the connection status data.
		 */
		$connection_status = apply_filters( 'jetpack_connection_status', $connection_status );

		if ( $rest_response ) {
			return rest_ensure_response(
				$connection_status
			);
		} else {
			return $connection_status;
		}
	}

	/**
	 * Get plugins connected to the Jetpack.
	 *
	 * @param bool $rest_response Should we return a rest response or a simple array. Default to rest response.
	 *
	 * @since 1.13.1
	 * @since 1.38.0 Added $rest_response param.
	 *
	 * @return WP_REST_Response|WP_Error Response or error object, depending on the request result.
	 */
	public static function get_connection_plugins( $rest_response = true ) {
		$plugins = ( new Manager() )->get_connected_plugins();

		if ( is_wp_error( $plugins ) ) {
			return $plugins;
		}

		array_walk(
			$plugins,
			function ( &$data, $slug ) {
				$data['slug'] = $slug;
			}
		);

		if ( $rest_response ) {
			return rest_ensure_response( array_values( $plugins ) );
		}

		return array_values( $plugins );
	}

	/**
	 * Verify that user can view Jetpack admin page and can activate plugins.
	 *
	 * @since 1.15.0
	 *
	 * @return bool|WP_Error Whether user has the capability 'activate_plugins'.
	 */
	public static function activate_plugins_permission_check() {
		if ( current_user_can( 'activate_plugins' ) ) {
			return true;
		}

		return new WP_Error( 'invalid_user_permission_activate_plugins', self::get_user_permissions_error_msg(), array( 'status' => rest_authorization_required_code() ) );
	}

	/**
	 * Permission check for the connection_plugins endpoint
	 *
	 * @return bool|WP_Error
	 */
	public static function connection_plugins_permission_check() {
		if ( true === static::activate_plugins_permission_check() ) {
			return true;
		}

		if ( true === static::is_request_signed_by_jetpack_debugger() ) {
			return true;
		}

		return new WP_Error( 'invalid_user_permission_activate_plugins', self::get_user_permissions_error_msg(), array( 'status' => rest_authorization_required_code() ) );
	}

	/**
	 * Permission check for the disconnect site endpoint.
	 *
	 * @since 1.30.1
	 *
	 * @return bool|WP_Error True if user is able to disconnect the site.
	 */
	public static function disconnect_site_permission_check() {
		if ( current_user_can( 'jetpack_disconnect' ) ) {
			return true;
		}

		return new WP_Error(
			'invalid_user_permission_jetpack_disconnect',
			self::get_user_permissions_error_msg(),
			array( 'status' => rest_authorization_required_code() )
		);
	}

	/**
	 * Get miscellaneous user data related to the connection. Similar data available in old "My Jetpack".
	 * Information about the master/primary user.
	 * Information about the current user.
	 *
	 * @param bool $rest_response Should we return a rest response or a simple array. Default to rest response.
	 *
	 * @since 1.30.1
	 *
	 * @return \WP_REST_Response|array
	 */
	public static function get_user_connection_data( $rest_response = true ) {
		$blog_id = \Jetpack_Options::get_option( 'id' );

		$connection = new Manager();

		$current_user     = wp_get_current_user();
		$connection_owner = $connection->get_connection_owner();

		$owner_display_name = false === $connection_owner ? null : $connection_owner->display_name;

		$is_user_connected = $connection->is_user_connected();
		$is_master_user    = false === $connection_owner ? false : ( $current_user->ID === $connection_owner->ID );
		$wpcom_user_data   = $connection->get_connected_user_data();

		// Add connected user gravatar to the returned wpcom_user_data.
		// Probably we shouldn't do this when $wpcom_user_data is false, but we have been since 2016 so
		// clients probably expect that by now.
		if ( false === $wpcom_user_data ) {
			$wpcom_user_data = array();
		}
		$wpcom_user_data['avatar'] = ( ! empty( $wpcom_user_data['email'] ) ?
		get_avatar_url(
			$wpcom_user_data['email'],
			array(
				'size'    => 64,
				'default' => 'mysteryman',
			)
		)
		: false );

		$current_user_connection_data = array(
			'isConnected' => $is_user_connected,
			'isMaster'    => $is_master_user,
			'username'    => $current_user->user_login,
			'id'          => $current_user->ID,
			'blogId'      => $blog_id,
			'wpcomUser'   => $wpcom_user_data,
			'gravatar'    => get_avatar_url( $current_user->ID, 64, 'mm', '', array( 'force_display' => true ) ),
			'permissions' => array(
				'connect'      => current_user_can( 'jetpack_connect' ),
				'connect_user' => current_user_can( 'jetpack_connect_user' ),
				'disconnect'   => current_user_can( 'jetpack_disconnect' ),
			),
		);

		/**
		 * Filters the current user connection data.
		 *
		 * @since 1.30.1
		 *
		 * @param array An array containing the current user connection data.
		 */
		$current_user_connection_data = apply_filters( 'jetpack_current_user_connection_data', $current_user_connection_data );

		$response = array(
			'currentUser'     => $current_user_connection_data,
			'connectionOwner' => $owner_display_name,
		);

		if ( $rest_response ) {
			return rest_ensure_response( $response );
		}

		return $response;
	}

	/**
	 * Permission check for the connection/data endpoint
	 *
	 * @return bool|WP_Error
	 */
	public static function user_connection_data_permission_check() {
		if ( current_user_can( 'jetpack_connect_user' ) ) {
			return true;
		}

		return new WP_Error(
			'invalid_user_permission_user_connection_data',
			self::get_user_permissions_error_msg(),
			array( 'status' => rest_authorization_required_code() )
		);
	}

	/**
	 * Verifies if the request was signed with the Jetpack Debugger key
	 *
	 * @param string|null $pub_key The public key used to verify the signature. Default is the Jetpack Debugger key. This is used for testing purposes.
	 *
	 * @return bool
	 */
	public static function is_request_signed_by_jetpack_debugger( $pub_key = null ) {
		 // phpcs:disable WordPress.Security.NonceVerification.Recommended
		if ( ! isset( $_GET['signature'] ) || ! isset( $_GET['timestamp'] ) || ! isset( $_GET['url'] ) || ! isset( $_GET['rest_route'] ) ) {
			return false;
		}

		// signature timestamp must be within 5min of current time.
		if ( abs( time() - (int) $_GET['timestamp'] ) > 300 ) {
			return false;
		}

		$signature = base64_decode( filter_var( wp_unslash( $_GET['signature'] ) ) ); // phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.obfuscation_base64_decode

		$signature_data = wp_json_encode(
			array(
				'rest_route' => filter_var( wp_unslash( $_GET['rest_route'] ) ),
				'timestamp'  => (int) $_GET['timestamp'],
				'url'        => filter_var( wp_unslash( $_GET['url'] ) ),
			)
		);

		if (
			! function_exists( 'openssl_verify' )
			|| 1 !== openssl_verify(
				$signature_data,
				$signature,
				$pub_key ? $pub_key : static::JETPACK__DEBUGGER_PUBLIC_KEY
			)
		) {
			return false;
		}

		// phpcs:enable WordPress.Security.NonceVerification.Recommended

		return true;
	}

	/**
	 * Verify that user is allowed to disconnect Jetpack.
	 *
	 * @since 1.15.0
	 *
	 * @return bool|WP_Error Whether user has the capability 'jetpack_disconnect'.
	 */
	public static function jetpack_reconnect_permission_check() {
		if ( current_user_can( 'jetpack_reconnect' ) ) {
			return true;
		}

		return new WP_Error( 'invalid_user_permission_jetpack_disconnect', self::get_user_permissions_error_msg(), array( 'status' => rest_authorization_required_code() ) );
	}

	/**
	 * Returns generic error message when user is not allowed to perform an action.
	 *
	 * @return string The error message.
	 */
	public static function get_user_permissions_error_msg() {
		return self::$user_permissions_error_msg;
	}

	/**
	 * The endpoint tried to partially or fully reconnect the website to WP.com.
	 *
	 * @since 1.15.0
	 *
	 * @return \WP_REST_Response|WP_Error
	 */
	public function connection_reconnect() {
		$response = array();

		$next = null;

		$result = $this->connection->restore();

		if ( is_wp_error( $result ) ) {
			$response = $result;
		} elseif ( is_string( $result ) ) {
			$next = $result;
		} else {
			$next = true === $result ? 'completed' : 'failed';
		}

		switch ( $next ) {
			case 'authorize':
				$response['status']       = 'in_progress';
				$response['authorizeUrl'] = $this->connection->get_authorization_url();
				break;
			case 'completed':
				$response['status'] = 'completed';
				/**
				 * Action fired when reconnection has completed successfully.
				 *
				 * @since 1.18.1
				 */
				do_action( 'jetpack_reconnection_completed' );
				break;
			case 'failed':
				$response = new WP_Error( 'Reconnect failed' );
				break;
		}

		return rest_ensure_response( $response );
	}

	/**
	 * Verify that user is allowed to connect Jetpack.
	 *
	 * @since 1.26.0
	 *
	 * @return bool|WP_Error Whether user has the capability 'jetpack_connect'.
	 */
	public static function jetpack_register_permission_check() {
		if ( current_user_can( 'jetpack_connect' ) ) {
			return true;
		}

		return new WP_Error( 'invalid_user_permission_jetpack_connect', self::get_user_permissions_error_msg(), array( 'status' => rest_authorization_required_code() ) );
	}

	/**
	 * The endpoint tried to partially or fully reconnect the website to WP.com.
	 *
	 * @since 1.7.0
	 * @since-jetpack 7.7.0
	 *
	 * @param \WP_REST_Request $request The request sent to the WP REST API.
	 *
	 * @return \WP_REST_Response|WP_Error
	 */
	public function connection_register( $request ) {
		if ( ! wp_verify_nonce( $request->get_param( 'registration_nonce' ), 'jetpack-registration-nonce' ) ) {
			return new WP_Error( 'invalid_nonce', __( 'Unable to verify your request.', 'jetpack-connection' ), array( 'status' => 403 ) );
		}

		if ( isset( $request['from'] ) ) {
			$this->connection->add_register_request_param( 'from', (string) $request['from'] );
		}

		if ( ! empty( $request['plugin_slug'] ) ) {
			// If `plugin_slug` matches a plugin using the connection, let's inform the plugin that is establishing the connection.
			$connected_plugin = Plugin_Storage::get_one( (string) $request['plugin_slug'] );
			if ( ! is_wp_error( $connected_plugin ) && ! empty( $connected_plugin ) ) {
				$this->connection->set_plugin_instance( new Plugin( (string) $request['plugin_slug'] ) );
			}
		}

		$result = $this->connection->try_registration();

		if ( is_wp_error( $result ) ) {
			return $result;
		}

		$redirect_uri = $request->get_param( 'redirect_uri' ) ? admin_url( $request->get_param( 'redirect_uri' ) ) : null;

		if ( class_exists( 'Jetpack' ) ) {
			$authorize_url = \Jetpack::build_authorize_url( $redirect_uri );
		} else {
			$authorize_url = $this->connection->get_authorization_url( null, $redirect_uri );
		}

		/**
		 * Filters the response of jetpack/v4/connection/register endpoint
		 *
		 * @param array $response Array response
		 * @since 1.27.0
		 */
		$response_body = apply_filters(
			'jetpack_register_site_rest_response',
			array()
		);

		// We manipulate the alternate URLs after the filter is applied, so they can not be overwritten.
		$response_body['authorizeUrl'] = $authorize_url;
		if ( ! empty( $response_body['alternateAuthorizeUrl'] ) ) {
			$response_body['alternateAuthorizeUrl'] = Redirect::get_url( $response_body['alternateAuthorizeUrl'] );
		}

		return rest_ensure_response( $response_body );
	}

	/**
	 * Get the authorization URL.
	 *
	 * @since 1.27.0
	 *
	 * @param \WP_REST_Request $request The request sent to the WP REST API.
	 *
	 * @return \WP_REST_Response|WP_Error
	 */
	public function connection_authorize_url( $request ) {
		$redirect_uri  = $request->get_param( 'redirect_uri' ) ? admin_url( $request->get_param( 'redirect_uri' ) ) : null;
		$authorize_url = $this->connection->get_authorization_url( null, $redirect_uri );

		return rest_ensure_response(
			array(
				'authorizeUrl' => $authorize_url,
			)
		);
	}

	/**
	 * The endpoint tried to partially or fully reconnect the website to WP.com.
	 *
	 * @since 1.29.0
	 *
	 * @param \WP_REST_Request $request The request sent to the WP REST API.
	 *
	 * @return \WP_REST_Response|WP_Error
	 */
	public static function update_user_token( $request ) {
		$token_parts = explode( '.', $request['user_token'] );

		if ( count( $token_parts ) !== 3 || ! (int) $token_parts[2] || ! ctype_digit( $token_parts[2] ) ) {
			return new WP_Error( 'invalid_argument_user_token', esc_html__( 'Invalid user token is provided', 'jetpack-connection' ) );
		}

		$user_id = (int) $token_parts[2];

		if ( false === get_userdata( $user_id ) ) {
			return new WP_Error( 'invalid_argument_user_id', esc_html__( 'Invalid user id is provided', 'jetpack-connection' ) );
		}

		$connection = new Manager();

		if ( ! $connection->is_connected() ) {
			return new WP_Error( 'site_not_connected', esc_html__( 'Site is not connected', 'jetpack-connection' ) );
		}

		$is_connection_owner = isset( $request['is_connection_owner'] )
			? (bool) $request['is_connection_owner']
			: ( new Manager() )->get_connection_owner_id() === $user_id;

		( new Tokens() )->update_user_token( $user_id, $request['user_token'], $is_connection_owner );

		/**
		 * Fires when the user token gets successfully replaced.
		 *
		 * @since 1.29.0
		 *
		 * @param int $user_id User ID.
		 * @param string $token New user token.
		 */
		do_action( 'jetpack_updated_user_token', $user_id, $request['user_token'] );

		return rest_ensure_response(
			array(
				'success' => true,
			)
		);
	}

	/**
	 * Disconnects Jetpack from the WordPress.com Servers
	 *
	 * @since 1.30.1
	 *
	 * @return bool|WP_Error True if Jetpack successfully disconnected.
	 */
	public static function disconnect_site() {
		$connection = new Manager();

		if ( $connection->is_connected() ) {
			$connection->disconnect_site();
			return rest_ensure_response( array( 'code' => 'success' ) );
		}

		return new WP_Error(
			'disconnect_failed',
			esc_html__( 'Failed to disconnect the site as it appears already disconnected.', 'jetpack-connection' ),
			array( 'status' => 400 )
		);
	}

	/**
	 * Verify that the API client is allowed to replace user token.
	 *
	 * @since 1.29.0
	 *
	 * @return bool|WP_Error.
	 */
	public static function update_user_token_permission_check() {
		return Rest_Authentication::is_signed_with_blog_token()
			? true
			: new WP_Error( 'invalid_permission_update_user_token', self::get_user_permissions_error_msg(), array( 'status' => rest_authorization_required_code() ) );
	}

	/**
	 * Change the connection owner.
	 *
	 * @since 1.29.0
	 *
	 * @param WP_REST_Request $request The request sent to the WP REST API.
	 *
	 * @return \WP_REST_Response|WP_Error
	 */
	public static function set_connection_owner( $request ) {
		$new_owner_id = $request['owner'];

		$owner_set = ( new Manager() )->update_connection_owner( $new_owner_id );

		if ( is_wp_error( $owner_set ) ) {
			return $owner_set;
		}

		return rest_ensure_response(
			array(
				'code' => 'success',
			)
		);
	}

	/**
	 * Check that user has permission to change the master user.
	 *
	 * @since 1.7.0
	 * @since-jetpack 6.2.0
	 * @since-jetpack 7.7.0 Update so that any user with jetpack_disconnect privs can set owner.
	 *
	 * @return bool|WP_Error True if user is able to change master user.
	 */
	public static function set_connection_owner_permission_check() {
		if ( current_user_can( 'jetpack_disconnect' ) ) {
			return true;
		}

		return new WP_Error( 'invalid_user_permission_set_connection_owner', self::get_user_permissions_error_msg(), array( 'status' => rest_authorization_required_code() ) );
	}
}
class-secrets.php                                                                                                                                                                                                                                              8474          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Jetpack Connection Secrets class file.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

use Jetpack_Options;
use WP_Error;

/**
 * The Jetpack Connection Secrets class that is used to manage secrets.
 */
class Secrets {

	const SECRETS_MISSING            = 'secrets_missing';
	const SECRETS_EXPIRED            = 'secrets_expired';
	const LEGACY_SECRETS_OPTION_NAME = 'jetpack_secrets';

	/**
	 * Deletes all connection secrets from the local Jetpack site.
	 */
	public function delete_all() {
		Jetpack_Options::delete_raw_option( 'jetpack_secrets' );
	}

	/**
	 * Runs the wp_generate_password function with the required parameters. This is the
	 * default implementation of the secret callable, can be overridden using the
	 * jetpack_connection_secret_generator filter.
	 *
	 * @return String $secret value.
	 */
	private function secret_callable_method() {
		$secret = wp_generate_password( 32, false );

		// Some sites may hook into the random_password filter and make the password shorter, let's make sure our secret has the required length.
		$attempts      = 1;
		$secret_length = strlen( $secret );
		while ( $secret_length < 32 && $attempts < 32 ) {
			++$attempts;
			$secret       .= wp_generate_password( 32, false );
			$secret_length = strlen( $secret );
		}
		return (string) substr( $secret, 0, 32 );
	}

	/**
	 * Generates two secret tokens and the end of life timestamp for them.
	 *
	 * @param String       $action       The action name.
	 * @param Integer|bool $user_id The user identifier. Defaults to `false`.
	 * @param Integer      $exp          Expiration time in seconds.
	 */
	public function generate( $action, $user_id = false, $exp = 600 ) {
		if ( false === $user_id ) {
			$user_id = get_current_user_id();
		}

		$callable = apply_filters( 'jetpack_connection_secret_generator', array( static::class, 'secret_callable_method' ) );

		$secrets = Jetpack_Options::get_raw_option(
			self::LEGACY_SECRETS_OPTION_NAME,
			array()
		);

		$secret_name = 'jetpack_' . $action . '_' . $user_id;

		if (
			isset( $secrets[ $secret_name ] ) &&
			$secrets[ $secret_name ]['exp'] > time()
		) {
			return $secrets[ $secret_name ];
		}

		$secret_value = array(
			'secret_1' => call_user_func( $callable ),
			'secret_2' => call_user_func( $callable ),
			'exp'      => time() + $exp,
		);

		$secrets[ $secret_name ] = $secret_value;

		$res = Jetpack_Options::update_raw_option( self::LEGACY_SECRETS_OPTION_NAME, $secrets );
		return $res ? $secrets[ $secret_name ] : false;
	}

	/**
	 * Returns two secret tokens and the end of life timestamp for them.
	 *
	 * @param String  $action  The action name.
	 * @param Integer $user_id The user identifier.
	 * @return string|array an array of secrets or an error string.
	 */
	public function get( $action, $user_id ) {
		$secret_name = 'jetpack_' . $action . '_' . $user_id;
		$secrets     = Jetpack_Options::get_raw_option(
			self::LEGACY_SECRETS_OPTION_NAME,
			array()
		);

		if ( ! isset( $secrets[ $secret_name ] ) ) {
			return self::SECRETS_MISSING;
		}

		if ( $secrets[ $secret_name ]['exp'] < time() ) {
			$this->delete( $action, $user_id );
			return self::SECRETS_EXPIRED;
		}

		return $secrets[ $secret_name ];
	}

	/**
	 * Deletes secret tokens in case they, for example, have expired.
	 *
	 * @param String  $action  The action name.
	 * @param Integer $user_id The user identifier.
	 */
	public function delete( $action, $user_id ) {
		$secret_name = 'jetpack_' . $action . '_' . $user_id;
		$secrets     = Jetpack_Options::get_raw_option(
			self::LEGACY_SECRETS_OPTION_NAME,
			array()
		);
		if ( isset( $secrets[ $secret_name ] ) ) {
			unset( $secrets[ $secret_name ] );
			Jetpack_Options::update_raw_option( self::LEGACY_SECRETS_OPTION_NAME, $secrets );
		}
	}

	/**
	 * Verify a Previously Generated Secret.
	 *
	 * @param string $action   The type of secret to verify.
	 * @param string $secret_1 The secret string to compare to what is stored.
	 * @param int    $user_id  The user ID of the owner of the secret.
	 * @return WP_Error|string WP_Error on failure, secret_2 on success.
	 */
	public function verify( $action, $secret_1, $user_id ) {
		$allowed_actions = array( 'register', 'authorize', 'publicize' );
		if ( ! in_array( $action, $allowed_actions, true ) ) {
			return new WP_Error( 'unknown_verification_action', 'Unknown Verification Action', 400 );
		}

		$user = get_user_by( 'id', $user_id );

		/**
		 * We've begun verifying the previously generated secret.
		 *
		 * @since 1.7.0
		 * @since-jetpack 7.5.0
		 *
		 * @param string   $action The type of secret to verify.
		 * @param \WP_User $user The user object.
		 */
		do_action( 'jetpack_verify_secrets_begin', $action, $user );

		$return_error = function ( WP_Error $error ) use ( $action, $user ) {
			/**
			 * Verifying of the previously generated secret has failed.
			 *
			 * @since 1.7.0
			 * @since-jetpack 7.5.0
			 *
			 * @param string    $action  The type of secret to verify.
			 * @param \WP_User  $user The user object.
			 * @param WP_Error $error The error object.
			 */
			do_action( 'jetpack_verify_secrets_fail', $action, $user, $error );

			return $error;
		};

		$stored_secrets = $this->get( $action, $user_id );
		$this->delete( $action, $user_id );

		$error = null;
		if ( empty( $secret_1 ) ) {
			$error = $return_error(
				new WP_Error(
					'verify_secret_1_missing',
					/* translators: "%s" is the name of a paramter. It can be either "secret_1" or "state". */
					sprintf( __( 'The required "%s" parameter is missing.', 'jetpack-connection' ), 'secret_1' ),
					400
				)
			);
		} elseif ( ! is_string( $secret_1 ) ) {
			$error = $return_error(
				new WP_Error(
					'verify_secret_1_malformed',
					/* translators: "%s" is the name of a paramter. It can be either "secret_1" or "state". */
					sprintf( __( 'The required "%s" parameter is malformed.', 'jetpack-connection' ), 'secret_1' ),
					400
				)
			);
		} elseif ( empty( $user_id ) ) {
			// $user_id is passed around during registration as "state".
			$error = $return_error(
				new WP_Error(
					'state_missing',
					/* translators: "%s" is the name of a paramter. It can be either "secret_1" or "state". */
					sprintf( __( 'The required "%s" parameter is missing.', 'jetpack-connection' ), 'state' ),
					400
				)
			);
		} elseif ( ! ctype_digit( (string) $user_id ) ) {
			$error = $return_error(
				new WP_Error(
					'state_malformed',
					/* translators: "%s" is the name of a paramter. It can be either "secret_1" or "state". */
					sprintf( __( 'The required "%s" parameter is malformed.', 'jetpack-connection' ), 'state' ),
					400
				)
			);
		} elseif ( self::SECRETS_MISSING === $stored_secrets ) {
			$error = $return_error(
				new WP_Error(
					'verify_secrets_missing',
					__( 'Verification secrets not found', 'jetpack-connection' ),
					400
				)
			);
		} elseif ( self::SECRETS_EXPIRED === $stored_secrets ) {
			$error = $return_error(
				new WP_Error(
					'verify_secrets_expired',
					__( 'Verification took too long', 'jetpack-connection' ),
					400
				)
			);
		} elseif ( ! $stored_secrets ) {
			$error = $return_error(
				new WP_Error(
					'verify_secrets_empty',
					__( 'Verification secrets are empty', 'jetpack-connection' ),
					400
				)
			);
		} elseif ( is_wp_error( $stored_secrets ) ) {
			$stored_secrets->add_data( 400 );
			$error = $return_error( $stored_secrets );
		} elseif ( empty( $stored_secrets['secret_1'] ) || empty( $stored_secrets['secret_2'] ) || empty( $stored_secrets['exp'] ) ) {
			$error = $return_error(
				new WP_Error(
					'verify_secrets_incomplete',
					__( 'Verification secrets are incomplete', 'jetpack-connection' ),
					400
				)
			);
		} elseif ( ! hash_equals( $secret_1, $stored_secrets['secret_1'] ) ) {
			$error = $return_error(
				new WP_Error(
					'verify_secrets_mismatch',
					__( 'Secret mismatch', 'jetpack-connection' ),
					400
				)
			);
		}

		// Something went wrong during the checks, returning the error.
		if ( ! empty( $error ) ) {
			return $error;
		}

		/**
		 * We've succeeded at verifying the previously generated secret.
		 *
		 * @since 1.7.0
		 * @since-jetpack 7.5.0
		 *
		 * @param string   $action The type of secret to verify.
		 * @param \WP_User $user The user object.
		 */
		do_action( 'jetpack_verify_secrets_success', $action, $user );

		return $stored_secrets['secret_2'];
	}
}
class-server-sandbox.php                                                                                                                                                                                                                                       7862          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Server_Sandbox class.
 *
 * This feature is only useful for Automattic developers.
 * It configures Jetpack to talk to staging/sandbox servers
 * on WordPress.com instead of production servers.
 *
 * @package automattic/jetpack-sandbox
 */

namespace Automattic\Jetpack\Connection;

use Automattic\Jetpack\Constants;

/**
 * The Server_Sandbox class.
 */
class Server_Sandbox {

	/**
	 * Sets up the action hooks for the server sandbox.
	 */
	public function init() {
		if ( did_action( 'jetpack_server_sandbox_init' ) ) {
			return;
		}

		add_action( 'requests-requests.before_request', array( $this, 'server_sandbox' ), 10, 4 );
		add_action( 'admin_bar_menu', array( $this, 'admin_bar_add_sandbox_item' ), 999 );

		/**
		 * Fires when the server sandbox is initialized. This action is used to ensure that
		 * the server sandbox action hooks are set up only once.
		 *
		 * @since 1.30.7
		 */
		do_action( 'jetpack_server_sandbox_init' );
	}

	/**
	 * Returns the new url and host values.
	 *
	 * @param string $sandbox Sandbox domain.
	 * @param string $url URL of request about to be made.
	 * @param array  $headers Headers of request about to be made.
	 * @param string $data The body of request about to be made.
	 * @param string $method The method of request about to be made.
	 *
	 * @return array [ 'url' => new URL, 'host' => new Host, 'new_signature => New signature if url was changed ]
	 */
	public function server_sandbox_request_parameters( $sandbox, $url, $headers, $data = null, $method = 'GET' ) {
		$host          = '';
		$new_signature = '';

		if ( ! is_string( $sandbox ) || ! is_string( $url ) ) {
			return array(
				'url'           => $url,
				'host'          => $host,
				'new_signature' => $new_signature,
			);
		}

		$url_host = wp_parse_url( $url, PHP_URL_HOST );

		switch ( $url_host ) {
			case 'public-api.wordpress.com':
			case 'jetpack.wordpress.com':
			case 'jetpack.com':
			case 'dashboard.wordpress.com':
				$host         = isset( $headers['Host'] ) ? $headers['Host'] : $url_host;
				$original_url = $url;
				$url          = preg_replace(
					'@^(https?://)' . preg_quote( $url_host, '@' ) . '(?=[/?#].*|$)@',
					'${1}' . $sandbox,
					$url,
					1
				);

				/**
				 * Whether to add the X Debug query parameter to the request made to the Sandbox
				 *
				 * @since 1.36.0
				 *
				 * @param bool   $add_parameter Whether to add the parameter to the request or not. Default is to false.
				 * @param string $url The URL of the request being made.
				 * @param string $host The host of the request being made.
				*/
				if ( apply_filters( 'jetpack_sandbox_add_profile_parameter', false, $url, $host ) ) {
					$url = add_query_arg( 'XDEBUG_PROFILE', 1, $url );

					// URL has been modified since the signature was created. We'll need a new one.
					$original_url  = add_query_arg( 'XDEBUG_PROFILE', 1, $original_url );
					$new_signature = $this->get_new_signature( $original_url, $headers, $data, $method );

				}
		}

		return compact( 'url', 'host', 'new_signature' );
	}

	/**
	 * Gets a new signature for the request
	 *
	 * @param string $url The new URL to be signed.
	 * @param array  $headers The headers of the request about to be made.
	 * @param string $data The body of request about to be made.
	 * @param string $method The method of the request about to be made.
	 * @return string|null
	 */
	private function get_new_signature( $url, $headers, $data, $method ) {

		if ( ! empty( $headers['Authorization'] ) ) {
			$a_headers = $this->extract_authorization_headers( $headers );
			if ( ! empty( $a_headers ) ) {
				$token_details = explode( ':', $a_headers['token'] );

				if ( count( $token_details ) === 3 ) {
					$user_id           = $token_details[2];
					$token             = ( new Tokens() )->get_access_token( $user_id );
					$time_diff         = (int) \Jetpack_Options::get_option( 'time_diff' );
					$jetpack_signature = new \Jetpack_Signature( $token->secret, $time_diff );

					$signature = $jetpack_signature->sign_request(
						$a_headers['token'],
						$a_headers['timestamp'],
						$a_headers['nonce'],
						$a_headers['body-hash'],
						$method,
						$url,
						$data,
						false
					);

					if ( $signature && ! is_wp_error( $signature ) ) {
						return $signature;
					} elseif ( is_wp_error( $signature ) ) {
						$this->log_new_signature_error( $signature->get_error_message() );
					}
				} else {
					$this->log_new_signature_error( 'Malformed token on Authorization Header' );
				}
			} else {
				$this->log_new_signature_error( 'Error extracting Authorization Header' );
			}
		} else {
			$this->log_new_signature_error( 'Empty Authorization Header' );
		}
	}

	/**
	 * Logs error if the attempt to create a new signature fails
	 *
	 * @param string $message The error message.
	 * @return void
	 */
	private function log_new_signature_error( $message ) {
		if ( defined( 'WP_DEBUG' ) && WP_DEBUG ) {
			error_log( sprintf( "SANDBOXING: Error re-signing the request. '%s'", $message ) ); // phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_error_log
		}
	}

	/**
	 * Extract the values in the Authorization header into an array
	 *
	 * @param array $headers The headers of the request about to be made.
	 * @return array|null
	 */
	public function extract_authorization_headers( $headers ) {
		if ( ! empty( $headers['Authorization'] ) && is_string( $headers['Authorization'] ) ) {
			$header = str_replace( 'X_JETPACK ', '', $headers['Authorization'] );
			$vars   = explode( ' ', $header );
			$result = array();
			foreach ( $vars as $var ) {
				$elements = explode( '"', $var );
				if ( count( $elements ) === 3 ) {
					$result[ substr( $elements[0], 0, -1 ) ] = $elements[1];
				}
			}
			return $result;
		}
	}

	/**
	 * Modifies parameters of request in order to send the request to the
	 * server specified by `JETPACK__SANDBOX_DOMAIN`.
	 *
	 * Attached to the `requests-requests.before_request` filter.
	 *
	 * @param string       $url URL of request about to be made.
	 * @param array        $headers Headers of request about to be made.
	 * @param array|string $data Data of request about to be made.
	 * @param string       $type Type of request about to be made.
	 * @return void
	 */
	public function server_sandbox( &$url, &$headers, &$data = null, &$type = null ) {
		if ( ! Constants::get_constant( 'JETPACK__SANDBOX_DOMAIN' ) ) {
			return;
		}

		$original_url = $url;

		$request_parameters = $this->server_sandbox_request_parameters( Constants::get_constant( 'JETPACK__SANDBOX_DOMAIN' ), $url, $headers, $data, $type );

		$url = $request_parameters['url'];

		if ( $request_parameters['host'] ) {
			$headers['Host'] = $request_parameters['host'];

			if ( $request_parameters['new_signature'] ) {
				$headers['Authorization'] = preg_replace( '/signature=\"[^\"]+\"/', 'signature="' . $request_parameters['new_signature'] . '"', $headers['Authorization'] );
			}

			if ( defined( 'WP_DEBUG' ) && WP_DEBUG ) {
				error_log( sprintf( "SANDBOXING via '%s': '%s'", Constants::get_constant( 'JETPACK__SANDBOX_DOMAIN' ), $original_url ) ); // phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_error_log
			}
		}
	}

	/**
	 * Adds a "Jetpack API Sandboxed" item to the admin bar if the JETPACK__SANDBOX_DOMAIN
	 * constant is set.
	 *
	 * Attached to the `admin_bar_menu` action.
	 *
	 * @param WP_Admin_Bar $wp_admin_bar The WP_Admin_Bar instance.
	 */
	public function admin_bar_add_sandbox_item( $wp_admin_bar ) {
		if ( ! Constants::get_constant( 'JETPACK__SANDBOX_DOMAIN' ) ) {
			return;
		}

		$node = array(
			'id'    => 'jetpack-connection-api-sandbox',
			'title' => 'Jetpack API Sandboxed',
			'meta'  => array(
				'title' => 'Sandboxing via ' . Constants::get_constant( 'JETPACK__SANDBOX_DOMAIN' ),
			),
		);

		$wp_admin_bar->add_menu( $node );
	}
}
class-terms-of-service.php                                                                                                                                                                                                                                     2798          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * A Terms of Service class for Jetpack.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack;

/**
 * Class Terms_Of_Service
 *
 * Helper class that is responsible for the state of agreement of the terms of service.
 */
class Terms_Of_Service {
	/**
	 * Jetpack option name where the terms of service state is stored.
	 *
	 * @var string
	 */
	const OPTION_NAME = 'tos_agreed';

	/**
	 * Allow the site to agree to the terms of service.
	 */
	public function agree() {
		$this->set_agree();
		/**
		 * Acton fired when the master user has agreed to the terms of service.
		 *
		 * @since 1.0.4
		 * @since-jetpack 7.9.0
		 */
		do_action( 'jetpack_agreed_to_terms_of_service' );
	}

	/**
	 * Allow the site to reject to the terms of service.
	 */
	public function reject() {
		$this->set_reject();
		/**
		 * Acton fired when the master user has revoked their agreement to the terms of service.
		 *
		 * @since 1.0.4
		 * @since-jetpack 7.9.1
		 */
		do_action( 'jetpack_reject_terms_of_service' );
	}

	/**
	 * Returns whether the master user has agreed to the terms of service.
	 *
	 * The following conditions have to be met in order to agree to the terms of service.
	 * 1. The master user has gone though the connect flow.
	 * 2. The site is not in dev mode.
	 * 3. The master user of the site is still connected (deprecated @since 1.4.0).
	 *
	 * @return bool
	 */
	public function has_agreed() {
		if ( $this->is_offline_mode() ) {
			return false;
		}
		/**
		 * Before 1.4.0 we used to also check if the master user of the site is connected
		 * by calling the Connection related `is_active` method.
		 * As of 1.4.0 we have removed this check in order to resolve the
		 * circular dependencies it was introducing to composer packages.
		 *
		 * @since 1.4.0
		 */
		return $this->get_raw_has_agreed();
	}

	/**
	 * Abstracted for testing purposes.
	 * Tells us if the site is in dev mode.
	 *
	 * @return bool
	 */
	protected function is_offline_mode() {
		return ( new Status() )->is_offline_mode();
	}

	/**
	 * Gets just the Jetpack Option that contains the terms of service state.
	 * Abstracted for testing purposes.
	 *
	 * @return bool
	 */
	protected function get_raw_has_agreed() {
		return \Jetpack_Options::get_option( self::OPTION_NAME, false );
	}

	/**
	 * Sets the correct Jetpack Option to mark the that the site has agreed to the terms of service.
	 * Abstracted for testing purposes.
	 */
	protected function set_agree() {
		\Jetpack_Options::update_option( self::OPTION_NAME, true );
	}

	/**
	 * Sets the correct Jetpack Option to mark that the site has rejected the terms of service.
	 * Abstracted for testing purposes.
	 */
	protected function set_reject() {
		\Jetpack_Options::update_option( self::OPTION_NAME, false );
	}
}
class-tokens-locks.php                                                                                                                                                                                                                                         1699          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Jetpack Connection Tokens Locks class file.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

/**
 *
 * Jetpack Connection tokens cleanup during migration.
 * This class encapsulates plugin or tool specific code that activates token lock upon migration.
 *
 * The connection tokens are locked to the current domain.
 * If the database is imported on another site (domain name doesn't match), the tokens get removed.
 *
 * @see https://github.com/Automattic/jetpack/pull/23597
 * @see \Automattic\Jetpack\Connection\Tokens::is_locked()
 */
class Tokens_Locks {

	/**
	 * Whether the class has been initialized.
	 *
	 * @var bool
	 */
	private static $is_initialized = false;

	/**
	 * Run the initializers if they haven't been run already.
	 */
	public function __construct() {
		if ( static::$is_initialized ) {
			return;
		}

		$this->init_aiowpm();

		static::$is_initialized = true;
	}

	/**
	 * Set the token lock for AIOWPM plugin export.
	 *
	 * @param array $params The filter parameters.
	 *
	 * @return array
	 */
	public function aiowpm_set_lock( $params ) {
		( new Tokens() )->set_lock();
		return $params;
	}

	/**
	 * Remove the token lock for AIOWPM plugin export.
	 *
	 * @param array $params The filter parameters.
	 *
	 * @return array
	 */
	public function aiowpm_remove_lock( $params ) {
		( new Tokens() )->remove_lock();
		return $params;
	}

	/**
	 * Initialize the All-in-One-WP-Migration plugin hooks.
	 *
	 * @return void
	 */
	private function init_aiowpm() {
		add_filter( 'ai1wm_export', array( $this, 'aiowpm_set_lock' ), 180 );
		add_filter( 'ai1wm_export', array( $this, 'aiowpm_remove_lock' ), 250 );
	}
}
class-tokens.php                                                                                                                                                                                                                                               21353         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Jetpack Connection Tokens class file.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

use Automattic\Jetpack\Constants;
use Automattic\Jetpack\Roles;
use DateInterval;
use DateTime;
use Exception;
use Jetpack_Options;
use WP_Error;

/**
 * The Jetpack Connection Tokens class that manages tokens.
 */
class Tokens {

	const MAGIC_NORMAL_TOKEN_KEY = ';normal;';

	/**
	 * Datetime format.
	 */
	const DATE_FORMAT_ATOM = 'Y-m-d\TH:i:sP';

	/**
	 * Deletes all connection tokens and transients from the local Jetpack site.
	 */
	public function delete_all() {
		Jetpack_Options::delete_option(
			array(
				'blog_token',
				'user_token',
				'user_tokens',
			)
		);

		$this->remove_lock();
	}

	/**
	 * Perform the API request to validate the blog and user tokens.
	 *
	 * @param int|null $user_id ID of the user we need to validate token for. Current user's ID by default.
	 *
	 * @return array|false|WP_Error The API response: `array( 'blog_token_is_healthy' => true|false, 'user_token_is_healthy' => true|false )`.
	 */
	public function validate( $user_id = null ) {
		$blog_id = Jetpack_Options::get_option( 'id' );
		if ( ! $blog_id ) {
			return new WP_Error( 'site_not_registered', 'Site not registered.' );
		}
		$url = sprintf(
			'%s/%s/v%s/%s',
			Constants::get_constant( 'JETPACK__WPCOM_JSON_API_BASE' ),
			'wpcom',
			'2',
			'sites/' . $blog_id . '/jetpack-token-health'
		);

		$user_token = $this->get_access_token( $user_id ? $user_id : get_current_user_id() );
		$blog_token = $this->get_access_token();

		// Cannot validate non-existent tokens.
		if ( false === $user_token || false === $blog_token ) {
			return false;
		}

		$method   = 'POST';
		$body     = array(
			'user_token' => $this->get_signed_token( $user_token ),
			'blog_token' => $this->get_signed_token( $blog_token ),
		);
		$response = Client::_wp_remote_request( $url, compact( 'body', 'method' ) );

		if ( is_wp_error( $response ) || ! wp_remote_retrieve_body( $response ) || 200 !== wp_remote_retrieve_response_code( $response ) ) {
			return false;
		}

		$body = json_decode( wp_remote_retrieve_body( $response ), true );

		return $body ? $body : false;
	}

	/**
	 * Perform the API request to validate only the blog.
	 *
	 * @return bool|WP_Error Boolean with the test result. WP_Error if test cannot be performed.
	 */
	public function validate_blog_token() {
		$blog_id = Jetpack_Options::get_option( 'id' );
		if ( ! $blog_id ) {
			return new WP_Error( 'site_not_registered', 'Site not registered.' );
		}
		$url = sprintf(
			'%s/%s/v%s/%s',
			Constants::get_constant( 'JETPACK__WPCOM_JSON_API_BASE' ),
			'wpcom',
			'2',
			'sites/' . $blog_id . '/jetpack-token-health/blog'
		);

		$method   = 'GET';
		$response = Client::remote_request( compact( 'url', 'method' ) );

		if ( is_wp_error( $response ) || ! wp_remote_retrieve_body( $response ) || 200 !== wp_remote_retrieve_response_code( $response ) ) {
			return false;
		}

		$body = json_decode( wp_remote_retrieve_body( $response ), true );

		return is_array( $body ) && isset( $body['is_healthy'] ) && true === $body['is_healthy'];
	}

	/**
	 * Obtains the auth token.
	 *
	 * @param array  $data The request data.
	 * @param string $token_api_url The URL of the Jetpack "token" API.
	 * @return object|WP_Error Returns the auth token on success.
	 *                          Returns a WP_Error on failure.
	 */
	public function get( $data, $token_api_url ) {
		$roles = new Roles();
		$role  = $roles->translate_current_user_to_role();

		if ( ! $role ) {
			return new WP_Error( 'role', __( 'An administrator for this blog must set up the Jetpack connection.', 'jetpack-connection' ) );
		}

		$client_secret = $this->get_access_token();
		if ( ! $client_secret ) {
			return new WP_Error( 'client_secret', __( 'You need to register your Jetpack before connecting it.', 'jetpack-connection' ) );
		}

		/**
		 * Filter the URL of the first time the user gets redirected back to your site for connection
		 * data processing.
		 *
		 * @since 1.7.0
		 * @since-jetpack 8.0.0
		 *
		 * @param string $redirect_url Defaults to the site admin URL.
		 */
		$processing_url = apply_filters( 'jetpack_token_processing_url', admin_url( 'admin.php' ) );

		$redirect = isset( $data['redirect'] ) ? esc_url_raw( (string) $data['redirect'] ) : '';

		/**
		* Filter the URL to redirect the user back to when the authentication process
		* is complete.
		*
		* @since 1.7.0
		* @since-jetpack 8.0.0
		*
		* @param string $redirect_url Defaults to the site URL.
		*/
		$redirect = apply_filters( 'jetpack_token_redirect_url', $redirect );

		$redirect_uri = ( 'calypso' === $data['auth_type'] )
			? $data['redirect_uri']
			: add_query_arg(
				array(
					'handler'  => 'jetpack-connection-webhooks',
					'action'   => 'authorize',
					'_wpnonce' => wp_create_nonce( "jetpack-authorize_{$role}_{$redirect}" ),
					'redirect' => $redirect ? rawurlencode( $redirect ) : false,
				),
				esc_url( $processing_url )
			);

		/**
		 * Filters the token request data.
		 *
		 * @since 1.7.0
		 * @since-jetpack 8.0.0
		 *
		 * @param array $request_data request data.
		 */
		$body = apply_filters(
			'jetpack_token_request_body',
			array(
				'client_id'     => Jetpack_Options::get_option( 'id' ),
				'client_secret' => $client_secret->secret,
				'grant_type'    => 'authorization_code',
				'code'          => $data['code'],
				'redirect_uri'  => $redirect_uri,
			)
		);

		$args = array(
			'method'  => 'POST',
			'body'    => $body,
			'headers' => array(
				'Accept' => 'application/json',
			),
		);
		add_filter( 'http_request_timeout', array( $this, 'return_30' ), PHP_INT_MAX - 1 );
		$response = Client::_wp_remote_request( $token_api_url, $args );
		remove_filter( 'http_request_timeout', array( $this, 'return_30' ), PHP_INT_MAX - 1 );

		if ( is_wp_error( $response ) ) {
			return new WP_Error( 'token_http_request_failed', $response->get_error_message() );
		}

		$code   = wp_remote_retrieve_response_code( $response );
		$entity = wp_remote_retrieve_body( $response );

		if ( $entity ) {
			$json = json_decode( $entity );
		} else {
			$json = false;
		}

		if ( 200 !== $code || ! empty( $json->error ) ) {
			if ( empty( $json->error ) ) {
				return new WP_Error( 'unknown', '', $code );
			}

			/* translators: Error description string. */
			$error_description = isset( $json->error_description ) ? sprintf( __( 'Error Details: %s', 'jetpack-connection' ), (string) $json->error_description ) : '';

			return new WP_Error( (string) $json->error, $error_description, $code );
		}

		if ( empty( $json->access_token ) || ! is_scalar( $json->access_token ) ) {
			return new WP_Error( 'access_token', '', $code );
		}

		if ( empty( $json->token_type ) || 'X_JETPACK' !== strtoupper( $json->token_type ) ) {
			return new WP_Error( 'token_type', '', $code );
		}

		if ( empty( $json->scope ) ) {
			return new WP_Error( 'scope', 'No Scope', $code );
		}

		// TODO: get rid of the error silencer.
		// phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged
		@list( $role, $hmac ) = explode( ':', $json->scope );
		if ( empty( $role ) || empty( $hmac ) ) {
			return new WP_Error( 'scope', 'Malformed Scope', $code );
		}

		if ( $this->sign_role( $role ) !== $json->scope ) {
			return new WP_Error( 'scope', 'Invalid Scope', $code );
		}

		$cap = $roles->translate_role_to_cap( $role );
		if ( ! $cap ) {
			return new WP_Error( 'scope', 'No Cap', $code );
		}

		if ( ! current_user_can( $cap ) ) {
			return new WP_Error( 'scope', 'current_user_cannot', $code );
		}

		return (string) $json->access_token;
	}

	/**
	 * Enters a user token into the user_tokens option
	 *
	 * @param int    $user_id The user id.
	 * @param string $token The user token.
	 * @param bool   $is_master_user Whether the user is the master user.
	 * @return bool
	 */
	public function update_user_token( $user_id, $token, $is_master_user ) {
		// Not designed for concurrent updates.
		$user_tokens = $this->get_user_tokens();
		if ( ! is_array( $user_tokens ) ) {
			$user_tokens = array();
		}
		$user_tokens[ $user_id ] = $token;
		if ( $is_master_user ) {
			$master_user = $user_id;
			$options     = compact( 'user_tokens', 'master_user' );
		} else {
			$options = compact( 'user_tokens' );
		}
		return Jetpack_Options::update_options( $options );
	}

	/**
	 * Sign a user role with the master access token.
	 * If not specified, will default to the current user.
	 *
	 * @access public
	 *
	 * @param string $role    User role.
	 * @param int    $user_id ID of the user.
	 * @return string Signed user role.
	 */
	public function sign_role( $role, $user_id = null ) {
		if ( empty( $user_id ) ) {
			$user_id = (int) get_current_user_id();
		}

		if ( ! $user_id ) {
			return false;
		}

		$token = $this->get_access_token();
		if ( ! $token || is_wp_error( $token ) ) {
			return false;
		}

		return $role . ':' . hash_hmac( 'md5', "{$role}|{$user_id}", $token->secret );
	}

	/**
	 * Increases the request timeout value to 30 seconds.
	 *
	 * @return int Returns 30.
	 */
	public function return_30() {
		return 30;
	}

	/**
	 * Gets the requested token.
	 *
	 * Tokens are one of two types:
	 * 1. Blog Tokens: These are the "main" tokens. Each site typically has one Blog Token,
	 *    though some sites can have multiple "Special" Blog Tokens (see below). These tokens
	 *    are not associated with a user account. They represent the site's connection with
	 *    the Jetpack servers.
	 * 2. User Tokens: These are "sub-"tokens. Each connected user account has one User Token.
	 *
	 * All tokens look like "{$token_key}.{$private}". $token_key is a public ID for the
	 * token, and $private is a secret that should never be displayed anywhere or sent
	 * over the network; it's used only for signing things.
	 *
	 * Blog Tokens can be "Normal" or "Special".
	 * * Normal: The result of a normal connection flow. They look like
	 *   "{$random_string_1}.{$random_string_2}"
	 *   That is, $token_key and $private are both random strings.
	 *   Sites only have one Normal Blog Token. Normal Tokens are found in either
	 *   Jetpack_Options::get_option( 'blog_token' ) (usual) or the JETPACK_BLOG_TOKEN
	 *   constant (rare).
	 * * Special: A connection token for sites that have gone through an alternative
	 *   connection flow. They look like:
	 *   ";{$special_id}{$special_version};{$wpcom_blog_id};.{$random_string}"
	 *   That is, $private is a random string and $token_key has a special structure with
	 *   lots of semicolons.
	 *   Most sites have zero Special Blog Tokens. Special tokens are only found in the
	 *   JETPACK_BLOG_TOKEN constant.
	 *
	 * In particular, note that Normal Blog Tokens never start with ";" and that
	 * Special Blog Tokens always do.
	 *
	 * When searching for a matching Blog Tokens, Blog Tokens are examined in the following
	 * order:
	 * 1. Defined Special Blog Tokens (via the JETPACK_BLOG_TOKEN constant)
	 * 2. Stored Normal Tokens (via Jetpack_Options::get_option( 'blog_token' ))
	 * 3. Defined Normal Tokens (via the JETPACK_BLOG_TOKEN constant)
	 *
	 * @param int|false    $user_id   false: Return the Blog Token. int: Return that user's User Token.
	 * @param string|false $token_key If provided, check that the token matches the provided input.
	 * @param bool|true    $suppress_errors If true, return a falsy value when the token isn't found; When false, return a descriptive WP_Error when the token isn't found.
	 *
	 * @return object|false|WP_Error
	 */
	public function get_access_token( $user_id = false, $token_key = false, $suppress_errors = true ) {
		if ( $this->is_locked() ) {
			$this->delete_all();
			return false;
		}

		$possible_special_tokens = array();
		$possible_normal_tokens  = array();
		$user_tokens             = $this->get_user_tokens();

		if ( $user_id ) {
			if ( ! $user_tokens ) {
				return $suppress_errors ? false : new WP_Error( 'no_user_tokens', __( 'No user tokens found', 'jetpack-connection' ) );
			}
			if ( true === $user_id ) { // connection owner.
				$user_id = Jetpack_Options::get_option( 'master_user' );
				if ( ! $user_id ) {
					return $suppress_errors ? false : new WP_Error( 'empty_master_user_option', __( 'No primary user defined', 'jetpack-connection' ) );
				}
			}
			if ( ! isset( $user_tokens[ $user_id ] ) || ! $user_tokens[ $user_id ] ) {
				// translators: %s is the user ID.
				return $suppress_errors ? false : new WP_Error( 'no_token_for_user', sprintf( __( 'No token for user %d', 'jetpack-connection' ), $user_id ) );
			}
			$user_token_chunks = explode( '.', $user_tokens[ $user_id ] );
			if ( empty( $user_token_chunks[1] ) || empty( $user_token_chunks[2] ) ) {
				// translators: %s is the user ID.
				return $suppress_errors ? false : new WP_Error( 'token_malformed', sprintf( __( 'Token for user %d is malformed', 'jetpack-connection' ), $user_id ) );
			}
			if ( $user_token_chunks[2] !== (string) $user_id ) {
				// translators: %1$d is the ID of the requested user. %2$d is the user ID found in the token.
				return $suppress_errors ? false : new WP_Error( 'user_id_mismatch', sprintf( __( 'Requesting user_id %1$d does not match token user_id %2$d', 'jetpack-connection' ), $user_id, $user_token_chunks[2] ) );
			}
			$possible_normal_tokens[] = "{$user_token_chunks[0]}.{$user_token_chunks[1]}";
		} else {
			$stored_blog_token = Jetpack_Options::get_option( 'blog_token' );
			if ( $stored_blog_token ) {
				$possible_normal_tokens[] = $stored_blog_token;
			}

			$defined_tokens_string = Constants::get_constant( 'JETPACK_BLOG_TOKEN' );

			if ( $defined_tokens_string ) {
				$defined_tokens = explode( ',', $defined_tokens_string );
				foreach ( $defined_tokens as $defined_token ) {
					if ( ';' === $defined_token[0] ) {
						$possible_special_tokens[] = $defined_token;
					} else {
						$possible_normal_tokens[] = $defined_token;
					}
				}
			}
		}

		if ( self::MAGIC_NORMAL_TOKEN_KEY === $token_key ) {
			$possible_tokens = $possible_normal_tokens;
		} else {
			$possible_tokens = array_merge( $possible_special_tokens, $possible_normal_tokens );
		}

		if ( ! $possible_tokens ) {
			// If no user tokens were found, it would have failed earlier, so this is about blog token.
			return $suppress_errors ? false : new WP_Error( 'no_possible_tokens', __( 'No blog token found', 'jetpack-connection' ) );
		}

		$valid_token = false;

		if ( false === $token_key ) {
			// Use first token.
			$valid_token = $possible_tokens[0];
		} elseif ( self::MAGIC_NORMAL_TOKEN_KEY === $token_key ) {
			// Use first normal token.
			$valid_token = $possible_tokens[0]; // $possible_tokens only contains normal tokens because of earlier check.
		} else {
			// Use the token matching $token_key or false if none.
			// Ensure we check the full key.
			$token_check = rtrim( $token_key, '.' ) . '.';

			foreach ( $possible_tokens as $possible_token ) {
				if ( hash_equals( substr( $possible_token, 0, strlen( $token_check ) ), $token_check ) ) {
					$valid_token = $possible_token;
					break;
				}
			}
		}

		if ( ! $valid_token ) {
			if ( $user_id ) {
				// translators: %d is the user ID.
				return $suppress_errors ? false : new WP_Error( 'no_valid_user_token', sprintf( __( 'Invalid token for user %d', 'jetpack-connection' ), $user_id ) );
			} else {
				return $suppress_errors ? false : new WP_Error( 'no_valid_blog_token', __( 'Invalid blog token', 'jetpack-connection' ) );
			}
		}

		return (object) array(
			'secret'           => $valid_token,
			'external_user_id' => (int) $user_id,
		);
	}

	/**
	 * Updates the blog token to a new value.
	 *
	 * @access public
	 *
	 * @param string $token the new blog token value.
	 * @return Boolean Whether updating the blog token was successful.
	 */
	public function update_blog_token( $token ) {
		return Jetpack_Options::update_option( 'blog_token', $token );
	}

	/**
	 * Unlinks the current user from the linked WordPress.com user.
	 *
	 * @access public
	 * @static
	 *
	 * @todo Refactor to properly load the XMLRPC client independently.
	 *
	 * @param int $user_id The user identifier.
	 *
	 * @return bool Whether the disconnection of the user was successful.
	 */
	public function disconnect_user( $user_id ) {
		$tokens = $this->get_user_tokens();
		if ( ! $tokens ) {
			return false;
		}

		if ( ! isset( $tokens[ $user_id ] ) ) {
			return false;
		}

		unset( $tokens[ $user_id ] );

		$this->update_user_tokens( $tokens );

		return true;
	}

	/**
	 * Returns an array of user_id's that have user tokens for communicating with wpcom.
	 * Able to select by specific capability.
	 *
	 * @deprecated 1.30.0
	 * @see Manager::get_connected_users
	 *
	 * @param string   $capability The capability of the user.
	 * @param int|null $limit How many connected users to get before returning.
	 * @return array Array of WP_User objects if found.
	 */
	public function get_connected_users( $capability = 'any', $limit = null ) {
		_deprecated_function( __METHOD__, '1.30.0' );
		return ( new Manager( 'jetpack' ) )->get_connected_users( $capability, $limit );
	}

	/**
	 * Fetches a signed token.
	 *
	 * @param object $token the token.
	 * @return WP_Error|string a signed token
	 */
	public function get_signed_token( $token ) {
		if ( ! isset( $token->secret ) || empty( $token->secret ) ) {
			return new WP_Error( 'invalid_token' );
		}

		list( $token_key, $token_secret ) = explode( '.', $token->secret );

		$token_key = sprintf(
			'%s:%d:%d',
			$token_key,
			Constants::get_constant( 'JETPACK__API_VERSION' ),
			$token->external_user_id
		);

		$timestamp = time();

		if ( function_exists( 'wp_generate_password' ) ) {
			$nonce = wp_generate_password( 10, false );
		} else {
			$nonce = substr( sha1( wp_rand( 0, 1000000 ) ), 0, 10 );
		}

		$normalized_request_string = implode(
			"\n",
			array(
				$token_key,
				$timestamp,
				$nonce,
			)
		) . "\n";

		// phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.obfuscation_base64_encode
		$signature = base64_encode( hash_hmac( 'sha1', $normalized_request_string, $token_secret, true ) );

		$auth = array(
			'token'     => $token_key,
			'timestamp' => $timestamp,
			'nonce'     => $nonce,
			'signature' => $signature,
		);

		$header_pieces = array();
		foreach ( $auth as $key => $value ) {
			$header_pieces[] = sprintf( '%s="%s"', $key, $value );
		}

		return implode( ' ', $header_pieces );
	}

	/**
	 * Gets the list of user tokens
	 *
	 * @since 1.30.0
	 *
	 * @return bool|array An array of user tokens where keys are user IDs and values are the tokens. False if no user token is found.
	 */
	public function get_user_tokens() {
		return Jetpack_Options::get_option( 'user_tokens' );
	}

	/**
	 * Updates the option that stores the user tokens
	 *
	 * @since 1.30.0
	 *
	 * @param array $tokens An array of user tokens where keys are user IDs and values are the tokens.
	 * @return bool Was the option successfully updated?
	 *
	 * @todo add validate the input.
	 */
	public function update_user_tokens( $tokens ) {
		return Jetpack_Options::update_option( 'user_tokens', $tokens );
	}

	/**
	 * Lock the tokens to the current site URL.
	 *
	 * @param int $timespan How long the tokens should be locked, in seconds.
	 *
	 * @return bool
	 */
	public function set_lock( $timespan = HOUR_IN_SECONDS ) {
		try {
			$expires = ( new DateTime() )->add( DateInterval::createFromDateString( (int) $timespan . ' seconds' ) );
		} catch ( Exception $e ) {
			return false;
		}

		if ( false === $expires ) {
			return false;
		}

		// phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.obfuscation_base64_encode
		return Jetpack_Options::update_option( 'token_lock', $expires->format( static::DATE_FORMAT_ATOM ) . '|||' . base64_encode( Urls::site_url() ) );
	}

	/**
	 * Remove the site lock from tokens.
	 *
	 * @return bool
	 */
	public function remove_lock() {
		Jetpack_Options::delete_option( 'token_lock' );

		return true;
	}

	/**
	 * Check if the domain is locked, remove the lock if needed.
	 * Possible scenarios:
	 * - lock expired, site URL matches the lock URL: remove the lock, return false.
	 * - lock not expired, site URL matches the lock URL: return false.
	 * - site URL does not match the lock URL (expiration date is ignored): return true, do not remove the lock.
	 *
	 * @return bool
	 */
	public function is_locked() {
		$the_lock = Jetpack_Options::get_option( 'token_lock' );
		if ( ! $the_lock ) {
			// Not locked.
			return false;
		}

		$the_lock = explode( '|||', $the_lock, 2 );
		if ( count( $the_lock ) !== 2 ) {
			// Something's wrong with the lock.
			$this->remove_lock();
			return false;
		}

		// phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.obfuscation_base64_decode
		$locked_site_url = base64_decode( $the_lock[1] );
		$expires         = $the_lock[0];

		$expiration_date = DateTime::createFromFormat( static::DATE_FORMAT_ATOM, $expires );
		if ( false === $expiration_date || ! $locked_site_url ) {
			// Something's wrong with the lock.
			$this->remove_lock();
			return false;
		}

		if ( Urls::site_url() === $locked_site_url ) {
			if ( new DateTime() > $expiration_date ) {
				// Site lock expired.
				// Site URL matches, removing the lock.
				$this->remove_lock();
			}

			return false;
		}

		// Site URL doesn't match.
		return true;
	}
}
class-tracking.php                                                                                                                                                                                                                                             9938          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * Nosara Tracks for Jetpack
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack;

/**
 * The Tracking class, used to record events in wpcom
 */
class Tracking {
	/**
	 * The assets version.
	 *
	 * @since 1.13.1
	 * @deprecated since 1.40.1
	 *
	 * @var string Assets version.
	 */
	const ASSETS_VERSION = '1.0.0';

	/**
	 * Slug of the product that we are tracking.
	 *
	 * @var string
	 */
	private $product_name;

	/**
	 * Connection manager object.
	 *
	 * @var Object
	 */
	private $connection;

	/**
	 * Creates the Tracking object.
	 *
	 * @param String                                $product_name the slug of the product that we are tracking.
	 * @param Automattic\Jetpack\Connection\Manager $connection   the connection manager object.
	 */
	public function __construct( $product_name = 'jetpack', $connection = null ) {
		$this->product_name = $product_name;
		$this->connection   = $connection;
		if ( $this->connection === null ) {
			// TODO We should always pass a Connection.
			$this->connection = new Connection\Manager();
		}

		if ( ! did_action( 'jetpack_set_tracks_ajax_hook' ) ) {
			add_action( 'wp_ajax_jetpack_tracks', array( $this, 'ajax_tracks' ) );

			/**
			 * Fires when the Tracking::ajax_tracks() callback has been hooked to the
			 * wp_ajax_jetpack_tracks action. This action is used to ensure that
			 * the callback is hooked only once.
			 *
			 * @since 1.13.11
			 */
			do_action( 'jetpack_set_tracks_ajax_hook' );
		}
	}

	/**
	 * Universal method for for all tracking events triggered via the JavaScript client.
	 *
	 * @access public
	 */
	public function ajax_tracks() {
		// Check for nonce.
		if (
			empty( $_REQUEST['tracksNonce'] )
			|| ! wp_verify_nonce( $_REQUEST['tracksNonce'], 'jp-tracks-ajax-nonce' ) // phpcs:ignore WordPress.Security.ValidatedSanitizedInput -- WP core doesn't pre-sanitize nonces either.
		) {
			wp_send_json_error(
				__( 'You aren’t authorized to do that.', 'jetpack-connection' ),
				403
			);
		}

		if ( ! isset( $_REQUEST['tracksEventName'] ) || ! isset( $_REQUEST['tracksEventType'] ) ) {
			wp_send_json_error(
				__( 'No valid event name or type.', 'jetpack-connection' ),
				403
			);
		}

		$tracks_data = array();
		if ( 'click' === $_REQUEST['tracksEventType'] && isset( $_REQUEST['tracksEventProp'] ) ) {
			if ( is_array( $_REQUEST['tracksEventProp'] ) ) {
				$tracks_data = array_map( 'filter_var', wp_unslash( $_REQUEST['tracksEventProp'] ) );
			} else {
				$tracks_data = array( 'clicked' => filter_var( wp_unslash( $_REQUEST['tracksEventProp'] ) ) );
			}
		}

		$this->record_user_event( filter_var( wp_unslash( $_REQUEST['tracksEventName'] ) ), $tracks_data, null, false );

		wp_send_json_success();
	}

	/**
	 * Register script necessary for tracking.
	 *
	 * @param boolean $enqueue Also enqueue? defaults to false.
	 */
	public static function register_tracks_functions_scripts( $enqueue = false ) {

		// Register jp-tracks as it is a dependency.
		wp_register_script(
			'jp-tracks',
			'//stats.wp.com/w.js',
			array(),
			gmdate( 'YW' ),
			true
		);

		Assets::register_script(
			'jp-tracks-functions',
			'../dist/tracks-callables.js',
			__FILE__,
			array(
				'dependencies' => array( 'jp-tracks' ),
				'enqueue'      => $enqueue,
				'in_footer'    => true,
			)
		);
	}

	/**
	 * Enqueue script necessary for tracking.
	 */
	public function enqueue_tracks_scripts() {
		Assets::register_script(
			'jptracks',
			'../dist/tracks-ajax.js',
			__FILE__,
			array(
				'dependencies' => array( 'jquery' ),
				'enqueue'      => true,
				'in_footer'    => true,
			)
		);

		wp_localize_script(
			'jptracks',
			'jpTracksAJAX',
			array(
				'ajaxurl'            => admin_url( 'admin-ajax.php' ),
				'jpTracksAJAX_nonce' => wp_create_nonce( 'jp-tracks-ajax-nonce' ),
			)
		);
	}

	/**
	 * Send an event in Tracks.
	 *
	 * @param string $event_type         Type of the event.
	 * @param array  $data               Data to send with the event.
	 * @param mixed  $user               Username, user_id, or WP_user object.
	 * @param bool   $use_product_prefix Whether to use the object's product name as a prefix to the event type. If
	 *                                   set to false, the prefix will be 'jetpack_'.
	 */
	public function record_user_event( $event_type, $data = array(), $user = null, $use_product_prefix = true ) {
		if ( ! $user ) {
			$user = wp_get_current_user();
		}
		$site_url = get_option( 'siteurl' );

		$data['_via_ua']  = isset( $_SERVER['HTTP_USER_AGENT'] ) ? filter_var( wp_unslash( $_SERVER['HTTP_USER_AGENT'] ) ) : '';
		$data['_via_ip']  = isset( $_SERVER['REMOTE_ADDR'] ) ? filter_var( wp_unslash( $_SERVER['REMOTE_ADDR'] ) ) : '';
		$data['_lg']      = isset( $_SERVER['HTTP_ACCEPT_LANGUAGE'] ) ? filter_var( wp_unslash( $_SERVER['HTTP_ACCEPT_LANGUAGE'] ) ) : '';
		$data['blog_url'] = $site_url;
		$data['blog_id']  = \Jetpack_Options::get_option( 'id' );

		// Top level events should not be namespaced.
		if ( '_aliasUser' !== $event_type ) {
			$prefix     = $use_product_prefix ? $this->product_name : 'jetpack';
			$event_type = $prefix . '_' . $event_type;
		}

		$data['jetpack_version'] = defined( 'JETPACK__VERSION' ) ? JETPACK__VERSION : '0';

		return $this->tracks_record_event( $user, $event_type, $data );
	}

	/**
	 * Record an event in Tracks - this is the preferred way to record events from PHP.
	 *
	 * @param mixed  $user                   username, user_id, or WP_user object.
	 * @param string $event_name             The name of the event.
	 * @param array  $properties             Custom properties to send with the event.
	 * @param int    $event_timestamp_millis The time in millis since 1970-01-01 00:00:00 when the event occurred.
	 *
	 * @return bool true for success | \WP_Error if the event pixel could not be fired
	 */
	public function tracks_record_event( $user, $event_name, $properties = array(), $event_timestamp_millis = false ) {

		// We don't want to track user events during unit tests/CI runs.
		if ( $user instanceof \WP_User && 'wptests_capabilities' === $user->cap_key ) {
			return false;
		}
		$terms_of_service = new Terms_Of_Service();
		$status           = new Status();
		// Don't track users who have not agreed to our TOS.
		if ( ! $this->should_enable_tracking( $terms_of_service, $status ) ) {
			return false;
		}

		$event_obj = $this->tracks_build_event_obj( $user, $event_name, $properties, $event_timestamp_millis );

		if ( is_wp_error( $event_obj->error ) ) {
			return $event_obj->error;
		}

		return $event_obj->record();
	}

	/**
	 * Determines whether tracking should be enabled.
	 *
	 * @param Automattic\Jetpack\Terms_Of_Service $terms_of_service A Terms_Of_Service object.
	 * @param Automattic\Jetpack\Status           $status A Status object.
	 *
	 * @return boolean True if tracking should be enabled, else false.
	 */
	public function should_enable_tracking( $terms_of_service, $status ) {
		if ( $status->is_offline_mode() ) {
			return false;
		}

		return $terms_of_service->has_agreed() || $this->connection->is_user_connected();
	}

	/**
	 * Procedurally build a Tracks Event Object.
	 * NOTE: Use this only when the simpler Automattic\Jetpack\Tracking->jetpack_tracks_record_event() function won't work for you.
	 *
	 * @param WP_user $user                   WP_user object.
	 * @param string  $event_name             The name of the event.
	 * @param array   $properties             Custom properties to send with the event.
	 * @param int     $event_timestamp_millis The time in millis since 1970-01-01 00:00:00 when the event occurred.
	 *
	 * @return \Jetpack_Tracks_Event|\WP_Error
	 */
	private function tracks_build_event_obj( $user, $event_name, $properties = array(), $event_timestamp_millis = false ) {
		$identity = $this->tracks_get_identity( $user->ID );

		$properties['user_lang'] = $user->get( 'WPLANG' );

		$blog_details = array(
			'blog_lang' => isset( $properties['blog_lang'] ) ? $properties['blog_lang'] : get_bloginfo( 'language' ),
		);

		$timestamp        = ( false !== $event_timestamp_millis ) ? $event_timestamp_millis : round( microtime( true ) * 1000 );
		$timestamp_string = is_string( $timestamp ) ? $timestamp : number_format( $timestamp, 0, '', '' );

		return new \Jetpack_Tracks_Event(
			array_merge(
				$blog_details,
				(array) $properties,
				$identity,
				array(
					'_en' => $event_name,
					'_ts' => $timestamp_string,
				)
			)
		);
	}

	/**
	 * Get the identity to send to tracks.
	 *
	 * @param int $user_id The user id of the local user.
	 *
	 * @return array $identity
	 */
	public function tracks_get_identity( $user_id ) {

		// Meta is set, and user is still connected.  Use WPCOM ID.
		$wpcom_id = get_user_meta( $user_id, 'jetpack_tracks_wpcom_id', true );
		if ( $wpcom_id && $this->connection->is_user_connected( $user_id ) ) {
			return array(
				'_ut' => 'wpcom:user_id',
				'_ui' => $wpcom_id,
			);
		}

		// User is connected, but no meta is set yet.  Use WPCOM ID and set meta.
		if ( $this->connection->is_user_connected( $user_id ) ) {
			$wpcom_user_data = $this->connection->get_connected_user_data( $user_id );
			update_user_meta( $user_id, 'jetpack_tracks_wpcom_id', $wpcom_user_data['ID'] );

			return array(
				'_ut' => 'wpcom:user_id',
				'_ui' => $wpcom_user_data['ID'],
			);
		}

		// User isn't linked at all.  Fall back to anonymous ID.
		$anon_id = get_user_meta( $user_id, 'jetpack_tracks_anon_id', true );
		if ( ! $anon_id ) {
			$anon_id = \Jetpack_Tracks_Client::get_anon_id();
			add_user_meta( $user_id, 'jetpack_tracks_anon_id', $anon_id, false );
		}

		if ( ! isset( $_COOKIE['tk_ai'] ) && ! headers_sent() ) {
			setcookie( 'tk_ai', $anon_id, 0, COOKIEPATH, COOKIE_DOMAIN, is_ssl(), false ); // phpcs:ignore Jetpack.Functions.SetCookie -- This is a random string and should be fine.
		}

		return array(
			'_ut' => 'anon',
			'_ui' => $anon_id,
		);
	}
}
class-urls.php                                                                                                                                                                                                                                                 5076          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Jetpack Connection package Urls class file.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

use Automattic\Jetpack\Constants;

/**
 * Provides Url methods for the Connection package.
 */
class Urls {

	const HTTPS_CHECK_OPTION_PREFIX = 'jetpack_sync_https_history_';
	const HTTPS_CHECK_HISTORY       = 5;

	/**
	 * Return URL from option or PHP constant.
	 *
	 * @param string $option_name (e.g. 'home').
	 *
	 * @return mixed|null URL.
	 */
	public static function get_raw_url( $option_name ) {
		$value    = null;
		$constant = ( 'home' === $option_name )
			? 'WP_HOME'
			: 'WP_SITEURL';

		// Since we disregard the constant for multisites in ms-default-filters.php,
		// let's also use the db value if this is a multisite.
		if ( ! is_multisite() && Constants::is_defined( $constant ) ) {
			$value = Constants::get_constant( $constant );
		} else {
			// Let's get the option from the database so that we can bypass filters. This will help
			// ensure that we get more uniform values.
			$value = \Jetpack_Options::get_raw_option( $option_name );
		}

		return $value;
	}

	/**
	 * Normalize domains by removing www unless declared in the site's option.
	 *
	 * @param string   $option Option value from the site.
	 * @param callable $url_function Function retrieving the URL to normalize.
	 * @return mixed|string URL.
	 */
	public static function normalize_www_in_url( $option, $url_function ) {
		$url        = wp_parse_url( call_user_func( $url_function ) );
		$option_url = wp_parse_url( get_option( $option ) );

		if ( ! $option_url || ! $url ) {
			return $url;
		}

		if ( "www.{$option_url[ 'host' ]}" === $url['host'] ) {
			// remove www if not present in option URL.
			$url['host'] = $option_url['host'];
		}
		if ( "www.{$url[ 'host' ]}" === $option_url['host'] ) {
			// add www if present in option URL.
			$url['host'] = $option_url['host'];
		}

		$normalized_url = "{$url['scheme']}://{$url['host']}";
		if ( isset( $url['path'] ) ) {
			$normalized_url .= "{$url['path']}";
		}

		if ( isset( $url['query'] ) ) {
			$normalized_url .= "?{$url['query']}";
		}

		return $normalized_url;
	}

	/**
	 * Return URL with a normalized protocol.
	 *
	 * @param callable $callable Function to retrieve URL option.
	 * @param string   $new_value URL Protocol to set URLs to.
	 * @return string Normalized URL.
	 */
	public static function get_protocol_normalized_url( $callable, $new_value ) {
		$option_key = self::HTTPS_CHECK_OPTION_PREFIX . $callable;

		$parsed_url = wp_parse_url( $new_value );

		if ( ! $parsed_url ) {
			return $new_value;
		}
		if ( array_key_exists( 'scheme', $parsed_url ) ) {
			$scheme = $parsed_url['scheme'];
		} else {
			$scheme = '';
		}
		$scheme_history = get_option( $option_key, array() );

		if ( ! is_array( $scheme_history ) ) {
			$scheme_history = array();
		}

		$scheme_history[] = $scheme;

		// Limit length to self::HTTPS_CHECK_HISTORY.
		$scheme_history = array_slice( $scheme_history, ( self::HTTPS_CHECK_HISTORY * -1 ) );

		update_option( $option_key, $scheme_history );

		$forced_scheme = in_array( 'https', $scheme_history, true ) ? 'https' : 'http';

		return set_url_scheme( $new_value, $forced_scheme );
	}

	/**
	 * Helper function that is used when getting home or siteurl values. Decides
	 * whether to get the raw or filtered value.
	 *
	 * @param string $url_type URL to get, home or siteurl.
	 * @return string
	 */
	public static function get_raw_or_filtered_url( $url_type ) {
		$url_function = ( 'home' === $url_type )
			? 'home_url'
			: 'site_url';

		if (
			! Constants::is_defined( 'JETPACK_SYNC_USE_RAW_URL' ) ||
			Constants::get_constant( 'JETPACK_SYNC_USE_RAW_URL' )
		) {
			$scheme = is_ssl() ? 'https' : 'http';
			$url    = (string) self::get_raw_url( $url_type );
			$url    = set_url_scheme( $url, $scheme );
		} else {
			$url = self::normalize_www_in_url( $url_type, $url_function );
		}

		return self::get_protocol_normalized_url( $url_function, $url );
	}

	/**
	 * Return the escaped home_url.
	 *
	 * @return string
	 */
	public static function home_url() {
		$url = self::get_raw_or_filtered_url( 'home' );

		/**
		 * Allows overriding of the home_url value that is synced back to WordPress.com.
		 *
		 * @since 1.7.0
		 * @since-jetpack 5.2.0
		 *
		 * @param string $home_url
		 */
		return esc_url_raw( apply_filters( 'jetpack_sync_home_url', $url ) );
	}

	/**
	 * Return the escaped siteurl.
	 *
	 * @return string
	 */
	public static function site_url() {
		$url = self::get_raw_or_filtered_url( 'siteurl' );

		/**
		 * Allows overriding of the site_url value that is synced back to WordPress.com.
		 *
		 * @since 1.7.0
		 * @since-jetpack 5.2.0
		 *
		 * @param string $site_url
		 */
		return esc_url_raw( apply_filters( 'jetpack_sync_site_url', $url ) );
	}

	/**
	 * Return main site URL with a normalized protocol.
	 *
	 * @return string
	 */
	public static function main_network_site_url() {
		return self::get_protocol_normalized_url( 'main_network_site_url', network_site_url() );
	}
}
class-utils.php                                                                                                                                                                                                                                                2414          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Jetpack Connection package Utils class file.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

use Automattic\Jetpack\Tracking;

/**
 * Provides utility methods for the Connection package.
 */
class Utils {

	const DEFAULT_JETPACK__API_VERSION         = 1;
	const DEFAULT_JETPACK__API_BASE            = 'https://jetpack.wordpress.com/jetpack.';
	const DEFAULT_JETPACK__WPCOM_JSON_API_BASE = 'https://public-api.wordpress.com';

	/**
	 * Enters a user token into the user_tokens option
	 *
	 * @deprecated 1.24.0 Use Automattic\Jetpack\Connection\Tokens->update_user_token() instead.
	 *
	 * @param int    $user_id The user id.
	 * @param string $token The user token.
	 * @param bool   $is_master_user Whether the user is the master user.
	 * @return bool
	 */
	public static function update_user_token( $user_id, $token, $is_master_user ) {
		_deprecated_function( __METHOD__, '1.24.0', 'Automattic\\Jetpack\\Connection\\Tokens->update_user_token' );
		return ( new Tokens() )->update_user_token( $user_id, $token, $is_master_user );
	}

	/**
	 * Filters the value of the api constant.
	 *
	 * @param String $constant_value The constant value.
	 * @param String $constant_name The constant name.
	 * @return mixed | null
	 */
	public static function jetpack_api_constant_filter( $constant_value, $constant_name ) {
		if ( $constant_value !== null ) {
			// If the constant value was already set elsewhere, use that value.
			return $constant_value;
		}

		if ( defined( "self::DEFAULT_$constant_name" ) ) {
			return constant( "self::DEFAULT_$constant_name" );
		}

		return null;
	}

	/**
	 * Add a filter to initialize default values of the constants.
	 */
	public static function init_default_constants() {
		add_filter(
			'jetpack_constant_default_value',
			array( __CLASS__, 'jetpack_api_constant_filter' ),
			10,
			2
		);
	}

	/**
	 * Filters the registration request body to include tracking properties.
	 *
	 * @param array $properties Already prepared tracking properties.
	 * @return array amended properties.
	 */
	public static function filter_register_request_body( $properties ) {
		$tracking        = new Tracking();
		$tracks_identity = $tracking->tracks_get_identity( get_current_user_id() );

		return array_merge(
			$properties,
			array(
				'_ui' => $tracks_identity['_ui'],
				'_ut' => $tracks_identity['_ut'],
			)
		);
	}
}
class-webhooks.php                                                                                                                                                                                                                                             6422          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * Connection Webhooks class.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

use Automattic\Jetpack\CookieState;
use Automattic\Jetpack\Roles;
use Automattic\Jetpack\Status\Host;
use Automattic\Jetpack\Tracking;
use Jetpack_Options;

/**
 * Connection Webhooks class.
 */
class Webhooks {

	/**
	 * The Connection Manager object.
	 *
	 * @var Manager
	 */
	private $connection;

	/**
	 * Webhooks constructor.
	 *
	 * @param Manager $connection The Connection Manager object.
	 */
	public function __construct( $connection ) {
		$this->connection = $connection;
	}

	/**
	 * Initialize the webhooks.
	 *
	 * @param Manager $connection The Connection Manager object.
	 */
	public static function init( $connection ) {
		$webhooks = new static( $connection );

		add_action( 'init', array( $webhooks, 'controller' ) );
		add_action( 'load-toplevel_page_jetpack', array( $webhooks, 'fallback_jetpack_controller' ) );
	}

	/**
	 * Jetpack plugin used to trigger this webhooks in Jetpack::admin_page_load()
	 *
	 * The Jetpack toplevel menu is still accessible for stand-alone plugins, and while there's no content for that page, there are still
	 * actions from Calypso and WPCOM that reach that route regardless of the site having the Jetpack plugin or not. That's why we are still handling it here.
	 */
	public function fallback_jetpack_controller() {
		$this->controller( true );
	}

	/**
	 * The "controller" decides which handler we need to run.
	 *
	 * @param bool $force Do not check if it's a webhook request and just run the controller.
	 */
	public function controller( $force = false ) {
		if ( ! $force ) {
			// The nonce is verified in specific handlers.
			// phpcs:ignore WordPress.Security.NonceVerification.Recommended
			if ( empty( $_GET['handler'] ) || 'jetpack-connection-webhooks' !== $_GET['handler'] ) {
				return;
			}
		}

		// phpcs:ignore WordPress.Security.NonceVerification.Recommended
		if ( isset( $_GET['connect_url_redirect'] ) ) {
			$this->handle_connect_url_redirect();
		}

		// phpcs:ignore WordPress.Security.NonceVerification.Recommended
		if ( empty( $_GET['action'] ) ) {
			return;
		}

		// The nonce is verified in specific handlers.
		// phpcs:ignore WordPress.Security.NonceVerification.Recommended
		switch ( $_GET['action'] ) {
			case 'authorize':
				$this->handle_authorize();
				$this->do_exit();
				break;
			case 'authorize_redirect':
				$this->handle_authorize_redirect();
				$this->do_exit();
				break;
			// Class Jetpack::admin_page_load() still handles other cases.
		}
	}

	/**
	 * Perform the authorization action.
	 */
	public function handle_authorize() {
		if ( $this->connection->is_connected() && $this->connection->is_user_connected() ) {
			$redirect_url = apply_filters( 'jetpack_client_authorize_already_authorized_url', admin_url() );
			wp_safe_redirect( $redirect_url );

			return;
		}
		do_action( 'jetpack_client_authorize_processing' );

		$data              = stripslashes_deep( $_GET );
		$data['auth_type'] = 'client';
		$roles             = new Roles();
		$role              = $roles->translate_current_user_to_role();
		$redirect          = isset( $data['redirect'] ) ? esc_url_raw( (string) $data['redirect'] ) : '';

		check_admin_referer( "jetpack-authorize_{$role}_{$redirect}" );

		$tracking = new Tracking();

		$result = $this->connection->authorize( $data );

		if ( is_wp_error( $result ) ) {
			do_action( 'jetpack_client_authorize_error', $result );

			$tracking->record_user_event(
				'jpc_client_authorize_fail',
				array(
					'error_code'    => $result->get_error_code(),
					'error_message' => $result->get_error_message(),
				)
			);
		} else {
			/**
			 * Fires after the Jetpack client is authorized to communicate with WordPress.com.
			 *
			 * @param int Jetpack Blog ID.
			 *
			 * @since 1.7.0
			 * @since-jetpack 4.2.0
			 */
			do_action( 'jetpack_client_authorized', Jetpack_Options::get_option( 'id' ) );

			$tracking->record_user_event( 'jpc_client_authorize_success' );
		}

		$fallback_redirect = apply_filters( 'jetpack_client_authorize_fallback_url', admin_url() );
		$redirect          = wp_validate_redirect( $redirect ) ? $redirect : $fallback_redirect;

		wp_safe_redirect( $redirect );
	}

	/**
	 * The authorhize_redirect webhook handler
	 */
	public function handle_authorize_redirect() {
		$authorize_redirect_handler = new Webhooks\Authorize_Redirect( $this->connection );
		$authorize_redirect_handler->handle();
	}

	/**
	 * The `exit` is wrapped into a method so we could mock it.
	 */
	protected function do_exit() {
		exit;
	}

	/**
	 * Handle the `connect_url_redirect` action,
	 * which is usually called to repeat an attempt for user to authorize the connection.
	 *
	 * @return void
	 */
	public function handle_connect_url_redirect() {
		// phpcs:ignore WordPress.Security.NonceVerification.Recommended -- no site changes.
		$from = ! empty( $_GET['from'] ) ? sanitize_text_field( wp_unslash( $_GET['from'] ) ) : 'iframe';

		// phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- no site changes, sanitization happens in get_authorization_url()
		$redirect = ! empty( $_GET['redirect_after_auth'] ) ? wp_unslash( $_GET['redirect_after_auth'] ) : false;

		add_filter( 'allowed_redirect_hosts', array( Host::class, 'allow_wpcom_environments' ) );

		if ( ! $this->connection->is_user_connected() ) {
			if ( ! $this->connection->is_connected() ) {
				$this->connection->register();
			}

			$connect_url = add_query_arg( 'from', $from, $this->connection->get_authorization_url( null, $redirect ) );

			// phpcs:ignore WordPress.Security.NonceVerification.Recommended -- no site changes.
			if ( isset( $_GET['notes_iframe'] ) ) {
				$connect_url .= '&notes_iframe';
			}
			wp_safe_redirect( $connect_url );
			$this->do_exit();
		} elseif ( ! isset( $_GET['calypso_env'] ) ) { // phpcs:ignore WordPress.Security.NonceVerification.Recommended -- no site changes.
			( new CookieState() )->state( 'message', 'already_authorized' );
			wp_safe_redirect( $redirect );
			$this->do_exit();
		} else {
			$connect_url = add_query_arg(
				array(
					'from'               => $from,
					'already_authorized' => true,
				),
				$this->connection->get_authorization_url()
			);
			wp_safe_redirect( $connect_url );
			$this->do_exit();
		}
	}
}
class-xmlrpc-async-call.php                                                                                                                                                                                                                                    2685          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * XMLRPC Async Call class.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

use Jetpack_IXR_ClientMulticall;

/**
 * Make XMLRPC async calls to WordPress.com
 *
 * This class allows you to enqueue XMLRPC calls that will be grouped and sent
 * at once in a multi-call request at shutdown.
 *
 * Usage:
 *
 * XMLRPC_Async_Call::add_call( 'methodName', get_current_user_id(), $arg1, $arg2, etc... )
 *
 * See XMLRPC_Async_Call::add_call for details
 */
class XMLRPC_Async_Call {

	/**
	 * Hold the IXR Clients that will be dispatched at shutdown
	 *
	 * Clients are stored in the following schema:
	 * [
	 *  $blog_id => [
	 *    $user_id => [
	 *      arrat of Jetpack_IXR_ClientMulticall
	 *    ]
	 *  ]
	 * ]
	 *
	 * @var array
	 */
	public static $clients = array();

	/**
	 * Adds a new XMLRPC call to the queue to be processed on shutdown
	 *
	 * @param string  $method The XML-RPC method.
	 * @param integer $user_id The user ID used to make the request (will use this user's token); Use 0 for the blog token.
	 * @param mixed   ...$args This function accepts any number of additional arguments, that will be passed to the call.
	 * @return void
	 */
	public static function add_call( $method, $user_id = 0, ...$args ) {
		global $blog_id;

		$client_blog_id = is_multisite() ? $blog_id : 0;

		if ( ! isset( self::$clients[ $client_blog_id ] ) ) {
			self::$clients[ $client_blog_id ] = array();
		}

		if ( ! isset( self::$clients[ $client_blog_id ][ $user_id ] ) ) {
			self::$clients[ $client_blog_id ][ $user_id ] = new Jetpack_IXR_ClientMulticall( array( 'user_id' => $user_id ) );
		}

		// https://plugins.trac.wordpress.org/ticket/2041
		if ( function_exists( 'ignore_user_abort' ) ) {
			ignore_user_abort( true );
		}

		array_unshift( $args, $method );

		call_user_func_array( array( self::$clients[ $client_blog_id ][ $user_id ], 'addCall' ), $args );

		if ( false === has_action( 'shutdown', array( 'Automattic\Jetpack\Connection\XMLRPC_Async_Call', 'do_calls' ) ) ) {
			add_action( 'shutdown', array( 'Automattic\Jetpack\Connection\XMLRPC_Async_Call', 'do_calls' ) );
		}
	}

	/**
	 * Trigger the calls at shutdown
	 *
	 * @return void
	 */
	public static function do_calls() {
		foreach ( self::$clients as $client_blog_id => $blog_clients ) {
			if ( $client_blog_id > 0 ) {
				$switch_success = switch_to_blog( $client_blog_id );

				if ( ! $switch_success ) {
					continue;
				}
			}

			foreach ( $blog_clients as $client ) {
				if ( empty( $client->calls ) ) {
					continue;
				}

				flush();
				$client->query();
			}

			if ( $client_blog_id > 0 ) {
				restore_current_blog();
			}
		}
	}
}
class-xmlrpc-connector.php                                                                                                                                                                                                                                     1858          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * Sets up the Connection XML-RPC methods.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

/**
 * Registers the XML-RPC methods for Connections.
 */
class XMLRPC_Connector {
	/**
	 * The Connection Manager.
	 *
	 * @var Manager
	 */
	private $connection;

	/**
	 * Constructor.
	 *
	 * @param Manager $connection The Connection Manager.
	 */
	public function __construct( Manager $connection ) {
		$this->connection = $connection;

		// Adding the filter late to avoid being overwritten by Jetpack's XMLRPC server.
		add_filter( 'xmlrpc_methods', array( $this, 'xmlrpc_methods' ), 20 );
	}

	/**
	 * Attached to the `xmlrpc_methods` filter.
	 *
	 * @param array $methods The already registered XML-RPC methods.
	 * @return array
	 */
	public function xmlrpc_methods( $methods ) {
		return array_merge(
			$methods,
			array(
				'jetpack.verifyRegistration' => array( $this, 'verify_registration' ),
			)
		);
	}

	/**
	 * Handles verification that a site is registered.
	 *
	 * @param array $registration_data The data sent by the XML-RPC client:
	 *                                 [ $secret_1, $user_id ].
	 *
	 * @return string|IXR_Error
	 */
	public function verify_registration( $registration_data ) {
		return $this->output( $this->connection->handle_registration( $registration_data ) );
	}

	/**
	 * Normalizes output for XML-RPC.
	 *
	 * @param mixed $data The data to output.
	 */
	private function output( $data ) {
		if ( is_wp_error( $data ) ) {
			$code = $data->get_error_data();
			if ( ! $code ) {
				$code = -10520;
			}

			if ( ! class_exists( \IXR_Error::class ) ) {
				require_once ABSPATH . WPINC . '/class-IXR.php';
			}
			return new \IXR_Error(
				$code,
				sprintf( 'Jetpack: [%s] %s', $data->get_error_code(), $data->get_error_message() )
			);
		}

		return $data;
	}
}
interface-manager.php                                                                                                                                                                                                                                          298           1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        <?php
/**
 * The Jetpack Connection Interface file.
 * No longer used.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection;

/**
 * This interface is no longer used and is now deprecated.
 *
 * @deprecated since jetpack 7.8
 */
interface Manager_Interface {
}
class-authorize-redirect.php                                                                                                                                                                                                                                   6210          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection/src/webhooks                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               <?php
/**
 * Authorize_Redirect Webhook handler class.
 *
 * @package automattic/jetpack-connection
 */

namespace Automattic\Jetpack\Connection\Webhooks;

use Automattic\Jetpack\Admin_UI\Admin_Menu;
use Automattic\Jetpack\Constants;
use Automattic\Jetpack\Licensing;
use Automattic\Jetpack\Tracking;
use GP_Locales;
use Jetpack_Network;

/**
 * Authorize_Redirect Webhook handler class.
 */
class Authorize_Redirect {

	/**
	 * Constructs the object
	 *
	 * @param Automattic\Jetpack\Connection\Manager $connection The Connection Manager object.
	 */
	public function __construct( $connection ) {
		$this->connection = $connection;
	}

	/**
	 * Handle the webhook
	 *
	 * This method implements what's in Jetpack::admin_page_load when the Jetpack plugin is not present
	 */
	public function handle() {

		add_filter(
			'allowed_redirect_hosts',
			function ( $domains ) {
				$domains[] = 'jetpack.com';
				$domains[] = 'jetpack.wordpress.com';
				$domains[] = 'wordpress.com';
				// Calypso envs.
				$domains[] = 'calypso.localhost';
				$domains[] = 'wpcalypso.wordpress.com';
				$domains[] = 'horizon.wordpress.com';
				return array_unique( $domains );
			}
		);

		// phpcs:ignore WordPress.Security.NonceVerification.Recommended
		$dest_url = empty( $_GET['dest_url'] ) ? null : esc_url_raw( wp_unslash( $_GET['dest_url'] ) );

		if ( ! $dest_url || ( 0 === stripos( $dest_url, 'https://jetpack.com/' ) && 0 === stripos( $dest_url, 'https://wordpress.com/' ) ) ) {
			// The destination URL is missing or invalid, nothing to do here.
			exit;
		}

		// The user is either already connected, or finished the connection process.
		if ( $this->connection->is_connected() && $this->connection->is_user_connected() ) {
			if ( class_exists( '\Automattic\Jetpack\Licensing' ) && method_exists( '\Automattic\Jetpack\Licensing', 'handle_user_connected_redirect' ) ) {
				Licensing::instance()->handle_user_connected_redirect( $dest_url );
			}

			wp_safe_redirect( $dest_url );
			exit;
		} elseif ( ! empty( $_GET['done'] ) ) { // phpcs:ignore WordPress.Security.NonceVerification.Recommended
			// The user decided not to proceed with setting up the connection.

			wp_safe_redirect( Admin_Menu::get_top_level_menu_item_url() );
			exit;
		}

		$redirect_args = array(
			'page'     => 'jetpack',
			'action'   => 'authorize_redirect',
			'dest_url' => rawurlencode( $dest_url ),
			'done'     => '1',
		);

		// phpcs:ignore WordPress.Security.NonceVerification.Recommended
		if ( ! empty( $_GET['from'] ) && 'jetpack_site_only_checkout' === $_GET['from'] ) {
			$redirect_args['from'] = 'jetpack_site_only_checkout';
		}

		wp_safe_redirect( $this->build_authorize_url( add_query_arg( $redirect_args, admin_url( 'admin.php' ) ) ) );
		exit;
	}

	/**
	 * Create the Jetpack authorization URL. Copied from Jetpack class.
	 *
	 * @param bool|string $redirect URL to redirect to.
	 *
	 * @todo Update default value for redirect since the called function expects a string.
	 *
	 * @return mixed|void
	 */
	public function build_authorize_url( $redirect = false ) {

		add_filter( 'jetpack_connect_request_body', array( __CLASS__, 'filter_connect_request_body' ) );
		add_filter( 'jetpack_connect_redirect_url', array( __CLASS__, 'filter_connect_redirect_url' ) );

		$url = $this->connection->get_authorization_url( wp_get_current_user(), $redirect );

		remove_filter( 'jetpack_connect_request_body', array( __CLASS__, 'filter_connect_request_body' ) );
		remove_filter( 'jetpack_connect_redirect_url', array( __CLASS__, 'filter_connect_redirect_url' ) );

		/** This filter is documented in plugins/jetpack/class-jetpack.php */
		return apply_filters( 'jetpack_build_authorize_url', $url );
	}

	/**
	 * Filters the redirection URL that is used for connect requests. The redirect
	 * URL should return the user back to the Jetpack console.
	 * Copied from Jetpack class.
	 *
	 * @param String $redirect the default redirect URL used by the package.
	 * @return String the modified URL.
	 */
	public static function filter_connect_redirect_url( $redirect ) {
		$jetpack_admin_page = esc_url_raw( admin_url( 'admin.php?page=jetpack' ) );
		$redirect           = $redirect
			? wp_validate_redirect( esc_url_raw( $redirect ), $jetpack_admin_page )
			: $jetpack_admin_page;

		// phpcs:ignore WordPress.Security.NonceVerification.Recommended
		if ( isset( $_REQUEST['is_multisite'] ) ) {
			$redirect = Jetpack_Network::init()->get_url( 'network_admin_page' );
		}

		return $redirect;
	}

	/**
	 * Filters the connection URL parameter array.
	 * Copied from Jetpack class.
	 *
	 * @param array $args default URL parameters used by the package.
	 * @return array the modified URL arguments array.
	 */
	public static function filter_connect_request_body( $args ) {
		if (
			Constants::is_defined( 'JETPACK__GLOTPRESS_LOCALES_PATH' )
			&& include_once Constants::get_constant( 'JETPACK__GLOTPRESS_LOCALES_PATH' )
		) {
			$gp_locale      = GP_Locales::by_field( 'wp_locale', get_locale() );
			$args['locale'] = isset( $gp_locale ) && isset( $gp_locale->slug )
				? $gp_locale->slug
				: '';
		}

		$tracking        = new Tracking();
		$tracks_identity = $tracking->tracks_get_identity( $args['state'] );

		$args = array_merge(
			$args,
			array(
				'_ui' => $tracks_identity['_ui'],
				'_ut' => $tracks_identity['_ut'],
			)
		);

		$calypso_env = self::get_calypso_env();

		if ( ! empty( $calypso_env ) ) {
			$args['calypso_env'] = $calypso_env;
		}

		return $args;
	}

	/**
	 * Return Calypso environment value; used for developing Jetpack and pairing
	 * it with different Calypso enrionments, such as localhost.
	 * Copied from Jetpack class.
	 *
	 * @since 1.37.1
	 *
	 * @return string Calypso environment
	 */
	public static function get_calypso_env() {
		// phpcs:ignore WordPress.Security.NonceVerification.Recommended
		if ( isset( $_GET['calypso_env'] ) ) {
			// phpcs:ignore WordPress.Security.NonceVerification.Recommended
			return sanitize_key( $_GET['calypso_env'] );
		}

		if ( getenv( 'CALYPSO_ENV' ) ) {
			return sanitize_key( getenv( 'CALYPSO_ENV' ) );
		}

		if ( defined( 'CALYPSO_ENV' ) && CALYPSO_ENV ) {
			return sanitize_key( CALYPSO_ENV );
		}

		return '';
	}
}
TRACKING.md                                                                                                                                                                                                                                                    3528          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-connection                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            # Jetpack Tracking package

A package containing functionality to track events to the a8c Tracks system

## Usage

There are several ways to track events using this package.

* Ajax: Probably the easiest one. You can simply add a class to a link and it will be tracked or you can make your own ajax call
* PHP: Track an event on the backend
* Tracking pixel: An alternative way to track events by dynamically adding a pixel to the DOM

### Tracking via Ajax

This is useful to track simple click events without the need of any additional js. Just add the appropriate class to your links and it will be tracked.

#### 1. enqueue script

Note: Not needed if you are using the Jetpack plugin in the admin context as the script is already loaded by Jetpack.

See `Automattic\Jetpack\Tracking::enqueue_tracks_scripts()`

```PHP
add_action( 'admin_enqueue_scripts', array( new Tracking( 'plugin-slug' ), 'enqueue_tracks_scripts' ) );
```

#### 2. Add the class and the event attributes.

Add the `jptracks` class to any `a` element or to its parent element.

The event needs a name. This can be informed with the `data-jptracks-name` attritbute.

```HTML
<a class="jptracks" data-jptracks-name="my-awesome-event">Click me</a>
```

And that's it. Your event will be tracked. Every time this element is clicked an ajax call will be triggered to the Tracking package and it will send it to wpcom.

**Note:** Event name will be automatically prefixed with `jetpack_`.

#### 3. Additional parameters

You can also inform additional parameters to your event using the `data-jptracks-prop` attribute. Anything in this attr will be stored in the `clicked` attribute in the event.

#### 4. Making your own ajax calls

In your JS you can set up your own ajax calls. Example:

```JS
window.jpTracksAJAX.record_ajax_event( 'my_event_name', 'click', { prop1: value1, prop2: value2 } );
```

**Note:** Event name will be automatically prefixed with `jetpack_`.

##### Waiting for the ajax call to complete before doing anything else

If you need to do a subsequent action but wants to wait for this event to be tracked, you can do the following:

```JS
window.jpTracksAJAX
	.record_ajax_event( 'my_event_name', 'click', { prop1: value1, prop2: value2 }  )
	.always( function() {
		// do something
	} );
```

### Tracking in PHP

Use `Automattic\Jetpack\Tracking::record_user_event()` to track events on the backend.

```PHP
$connection_manager = new Automattic\Jetpack\Connection\Manager( 'plugin-slug' );
$tracking           = new Tracking( 'plugin-slug', $connection_manager );
$tracking->record_user_event(
	$event_name,
	array(
		'property_key' => 'value',
	)
);
```

### Tracking pixel

This approach to track events uses `//stats.wp.com/w.js` and dynamically adds a tracking pixel to the DOM to do the tracking.

#### 1. Enqueue the scripts

```PHP
Tracking::register_tracks_functions_scripts( true );
```

#### 2. Inform the user data

```PHP
wp_localize_script(
	'my_script',
	'varname',
	array(
		'tracksUserData'   => Jetpack_Tracks_Client::get_connected_user_tracks_identity(),
	)
);
```

#### 3. Track!

In your JS:

```JS
var tracksUser = varname.tracksUserData;

analytics.initialize( tracksUser.userid, tracksUser.username );

analytics.tracks.recordEvent( 'jetpack_my_event_name', { prop1: value1, prop2: value2 } );
```

## Debugging

You can watch your events being tracked in the browser console. In order to activate that, run the following command in the console:

```JS
localStorage.setItem( 'debug', 'dops:analytics*' );
```
CHANGELOG.md                                                                                                                                                                                                                                                   6265          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-constants                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             # Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [2.0.0] - 2023-11-20
### Changed
- Updated required PHP version to >= 7.0. [#34192]

## [1.6.23] - 2023-08-23
### Changed
- Updated package dependencies. [#32605]

## [1.6.22] - 2023-04-10
### Added
- Add Jetpack Autoloader package suggestion. [#29988]

## [1.6.21] - 2023-02-20
### Changed
- Minor internal updates.

## [1.6.20] - 2022-12-02
### Changed
- Updated package dependencies. [#27688]

## [1.6.19] - 2022-11-22
### Changed
- Updated package dependencies. [#27043]

## [1.6.18] - 2022-07-26
### Changed
- Updated package dependencies. [#25158]

## [1.6.17] - 2022-06-21
### Changed
- Renaming master to trunk.

## [1.6.16] - 2022-04-26
### Changed
- Updated package dependencies.

## [1.6.15] - 2022-01-25
### Changed
- Updated package dependencies.

## [1.6.14] - 2022-01-04
### Changed
- Switch to pcov for code coverage.
- Updated package dependencies

## [1.6.13] - 2021-12-14
### Changed
- Updated package dependencies.

## [1.6.12] - 2021-11-22
### Changed
- Updated package dependencies

## [1.6.11] - 2021-11-02
### Changed
- Set `convertDeprecationsToExceptions` true in PHPUnit config.
- Update PHPUnit configs to include just what needs coverage rather than include everything then try to exclude stuff that doesn't.

## [1.6.10] - 2021-10-26
### Fixed
- Updated is_true docblock to be more accurate.

## [1.6.9] - 2021-10-13
### Changed
- Updated package dependencies.

## [1.6.8] - 2021-10-06
### Changed
- Updated package dependencies

## [1.6.7] - 2021-09-28
### Changed
- Updated package dependencies.

## [1.6.6] - 2021-08-30
### Changed
- Run composer update on test-php command instead of phpunit
- Tests: update PHPUnit polyfills dependency (yoast/phpunit-polyfills).
- Updated versions in annotations

## [1.6.5] - 2021-05-25
### Changed
- Updated package dependencies.

## [1.6.4] - 2021-04-08
### Changed
- Packaging and build changes, no change to the package itself.

## [1.6.3] - 2021-03-30
### Added
- Composer alias for dev-master, to improve dependencies

### Changed
- Update package dependencies.

### Fixed
- Use `composer update` rather than `install` in scripts, as composer.lock isn't checked in.

## [1.6.2] - 2021-02-05

- CI: Make tests more generic

## [1.6.1] - 2021-01-19

- Add mirror-repo information to all current composer packages
- Monorepo: Reorganize all projects

## [1.6.0] - 2020-12-14

- Update dependency brain/monkey to v2.6.0
- Pin dependencies
- Packages: Update for PHP 8 testing

## [1.5.1] - 2020-10-28

- Updated PHPCS: Packages and Debugger

## [1.5.0] - 2020-08-13

- CI: Try collect js coverage
- Docker: Add package testing shortcut

## [1.4.0] - 2020-07-01

- Package Unit tests: update test file names to make sure they runs in Travis

## [1.3.0] - 2020-06-22

- PHPCS: Clean up the packages

## [1.2.0] - 2020-04-15

- Use jp.com redirect in all links
- Connection: add a filter for setting Jetpack api constants

## [1.1.3] - 2019-11-08

- Packages: Use classmap instead of PSR-4

## [1.1.2] - 2019-10-28

- Packages: Add gitattributes files to all packages that need th…

## [1.1.1] - 2019-09-20

- Docs: Unify usage of @package phpdoc tags

## [1.1.0] - 2019-09-14

## 1.0.0 - 2019-07-09

- Packages: Finish the constants package

[2.0.0]: https://github.com/Automattic/jetpack-constants/compare/v1.6.23...v2.0.0
[1.6.23]: https://github.com/Automattic/jetpack-constants/compare/v1.6.22...v1.6.23
[1.6.22]: https://github.com/Automattic/jetpack-constants/compare/v1.6.21...v1.6.22
[1.6.21]: https://github.com/Automattic/jetpack-constants/compare/v1.6.20...v1.6.21
[1.6.20]: https://github.com/Automattic/jetpack-constants/compare/v1.6.19...v1.6.20
[1.6.19]: https://github.com/Automattic/jetpack-constants/compare/v1.6.18...v1.6.19
[1.6.18]: https://github.com/Automattic/jetpack-constants/compare/v1.6.17...v1.6.18
[1.6.17]: https://github.com/Automattic/jetpack-constants/compare/v1.6.16...v1.6.17
[1.6.16]: https://github.com/Automattic/jetpack-constants/compare/v1.6.15...v1.6.16
[1.6.15]: https://github.com/Automattic/jetpack-constants/compare/v1.6.14...v1.6.15
[1.6.14]: https://github.com/Automattic/jetpack-constants/compare/v1.6.13...v1.6.14
[1.6.13]: https://github.com/Automattic/jetpack-constants/compare/v1.6.12...v1.6.13
[1.6.12]: https://github.com/Automattic/jetpack-constants/compare/v1.6.11...v1.6.12
[1.6.11]: https://github.com/Automattic/jetpack-constants/compare/v1.6.10...v1.6.11
[1.6.10]: https://github.com/Automattic/jetpack-constants/compare/v1.6.9...v1.6.10
[1.6.9]: https://github.com/Automattic/jetpack-constants/compare/v1.6.8...v1.6.9
[1.6.8]: https://github.com/Automattic/jetpack-constants/compare/v1.6.7...v1.6.8
[1.6.7]: https://github.com/Automattic/jetpack-constants/compare/v1.6.6...v1.6.7
[1.6.6]: https://github.com/Automattic/jetpack-constants/compare/v1.6.5...v1.6.6
[1.6.5]: https://github.com/Automattic/jetpack-constants/compare/v1.6.4...v1.6.5
[1.6.4]: https://github.com/Automattic/jetpack-constants/compare/v1.6.3...v1.6.4
[1.6.3]: https://github.com/Automattic/jetpack-constants/compare/v1.6.2...v1.6.3
[1.6.2]: https://github.com/Automattic/jetpack-constants/compare/v1.6.1...v1.6.2
[1.6.1]: https://github.com/Automattic/jetpack-constants/compare/v1.6.0...v1.6.1
[1.6.0]: https://github.com/Automattic/jetpack-constants/compare/v1.5.1...v1.6.0
[1.5.1]: https://github.com/Automattic/jetpack-constants/compare/v1.5.0...v1.5.1
[1.5.0]: https://github.com/Automattic/jetpack-constants/compare/v1.4.0...v1.5.0
[1.4.0]: https://github.com/Automattic/jetpack-constants/compare/v1.3.0...v1.4.0
[1.3.0]: https://github.com/Automattic/jetpack-constants/compare/v1.2.0...v1.3.0
[1.2.0]: https://github.com/Automattic/jetpack-constants/compare/v1.1.3...v1.2.0
[1.1.3]: https://github.com/Automattic/jetpack-constants/compare/v1.1.2...v1.1.3
[1.1.2]: https://github.com/Automattic/jetpack-constants/compare/v1.1.1...v1.1.2
[1.1.1]: https://github.com/Automattic/jetpack-constants/compare/v1.1.0...v1.1.1
[1.1.0]: https://github.com/Automattic/jetpack-constants/compare/v1.0.0...v1.1.0
composer.json                                                                                                                                                                                                                                                  976           1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-constants                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             {
	"name": "automattic/jetpack-constants",
	"description": "A wrapper for defining constants in a more testable way.",
	"type": "jetpack-library",
	"license": "GPL-2.0-or-later",
	"require": {
		"php": ">=7.0"
	},
	"require-dev": {
		"brain/monkey": "2.6.1",
		"yoast/phpunit-polyfills": "1.1.0",
		"automattic/jetpack-changelogger": "^4.0.0"
	},
	"suggest": {
		"automattic/jetpack-autoloader": "Allow for better interoperability with other plugins that use this package."
	},
	"autoload": {
		"classmap": [
			"src/"
		]
	},
	"scripts": {
		"phpunit": [
			"./vendor/phpunit/phpunit/phpunit --colors=always"
		],
		"test-php": [
			"@composer phpunit"
		]
	},
	"minimum-stability": "dev",
	"prefer-stable": true,
	"extra": {
		"autotagger": true,
		"mirror-repo": "Automattic/jetpack-constants",
		"changelogger": {
			"link-template": "https://github.com/Automattic/jetpack-constants/compare/v${old}...v${new}"
		},
		"branch-alias": {
			"dev-trunk": "2.0.x-dev"
		}
	}
}
LICENSE.txt                                                                                                                                                                                                                                                    18416         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-constants                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


===================================


GNU GENERAL PUBLIC LICENSE
   Version 2, June 1991

Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.

		Preamble

The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Lesser General Public License instead.)  You can apply it to
your programs, too.

When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it
in new free programs; and that you know you can do these things.

To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

We protect your rights with two steps: (1) copyright the software, and
(2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

The precise terms and conditions for copying, distribution and
modification follow.

GNU GENERAL PUBLIC LICENSE
TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

0. This License applies to any program or other work which contains
a notice placed by the copyright holder saying it may be distributed
under the terms of this General Public License.  The "Program", below,
refers to any such program or work, and a "work based on the Program"
means either the Program or any derivative work under copyright law:
that is to say, a work containing the Program or a portion of it,
either verbatim or with modifications and/or translated into another
language.  (Hereinafter, translation is included without limitation in
the term "modification".)  Each licensee is addressed as "you".

Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running the Program is not restricted, and the output from the Program
is covered only if its contents constitute a work based on the
Program (independent of having been made by running the Program).
Whether that is true depends on what the Program does.

1. You may copy and distribute verbatim copies of the Program's
source code as you receive it, in any medium, provided that you
conspicuously and appropriately publish on each copy an appropriate
copyright notice and disclaimer of warranty; keep intact all the
notices that refer to this License and to the absence of any warranty;
and give any other recipients of the Program a copy of this License
along with the Program.

You may charge a fee for the physical act of transferring a copy, and
you may at your option offer warranty protection in exchange for a fee.

2. You may modify your copy or copies of the Program or any portion
of it, thus forming a work based on the Program, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

a) You must cause the modified files to carry prominent notices
stating that you changed the files and the date of any change.

b) You must cause any work that you distribute or publish, that in
whole or in part contains or is derived from the Program or any
part thereof, to be licensed as a whole at no charge to all third
parties under the terms of this License.

c) If the modified program normally reads commands interactively
when run, you must cause it, when started running for such
interactive use in the most ordinary way, to print or display an
announcement including an appropriate copyright notice and a
notice that there is no warranty (or else, saying that you provide
a warranty) and that users may redistribute the program under
these conditions, and telling the user how to view a copy of this
License.  (Exception: if the Program itself is interactive but
does not normally print such an announcement, your work based on
the Program is not required to print an announcement.)

These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Program,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Program, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Program.

In addition, mere aggregation of another work not based on the Program
with the Program (or with a work based on the Program) on a volume of
a storage or distribution medium does not bring the other work under
the scope of this License.

3. You may copy and distribute the Program (or a work based on it,
under Section 2) in object code or executable form under the terms of
Sections 1 and 2 above provided that you also do one of the following:

a) Accompany it with the complete corresponding machine-readable
source code, which must be distributed under the terms of Sections
1 and 2 above on a medium customarily used for software interchange; or,

b) Accompany it with a written offer, valid for at least three
years, to give any third party, for a charge no more than your
cost of physically performing source distribution, a complete
machine-readable copy of the corresponding source code, to be
distributed under the terms of Sections 1 and 2 above on a medium
customarily used for software interchange; or,

c) Accompany it with the information you received as to the offer
to distribute corresponding source code.  (This alternative is
allowed only for noncommercial distribution and only if you
received the program in object code or executable form with such
an offer, in accord with Subsection b above.)

The source code for a work means the preferred form of the work for
making modifications to it.  For an executable work, complete source
code means all the source code for all modules it contains, plus any
associated interface definition files, plus the scripts used to
control compilation and installation of the executable.  However, as a
special exception, the source code distributed need not include
anything that is normally distributed (in either source or binary
form) with the major components (compiler, kernel, and so on) of the
operating system on which the executable runs, unless that component
itself accompanies the executable.

If distribution of executable or object code is made by offering
access to copy from a designated place, then offering equivalent
access to copy the source code from the same place counts as
distribution of the source code, even though third parties are not
compelled to copy the source along with the object code.

4. You may not copy, modify, sublicense, or distribute the Program
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense or distribute the Program is
void, and will automatically terminate your rights under this License.
However, parties who have received copies, or rights, from you under
this License will not have their licenses terminated so long as such
parties remain in full compliance.

5. You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Program or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Program (or any work based on the
Program), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying
the Program or works based on it.

6. Each time you redistribute the Program (or any work based on the
Program), the recipient automatically receives a license from the
original licensor to copy, distribute or modify the Program subject to
these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties to
this License.

7. If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Program at all.  For example, if a patent
license would not permit royalty-free redistribution of the Program by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Program.

If any portion of this section is held invalid or unenforceable under
any particular circumstance, the balance of the section is intended to
apply and the section as a whole is intended to apply in other
circumstances.

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

8. If the distribution and/or use of the Program is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Program under this License
may add an explicit geographical distribution limitation excluding
those countries, so that distribution is permitted only in or among
countries not thus excluded.  In such case, this License incorporates
the limitation as if written in the body of this License.

9. The Free Software Foundation may publish revised and/or new versions
of the General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

Each version is given a distinguishing version number.  If the Program
specifies a version number of this License which applies to it and "any
later version", you have the option of following the terms and conditions
either of that version or of any later version published by the Free
Software Foundation.  If the Program does not specify a version number of
this License, you may choose any version ever published by the Free Software
Foundation.

10. If you wish to incorporate parts of the Program into other free
programs whose distribution conditions are different, write to the author
to ask for permission.  For software which is copyrighted by the Free
Software Foundation, write to the Free Software Foundation; we sometimes
make exceptions for this.  Our decision will be guided by the two goals
of preserving the free status of all derivatives of our free software and
of promoting the sharing and reuse of software generally.

		NO WARRANTY

11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
REPAIR OR CORRECTION.

12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.

 END OF TERMS AND CONDITIONS

How to Apply These Terms to Your New Programs

If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

<one line to give the program's name and a brief idea of what it does.>
Copyright (C) <year>  <name of author>

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

Also add information on how to contact you by electronic and paper mail.

If the program is interactive, make it output a short notice like this
when it starts in an interactive mode:

Gnomovision version 69, Copyright (C) year name of author
Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
This is free software, and you are welcome to redistribute it
under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, the commands you use may
be called something other than `show w' and `show c'; they could even be
mouse-clicks or menu items--whatever suits your program.

You should also get your employer (if you work as a programmer) or your
school, if any, to sign a "copyright disclaimer" for the program, if
necessary.  Here is a sample; alter the names:

Yoyodyne, Inc., hereby disclaims all copyright interest in the program
`Gnomovision' (which makes passes at compilers) written by James Hacker.

<signature of Ty Coon>, 1 April 1989
Ty Coon, President of Vice

This General Public License does not permit incorporating your program into
proprietary programs.  If your program is a subroutine library, you may
consider it more useful to permit linking proprietary applications with the
library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.
README.md                                                                                                                                                                                                                                                      1864          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-constants                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             # Jetpack Constants

A simple constant manager for Jetpack.

Testing constants is hard. Once you define a constant in PHP, it's defined. Constants Manager is an abstraction layer so that unit tests can set constants for tests.

### Usage

Retrieve the value of a constant `CONSTANT_NAME` (returns `null` if it's not defined):

```php
use Automattic\Jetpack\Constants;

$constant_value = Constants::get_constant( 'CONSTANT_NAME' );
```

Set the value of a constant `CONSTANT_NAME` to a particular value:

```php
use Automattic\Jetpack\Constants;

$value = 'some value';
Constants::set_constant( 'CONSTANT_NAME', $value );
```

Check whether a constant `CONSTANT_NAME` is defined:

```php
use Automattic\Jetpack\Constants;

$defined = Constants::is_defined( 'CONSTANT_NAME' );
```

Check whether a constant `CONSTANT_NAME` is truthy:

```php
use Automattic\Jetpack\Constants;

$is_truthy = Constants::is_true( 'CONSTANT_NAME' );
```

Delete the `CONSTANT_NAME` constant:

```php
use Automattic\Jetpack\Constants;

Constants::clear_single_constant( 'CONSTANT_NAME' );
```

Delete all known constants:

```php
use Automattic\Jetpack\Constants;

Constants::clear_constants();
```
## Using this package in your WordPress plugin

If you plan on using this package in your WordPress plugin, we would recommend that you use [Jetpack Autoloader](https://packagist.org/packages/automattic/jetpack-autoloader) as your autoloader. This will allow for maximum interoperability with other plugins that use this package as well.

## Security

Need to report a security vulnerability? Go to [https://automattic.com/security/](https://automattic.com/security/) or directly to our security bug bounty site [https://hackerone.com/automattic](https://hackerone.com/automattic).

## License

jetpack-constants is licensed under [GNU General Public License v2 (or later)](./LICENSE.txt)
SECURITY.md                                                                                                                                                                                                                                                    2506          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-constants                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             # Security Policy

Full details of the Automattic Security Policy can be found on [automattic.com](https://automattic.com/security/).

## Supported Versions

Generally, only the latest version of Jetpack and its associated plugins have continued support. If a critical vulnerability is found in the current version of a plugin, we may opt to backport any patches to previous versions. 

## Reporting a Vulnerability

Our HackerOne program covers the below plugin software, as well as a variety of related projects and infrastructure:

* [Jetpack](https://jetpack.com/)
* Jetpack Backup
* Jetpack Boost
* Jetpack CRM
* Jetpack Protect
* Jetpack Search
* Jetpack Social
* Jetpack VideoPress

**For responsible disclosure of security issues and to be eligible for our bug bounty program, please submit your report via the [HackerOne](https://hackerone.com/automattic) portal.**

Our most critical targets are:

* Jetpack and the Jetpack composer packages (all within this repo)
* Jetpack.com -- the primary marketing site.
* cloud.jetpack.com -- a management site.
* wordpress.com -- the shared management site for both Jetpack and WordPress.com sites.

For more targets, see the `In Scope` section on [HackerOne](https://hackerone.com/automattic).

_Please note that the **WordPress software is a separate entity** from Automattic. Please report vulnerabilities for WordPress through [the WordPress Foundation's HackerOne page](https://hackerone.com/wordpress)._

## Guidelines

We're committed to working with security researchers to resolve the vulnerabilities they discover. You can help us by following these guidelines:

*   Follow [HackerOne's disclosure guidelines](https://www.hackerone.com/disclosure-guidelines).
*   Pen-testing Production:
    *   Please **setup a local environment** instead whenever possible. Most of our code is open source (see above).
    *   If that's not possible, **limit any data access/modification** to the bare minimum necessary to reproduce a PoC.
    *   **_Don't_ automate form submissions!** That's very annoying for us, because it adds extra work for the volunteers who manage those systems, and reduces the signal/noise ratio in our communication channels.
    *   To be eligible for a bounty, all of these guidelines must be followed.
*   Be Patient - Give us a reasonable time to correct the issue before you disclose the vulnerability.

We also expect you to comply with all applicable laws. You're responsible to pay any taxes associated with your bounties.
class-constants.php                                                                                                                                                                                                                                            3414          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-constants/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         <?php
/**
 * A constants manager for Jetpack.
 *
 * @package automattic/jetpack-constants
 */

namespace Automattic\Jetpack;

/**
 * Class Automattic\Jetpack\Constants
 *
 * Testing constants is hard. Once you define a constant, it's defined. Constants Manager is an
 * abstraction layer so that unit tests can set "constants" for tests.
 *
 * To test your code, you'll need to swap out `defined( 'CONSTANT' )` with `Automattic\Jetpack\Constants::is_defined( 'CONSTANT' )`
 * and replace `CONSTANT` with `Automattic\Jetpack\Constants::get_constant( 'CONSTANT' )`. Then in the unit test, you can set the
 * constant with `Automattic\Jetpack\Constants::set_constant( 'CONSTANT', $value )` and then clean up after each test with something like
 * this:
 *
 * function tearDown() {
 *     Automattic\Jetpack\Constants::clear_constants();
 * }
 */
class Constants {
	/**
	 * A container for all defined constants.
	 *
	 * @access public
	 * @static
	 *
	 * @var array.
	 */
	public static $set_constants = array();

	/**
	 * Checks if a "constant" has been set in constants Manager
	 * and has a truthy value (e.g. not null, not false, not 0, any string).
	 *
	 * @param string $name The name of the constant.
	 *
	 * @return bool
	 */
	public static function is_true( $name ) {
		return self::is_defined( $name ) && self::get_constant( $name );
	}

	/**
	 * Checks if a "constant" has been set in constants Manager, and if not,
	 * checks if the constant was defined with define( 'name', 'value ).
	 *
	 * @param string $name The name of the constant.
	 *
	 * @return bool
	 */
	public static function is_defined( $name ) {
		return array_key_exists( $name, self::$set_constants )
			? true
			: defined( $name );
	}

	/**
	 * Attempts to retrieve the "constant" from constants Manager, and if it hasn't been set,
	 * then attempts to get the constant with the constant() function. If that also hasn't
	 * been set, attempts to get a value from filters.
	 *
	 * @param string $name The name of the constant.
	 *
	 * @return mixed null if the constant does not exist or the value of the constant.
	 */
	public static function get_constant( $name ) {
		if ( array_key_exists( $name, self::$set_constants ) ) {
			return self::$set_constants[ $name ];
		}

		if ( defined( $name ) ) {
			return constant( $name );
		}

		/**
		 * Filters the value of the constant.
		 *
		 * @since 1.2.0
		 *
		 * @param null The constant value to be filtered. The default is null.
		 * @param String $name The constant name.
		 */
		return apply_filters( 'jetpack_constant_default_value', null, $name );
	}

	/**
	 * Sets the value of the "constant" within constants Manager.
	 *
	 * @param string $name The name of the constant.
	 * @param string $value The value of the constant.
	 */
	public static function set_constant( $name, $value ) {
		self::$set_constants[ $name ] = $value;
	}

	/**
	 * Will unset a "constant" from constants Manager if the constant exists.
	 *
	 * @param string $name The name of the constant.
	 *
	 * @return bool Whether the constant was removed.
	 */
	public static function clear_single_constant( $name ) {
		if ( ! array_key_exists( $name, self::$set_constants ) ) {
			return false;
		}

		unset( self::$set_constants[ $name ] );

		return true;
	}

	/**
	 * Resets all of the constants within constants Manager.
	 */
	public static function clear_constants() {
		self::$set_constants = array();
	}
}
CHANGELOG.md                                                                                                                                                                                                                                                   7496          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-redirect                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              # Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [2.0.0] - 2023-11-20
### Changed
- Replaced usage of strpos() with str_starts_with(). [#34135]
- Updated required PHP version to >= 7.0. [#34192]

## [1.7.27] - 2023-09-19

- Minor internal updates.

## [1.7.26] - 2023-08-23
### Changed
- Updated package dependencies. [#32605]

## [1.7.25] - 2023-04-10
### Added
- Add Jetpack Autoloader package suggestion. [#29988]

## [1.7.24] - 2023-02-20
### Changed
- Minor internal updates.

## [1.7.23] - 2023-01-11
### Changed
- Updated package dependencies.

## [1.7.22] - 2022-12-19
### Changed
- Updated package dependencies.

## [1.7.21] - 2022-12-02
### Changed
- Updated package dependencies. [#27688]

## [1.7.20] - 2022-11-22
### Changed
- Updated package dependencies. [#27043]

## [1.7.19] - 2022-11-07
### Changed
- Updated package dependencies. [#27278]

## [1.7.18] - 2022-07-26
### Changed
- Updated package dependencies. [#25158]

## [1.7.17] - 2022-06-21
### Changed
- Renaming master to trunk.

## [1.7.16] - 2022-06-14
### Changed
- Updated package dependencies. [#24529]

## [1.7.15] - 2022-05-10

## [1.7.14] - 2022-04-26
### Changed
- Updated package dependencies.

## [1.7.13] - 2022-04-05
### Changed
- Updated package dependencies.

## [1.7.12] - 2022-03-02
### Changed
- Updated package dependencies.

## [1.7.11] - 2022-02-22
### Changed
- Updated package dependencies.

## [1.7.10] - 2022-01-25
### Changed
- Updated package dependencies.

## [1.7.9] - 2022-01-04
### Changed
- Switch to pcov for code coverage.
- Updated package dependencies

## [1.7.8] - 2021-12-14
### Changed
- Updated package dependencies.

## [1.7.7] - 2021-11-22
### Changed
- Updated package dependencies

## [1.7.6] - 2021-11-02
### Changed
- Set `convertDeprecationsToExceptions` true in PHPUnit config.
- Update PHPUnit configs to include just what needs coverage rather than include everything then try to exclude stuff that doesn't.

## [1.7.5] - 2021-10-26
### Changed
- Updated package dependencies.

## [1.7.4] - 2021-10-13
### Changed
- Updated package dependencies.

## [1.7.3] - 2021-10-12
### Changed
- Updated package dependencies

## [1.7.2] - 2021-09-28
### Changed
- Updated package dependencies.

## [1.7.1] - 2021-08-30
### Changed
- Run composer update on test-php command instead of phpunit
- Tests: update PHPUnit polyfills dependency (yoast/phpunit-polyfills).

## [1.7.0] - 2021-06-29
### Changed
- Allow any argument to be passed.
- Improve documentation.

## [1.6.1] - 2021-06-15
### Changed
- Updated package dependencies.

## [1.6.0] - 2021-05-25
### Removed
- Removed filter from the final Redirect URL

## [1.5.5] - 2021-04-27
### Changed
- Updated package dependencies.

## [1.5.4] - 2021-03-30
### Added
- Composer alias for dev-master, to improve dependencies

### Changed
- Update package dependencies.
- Userless Connection: Redirect "userless" users to the "Plans" page

### Fixed
- Use `composer update` rather than `install` in scripts, as composer.lock isn't checked in.

## [1.5.3] - 2021-02-23

- CI: Make tests more generic

## [1.5.2] - 2021-01-26

- Update dependencies to latest stable

## [1.5.1] - 2021-01-26

- Add mirror-repo information to all current composer packages
- Monorepo: Reorganize all projects

## [1.5.0] - 2021-01-05

- Update dependency brain/monkey to v2.6.0
- Pin dependencies
- Packages: Update for PHP 8 testing
- Pin dependency brain/monkey to 2.5.0

## [1.4.1] - 2020-11-24

- Status: Introduce get_site_suffix method

## [1.4.0] - 2020-10-27

- Masterbar: Add Admin Menu endpoint

## [1.3.0] - 2020-08-14

- Packages: Update filenames after #16810
- CI: Try collect js coverage
- Docker: Add package testing shortcut

## [1.2.0] - 2020-06-16

- Add a trailing / to jetpack.com/redirect URLs.

## [1.1.0] - 2020-05-22

- add filter to Redirect::get_url

## 1.0.0 - 2020-04-24

- Create Jetpack Redirect package

[2.0.0]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.27...v2.0.0
[1.7.27]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.26...v1.7.27
[1.7.26]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.25...v1.7.26
[1.7.25]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.24...v1.7.25
[1.7.24]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.23...v1.7.24
[1.7.23]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.22...v1.7.23
[1.7.22]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.21...v1.7.22
[1.7.21]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.20...v1.7.21
[1.7.20]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.19...v1.7.20
[1.7.19]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.18...v1.7.19
[1.7.18]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.17...v1.7.18
[1.7.17]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.16...v1.7.17
[1.7.16]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.15...v1.7.16
[1.7.15]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.14...v1.7.15
[1.7.14]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.13...v1.7.14
[1.7.13]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.12...v1.7.13
[1.7.12]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.11...v1.7.12
[1.7.11]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.10...v1.7.11
[1.7.10]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.9...v1.7.10
[1.7.9]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.8...v1.7.9
[1.7.8]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.7...v1.7.8
[1.7.7]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.6...v1.7.7
[1.7.6]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.5...v1.7.6
[1.7.5]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.4...v1.7.5
[1.7.4]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.3...v1.7.4
[1.7.3]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.2...v1.7.3
[1.7.2]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.1...v1.7.2
[1.7.1]: https://github.com/Automattic/jetpack-redirect/compare/v1.7.0...v1.7.1
[1.7.0]: https://github.com/Automattic/jetpack-redirect/compare/v1.6.1...v1.7.0
[1.6.1]: https://github.com/Automattic/jetpack-redirect/compare/v1.6.0...v1.6.1
[1.6.0]: https://github.com/Automattic/jetpack-redirect/compare/v1.5.5...v1.6.0
[1.5.5]: https://github.com/Automattic/jetpack-redirect/compare/v1.5.4...v1.5.5
[1.5.4]: https://github.com/Automattic/jetpack-redirect/compare/v1.5.3...v1.5.4
[1.5.3]: https://github.com/Automattic/jetpack-redirect/compare/v1.5.2...v1.5.3
[1.5.2]: https://github.com/Automattic/jetpack-redirect/compare/v1.5.1...v1.5.2
[1.5.1]: https://github.com/Automattic/jetpack-redirect/compare/v1.5.0...v1.5.1
[1.5.0]: https://github.com/Automattic/jetpack-redirect/compare/v1.4.1...v1.5.0
[1.4.1]: https://github.com/Automattic/jetpack-redirect/compare/v1.4.0...v1.4.1
[1.4.0]: https://github.com/Automattic/jetpack-redirect/compare/v1.3.0...v1.4.0
[1.3.0]: https://github.com/Automattic/jetpack-redirect/compare/v1.2.0...v1.3.0
[1.2.0]: https://github.com/Automattic/jetpack-redirect/compare/v1.1.0...v1.2.0
[1.1.0]: https://github.com/Automattic/jetpack-redirect/compare/v1.0.0...v1.1.0
composer.json                                                                                                                                                                                                                                                  1018          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-redirect                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              {
	"name": "automattic/jetpack-redirect",
	"description": "Utilities to build URLs to the jetpack.com/redirect/ service",
	"type": "jetpack-library",
	"license": "GPL-2.0-or-later",
	"require": {
		"php": ">=7.0",
		"automattic/jetpack-status": "^2.0.0"
	},
	"require-dev": {
		"brain/monkey": "2.6.1",
		"yoast/phpunit-polyfills": "1.1.0",
		"automattic/jetpack-changelogger": "^4.0.0"
	},
	"suggest": {
		"automattic/jetpack-autoloader": "Allow for better interoperability with other plugins that use this package."
	},
	"autoload": {
		"classmap": [
			"src/"
		]
	},
	"scripts": {
		"phpunit": [
			"./vendor/phpunit/phpunit/phpunit --colors=always"
		],
		"test-php": [
			"@composer phpunit"
		]
	},
	"minimum-stability": "dev",
	"prefer-stable": true,
	"extra": {
		"autotagger": true,
		"mirror-repo": "Automattic/jetpack-redirect",
		"changelogger": {
			"link-template": "https://github.com/Automattic/jetpack-redirect/compare/v${old}...v${new}"
		},
		"branch-alias": {
			"dev-trunk": "2.0.x-dev"
		}
	}
}
LICENSE.txt                                                                                                                                                                                                                                                    18416         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-redirect                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


===================================


GNU GENERAL PUBLIC LICENSE
   Version 2, June 1991

Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.

		Preamble

The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Lesser General Public License instead.)  You can apply it to
your programs, too.

When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it
in new free programs; and that you know you can do these things.

To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

We protect your rights with two steps: (1) copyright the software, and
(2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

The precise terms and conditions for copying, distribution and
modification follow.

GNU GENERAL PUBLIC LICENSE
TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

0. This License applies to any program or other work which contains
a notice placed by the copyright holder saying it may be distributed
under the terms of this General Public License.  The "Program", below,
refers to any such program or work, and a "work based on the Program"
means either the Program or any derivative work under copyright law:
that is to say, a work containing the Program or a portion of it,
either verbatim or with modifications and/or translated into another
language.  (Hereinafter, translation is included without limitation in
the term "modification".)  Each licensee is addressed as "you".

Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running the Program is not restricted, and the output from the Program
is covered only if its contents constitute a work based on the
Program (independent of having been made by running the Program).
Whether that is true depends on what the Program does.

1. You may copy and distribute verbatim copies of the Program's
source code as you receive it, in any medium, provided that you
conspicuously and appropriately publish on each copy an appropriate
copyright notice and disclaimer of warranty; keep intact all the
notices that refer to this License and to the absence of any warranty;
and give any other recipients of the Program a copy of this License
along with the Program.

You may charge a fee for the physical act of transferring a copy, and
you may at your option offer warranty protection in exchange for a fee.

2. You may modify your copy or copies of the Program or any portion
of it, thus forming a work based on the Program, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

a) You must cause the modified files to carry prominent notices
stating that you changed the files and the date of any change.

b) You must cause any work that you distribute or publish, that in
whole or in part contains or is derived from the Program or any
part thereof, to be licensed as a whole at no charge to all third
parties under the terms of this License.

c) If the modified program normally reads commands interactively
when run, you must cause it, when started running for such
interactive use in the most ordinary way, to print or display an
announcement including an appropriate copyright notice and a
notice that there is no warranty (or else, saying that you provide
a warranty) and that users may redistribute the program under
these conditions, and telling the user how to view a copy of this
License.  (Exception: if the Program itself is interactive but
does not normally print such an announcement, your work based on
the Program is not required to print an announcement.)

These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Program,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Program, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Program.

In addition, mere aggregation of another work not based on the Program
with the Program (or with a work based on the Program) on a volume of
a storage or distribution medium does not bring the other work under
the scope of this License.

3. You may copy and distribute the Program (or a work based on it,
under Section 2) in object code or executable form under the terms of
Sections 1 and 2 above provided that you also do one of the following:

a) Accompany it with the complete corresponding machine-readable
source code, which must be distributed under the terms of Sections
1 and 2 above on a medium customarily used for software interchange; or,

b) Accompany it with a written offer, valid for at least three
years, to give any third party, for a charge no more than your
cost of physically performing source distribution, a complete
machine-readable copy of the corresponding source code, to be
distributed under the terms of Sections 1 and 2 above on a medium
customarily used for software interchange; or,

c) Accompany it with the information you received as to the offer
to distribute corresponding source code.  (This alternative is
allowed only for noncommercial distribution and only if you
received the program in object code or executable form with such
an offer, in accord with Subsection b above.)

The source code for a work means the preferred form of the work for
making modifications to it.  For an executable work, complete source
code means all the source code for all modules it contains, plus any
associated interface definition files, plus the scripts used to
control compilation and installation of the executable.  However, as a
special exception, the source code distributed need not include
anything that is normally distributed (in either source or binary
form) with the major components (compiler, kernel, and so on) of the
operating system on which the executable runs, unless that component
itself accompanies the executable.

If distribution of executable or object code is made by offering
access to copy from a designated place, then offering equivalent
access to copy the source code from the same place counts as
distribution of the source code, even though third parties are not
compelled to copy the source along with the object code.

4. You may not copy, modify, sublicense, or distribute the Program
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense or distribute the Program is
void, and will automatically terminate your rights under this License.
However, parties who have received copies, or rights, from you under
this License will not have their licenses terminated so long as such
parties remain in full compliance.

5. You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Program or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Program (or any work based on the
Program), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying
the Program or works based on it.

6. Each time you redistribute the Program (or any work based on the
Program), the recipient automatically receives a license from the
original licensor to copy, distribute or modify the Program subject to
these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties to
this License.

7. If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Program at all.  For example, if a patent
license would not permit royalty-free redistribution of the Program by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Program.

If any portion of this section is held invalid or unenforceable under
any particular circumstance, the balance of the section is intended to
apply and the section as a whole is intended to apply in other
circumstances.

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

8. If the distribution and/or use of the Program is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Program under this License
may add an explicit geographical distribution limitation excluding
those countries, so that distribution is permitted only in or among
countries not thus excluded.  In such case, this License incorporates
the limitation as if written in the body of this License.

9. The Free Software Foundation may publish revised and/or new versions
of the General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

Each version is given a distinguishing version number.  If the Program
specifies a version number of this License which applies to it and "any
later version", you have the option of following the terms and conditions
either of that version or of any later version published by the Free
Software Foundation.  If the Program does not specify a version number of
this License, you may choose any version ever published by the Free Software
Foundation.

10. If you wish to incorporate parts of the Program into other free
programs whose distribution conditions are different, write to the author
to ask for permission.  For software which is copyrighted by the Free
Software Foundation, write to the Free Software Foundation; we sometimes
make exceptions for this.  Our decision will be guided by the two goals
of preserving the free status of all derivatives of our free software and
of promoting the sharing and reuse of software generally.

		NO WARRANTY

11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
REPAIR OR CORRECTION.

12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.

 END OF TERMS AND CONDITIONS

How to Apply These Terms to Your New Programs

If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

<one line to give the program's name and a brief idea of what it does.>
Copyright (C) <year>  <name of author>

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

Also add information on how to contact you by electronic and paper mail.

If the program is interactive, make it output a short notice like this
when it starts in an interactive mode:

Gnomovision version 69, Copyright (C) year name of author
Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
This is free software, and you are welcome to redistribute it
under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, the commands you use may
be called something other than `show w' and `show c'; they could even be
mouse-clicks or menu items--whatever suits your program.

You should also get your employer (if you work as a programmer) or your
school, if any, to sign a "copyright disclaimer" for the program, if
necessary.  Here is a sample; alter the names:

Yoyodyne, Inc., hereby disclaims all copyright interest in the program
`Gnomovision' (which makes passes at compilers) written by James Hacker.

<signature of Ty Coon>, 1 April 1989
Ty Coon, President of Vice

This General Public License does not permit incorporating your program into
proprietary programs.  If your program is a subroutine library, you may
consider it more useful to permit linking proprietary applications with the
library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.
README.md                                                                                                                                                                                                                                                      931           1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-redirect                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              # Jetpack Redirect package

A package containing functionality to generate URLs to the jetpack.com/redirect/ service

### Usage TODO

See `Automattic\Jetpack\Redirect::get_url()` documentation.

### Testing

```bash
$ composer run phpunit
```
## Using this package in your WordPress plugin

If you plan on using this package in your WordPress plugin, we would recommend that you use [Jetpack Autoloader](https://packagist.org/packages/automattic/jetpack-autoloader) as your autoloader. This will allow for maximum interoperability with other plugins that use this package as well.

## Security

Need to report a security vulnerability? Go to [https://automattic.com/security/](https://automattic.com/security/) or directly to our security bug bounty site [https://hackerone.com/automattic](https://hackerone.com/automattic).

## License

jetpack-redirect is licensed under [GNU General Public License v2 (or later)](./LICENSE.txt)
SECURITY.md                                                                                                                                                                                                                                                    2506          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-redirect                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              # Security Policy

Full details of the Automattic Security Policy can be found on [automattic.com](https://automattic.com/security/).

## Supported Versions

Generally, only the latest version of Jetpack and its associated plugins have continued support. If a critical vulnerability is found in the current version of a plugin, we may opt to backport any patches to previous versions. 

## Reporting a Vulnerability

Our HackerOne program covers the below plugin software, as well as a variety of related projects and infrastructure:

* [Jetpack](https://jetpack.com/)
* Jetpack Backup
* Jetpack Boost
* Jetpack CRM
* Jetpack Protect
* Jetpack Search
* Jetpack Social
* Jetpack VideoPress

**For responsible disclosure of security issues and to be eligible for our bug bounty program, please submit your report via the [HackerOne](https://hackerone.com/automattic) portal.**

Our most critical targets are:

* Jetpack and the Jetpack composer packages (all within this repo)
* Jetpack.com -- the primary marketing site.
* cloud.jetpack.com -- a management site.
* wordpress.com -- the shared management site for both Jetpack and WordPress.com sites.

For more targets, see the `In Scope` section on [HackerOne](https://hackerone.com/automattic).

_Please note that the **WordPress software is a separate entity** from Automattic. Please report vulnerabilities for WordPress through [the WordPress Foundation's HackerOne page](https://hackerone.com/wordpress)._

## Guidelines

We're committed to working with security researchers to resolve the vulnerabilities they discover. You can help us by following these guidelines:

*   Follow [HackerOne's disclosure guidelines](https://www.hackerone.com/disclosure-guidelines).
*   Pen-testing Production:
    *   Please **setup a local environment** instead whenever possible. Most of our code is open source (see above).
    *   If that's not possible, **limit any data access/modification** to the bare minimum necessary to reproduce a PoC.
    *   **_Don't_ automate form submissions!** That's very annoying for us, because it adds extra work for the volunteers who manage those systems, and reduces the signal/noise ratio in our communication channels.
    *   To be eligible for a bounty, all of these guidelines must be followed.
*   Be Patient - Give us a reasonable time to correct the issue before you disclose the vulnerability.

We also expect you to comply with all applicable laws. You're responsible to pay any taxes associated with your bounties.
class-redirect.php                                                                                                                                                                                                                                             2606          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-redirect/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          <?php
/**
 * Jetpack Redirect package.
 *
 * @package  automattic/jetpack-redirect
 */

namespace Automattic\Jetpack;

/**
 * Class Redirect
 */
class Redirect {
	/**
	 * Constructor.
	 *
	 * Static-only class, so nothing here.
	 */
	private function __construct() {}

	/**
	 * Builds and returns an URL using the jetpack.com/redirect/ service
	 *
	 * If $source is a simple slug, it will be sent using the source query parameter. e.g. jetpack.com/redirect/?source=slug
	 *
	 * If $source is a full URL, starting with https://, it will be sent using the url query parameter. e.g. jetpack.com/redirect/?url=https://wordpress.com
	 *
	 * Note: if using full URL, query parameters and anchor must be passed in $args. Any querystring of url fragment in the URL will be discarded.
	 *
	 * @param string       $source The URL handler registered in the server or the full destination URL (starting with https://).
	 * @param array|string $args {
	 *    Optional. Additional arguments to build the url. This is not a complete list as any argument passed here will be sent to as a query parameter to the Redirect server. These parameters will not necessarily be passed over to the final destination URL. If you want to add a parameter to the final destination URL, use the `query` argument.
	 *
	 *    @type string  $site URL of the site; Default is current site.
	 *    @type string  $path Additional path to be appended to the URL.
	 *    @type string  $query Query parameters to be added to the final destination URL. should be in query string format (e.g. 'key=value&foo=bar').
	 *    @type string  $anchor Anchor to be added to the URL.
	 *    @type integer $u The user ID.
	 * }
	 *
	 * @return string The built URL
	 */
	public static function get_url( $source, $args = array() ) {

		$url         = 'https://jetpack.com/redirect/';
		$site_suffix = ( new Status() )->get_site_suffix();
		$args        = wp_parse_args( $args, array( 'site' => $site_suffix ) );

		$source_key = 'source';

		if ( \str_starts_with( $source, 'https://' ) ) {
			$source_key = 'url';
			$source_url = \wp_parse_url( $source );

			// discard any query and fragments.
			$source = 'https://' . $source_url['host'] . ( isset( $source_url['path'] ) ? $source_url['path'] : '' );
		}

		$to_be_added = array(
			$source_key => rawurlencode( $source ),
		);

		foreach ( $args as $arg_name => $arg_value ) {

			if ( empty( $arg_value ) ) {
				continue;
			}

			$to_be_added[ $arg_name ] = rawurlencode( $arg_value );

		}

		if ( ! empty( $to_be_added ) ) {
			$url = add_query_arg( $to_be_added, $url );
		}

		return $url;
	}
}
CHANGELOG.md                                                                                                                                                                                                                                                   6094          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-roles                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 # Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [2.0.0] - 2023-11-20
### Changed
- Updated required PHP version to >= 7.0. [#34192]

## [1.4.25] - 2023-09-19

- Minor internal updates.

## [1.4.24] - 2023-08-23
### Changed
- Updated package dependencies. [#32605]

## [1.4.23] - 2023-04-10
### Added
- Add Jetpack Autoloader package suggestion. [#29988]

## [1.4.22] - 2023-02-20
### Changed
- Minor internal updates.

## [1.4.21] - 2023-01-11
### Changed
- Updated package dependencies.

## [1.4.20] - 2022-12-19
### Changed
- Updated package dependencies.

## [1.4.19] - 2022-12-02
### Changed
- Updated package dependencies. [#27688]

## [1.4.18] - 2022-11-22
### Changed
- Updated package dependencies. [#27043]

## [1.4.17] - 2022-07-26
### Changed
- Updated package dependencies. [#25158]

## [1.4.16] - 2022-06-21
### Changed
- Renaming master to trunk.

## [1.4.15] - 2022-04-26
### Changed
- Updated package dependencies.

## [1.4.14] - 2022-01-25
### Changed
- Updated package dependencies.

## [1.4.13] - 2022-01-04
### Changed
- Switch to pcov for code coverage.
- Updated package dependencies

## [1.4.12] - 2021-12-14
### Changed
- Updated package dependencies.

## [1.4.11] - 2021-11-22
### Changed
- Updated package dependencies

## [1.4.10] - 2021-11-02
### Changed
- Set `convertDeprecationsToExceptions` true in PHPUnit config.
- Update PHPUnit configs to include just what needs coverage rather than include everything then try to exclude stuff that doesn't.

## [1.4.9] - 2021-10-13
### Changed
- Updated package dependencies.

## [1.4.8] - 2021-10-12
### Changed
- Updated package dependencies

## [1.4.7] - 2021-09-28
### Changed
- Updated package dependencies.

## [1.4.6] - 2021-08-30
### Changed
- Run composer update on test-php command instead of phpunit
- Tests: update PHPUnit polyfills dependency (yoast/phpunit-polyfills).

## [1.4.5] - 2021-05-25
### Changed
- Updated package dependencies.

## [1.4.4] - 2021-04-08
### Changed
- Packaging and build changes, no change to the package itself.

## [1.4.3] - 2021-03-30
### Added
- Composer alias for dev-master, to improve dependencies

### Changed
- Update package dependencies.

### Fixed
- Use `composer update` rather than `install` in scripts, as composer.lock isn't checked in.

## [1.4.2] - 2021-02-05

- CI: Make tests more generic

## [1.4.1] - 2021-01-20

- Add mirror-repo information to all current composer packages
- Monorepo: Reorganize all projects

## [1.4.0] - 2020-12-14

- Update dependency brain/monkey to v2.6.0
- Pin dependencies
- Packages: Update for PHP 8 testing

## [1.3.1] - 2020-10-28

- Updated PHPCS: Packages and Debugger

## [1.3.0] - 2020-08-13

- CI: Try collect js coverage
- Docker: Add package testing shortcut

## [1.2.0] - 2020-07-01

- Package Unit tests: update test file names to make sure they runs in Travis

## [1.1.0] - 2020-06-22

- PHPCS: Clean up the packages
- PHPCS Updates after WPCS 2.3

## [1.0.4] - 2019-11-08

- Packages: Use classmap instead of PSR-4

## [1.0.2] - 2019-10-28

- Packages: Add gitattributes files to all packages that need th…

## [1.0.1] - 2019-09-20

- Docs: Unify usage of @package phpdoc tags

## 1.0.0 - 2019-09-14

- Jetpack DNA: Introduce a Roles package

[2.0.0]: https://github.com/Automattic/jetpack-roles/compare/v1.4.25...v2.0.0
[1.4.25]: https://github.com/Automattic/jetpack-roles/compare/v1.4.24...v1.4.25
[1.4.24]: https://github.com/Automattic/jetpack-roles/compare/v1.4.23...v1.4.24
[1.4.23]: https://github.com/Automattic/jetpack-roles/compare/v1.4.22...v1.4.23
[1.4.22]: https://github.com/Automattic/jetpack-roles/compare/v1.4.21...v1.4.22
[1.4.21]: https://github.com/Automattic/jetpack-roles/compare/v1.4.20...v1.4.21
[1.4.20]: https://github.com/Automattic/jetpack-roles/compare/v1.4.19...v1.4.20
[1.4.19]: https://github.com/Automattic/jetpack-roles/compare/v1.4.18...v1.4.19
[1.4.18]: https://github.com/Automattic/jetpack-roles/compare/v1.4.17...v1.4.18
[1.4.17]: https://github.com/Automattic/jetpack-roles/compare/v1.4.16...v1.4.17
[1.4.16]: https://github.com/Automattic/jetpack-roles/compare/v1.4.15...v1.4.16
[1.4.15]: https://github.com/Automattic/jetpack-roles/compare/v1.4.14...v1.4.15
[1.4.14]: https://github.com/Automattic/jetpack-roles/compare/v1.4.13...v1.4.14
[1.4.13]: https://github.com/Automattic/jetpack-roles/compare/v1.4.12...v1.4.13
[1.4.12]: https://github.com/Automattic/jetpack-roles/compare/v1.4.11...v1.4.12
[1.4.11]: https://github.com/Automattic/jetpack-roles/compare/v1.4.10...v1.4.11
[1.4.10]: https://github.com/Automattic/jetpack-roles/compare/v1.4.9...v1.4.10
[1.4.9]: https://github.com/Automattic/jetpack-roles/compare/v1.4.8...v1.4.9
[1.4.8]: https://github.com/Automattic/jetpack-roles/compare/v1.4.7...v1.4.8
[1.4.7]: https://github.com/Automattic/jetpack-roles/compare/v1.4.6...v1.4.7
[1.4.6]: https://github.com/Automattic/jetpack-roles/compare/v1.4.5...v1.4.6
[1.4.5]: https://github.com/Automattic/jetpack-roles/compare/v1.4.4...v1.4.5
[1.4.4]: https://github.com/Automattic/jetpack-roles/compare/v1.4.3...v1.4.4
[1.4.3]: https://github.com/Automattic/jetpack-roles/compare/v1.4.2...v1.4.3
[1.4.2]: https://github.com/Automattic/jetpack-roles/compare/v1.4.1...v1.4.2
[1.4.1]: https://github.com/Automattic/jetpack-roles/compare/v1.4.0...v1.4.1
[1.4.0]: https://github.com/Automattic/jetpack-roles/compare/v1.3.1...v1.4.0
[1.3.1]: https://github.com/Automattic/jetpack-roles/compare/v1.3.0...v1.3.1
[1.3.0]: https://github.com/Automattic/jetpack-roles/compare/v1.2.0...v1.3.0
[1.2.0]: https://github.com/Automattic/jetpack-roles/compare/v1.1.0...v1.2.0
[1.1.0]: https://github.com/Automattic/jetpack-roles/compare/v1.0.4...v1.1.0
[1.0.4]: https://github.com/Automattic/jetpack-roles/compare/v1.0.2...v1.0.4
[1.0.2]: https://github.com/Automattic/jetpack-roles/compare/v1.0.1...v1.0.2
[1.0.1]: https://github.com/Automattic/jetpack-roles/compare/v1.0.0...v1.0.1
composer.json                                                                                                                                                                                                                                                  960           1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-roles                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 {
	"name": "automattic/jetpack-roles",
	"description": "Utilities, related with user roles and capabilities.",
	"type": "jetpack-library",
	"license": "GPL-2.0-or-later",
	"require": {
		"php": ">=7.0"
	},
	"require-dev": {
		"brain/monkey": "2.6.1",
		"yoast/phpunit-polyfills": "1.1.0",
		"automattic/jetpack-changelogger": "^4.0.0"
	},
	"suggest": {
		"automattic/jetpack-autoloader": "Allow for better interoperability with other plugins that use this package."
	},
	"autoload": {
		"classmap": [
			"src/"
		]
	},
	"scripts": {
		"phpunit": [
			"./vendor/phpunit/phpunit/phpunit --colors=always"
		],
		"test-php": [
			"@composer phpunit"
		]
	},
	"minimum-stability": "dev",
	"prefer-stable": true,
	"extra": {
		"autotagger": true,
		"mirror-repo": "Automattic/jetpack-roles",
		"changelogger": {
			"link-template": "https://github.com/Automattic/jetpack-roles/compare/v${old}...v${new}"
		},
		"branch-alias": {
			"dev-trunk": "2.0.x-dev"
		}
	}
}
LICENSE.txt                                                                                                                                                                                                                                                    18416         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-roles                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


===================================


GNU GENERAL PUBLIC LICENSE
   Version 2, June 1991

Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.

		Preamble

The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Lesser General Public License instead.)  You can apply it to
your programs, too.

When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it
in new free programs; and that you know you can do these things.

To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

We protect your rights with two steps: (1) copyright the software, and
(2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

The precise terms and conditions for copying, distribution and
modification follow.

GNU GENERAL PUBLIC LICENSE
TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

0. This License applies to any program or other work which contains
a notice placed by the copyright holder saying it may be distributed
under the terms of this General Public License.  The "Program", below,
refers to any such program or work, and a "work based on the Program"
means either the Program or any derivative work under copyright law:
that is to say, a work containing the Program or a portion of it,
either verbatim or with modifications and/or translated into another
language.  (Hereinafter, translation is included without limitation in
the term "modification".)  Each licensee is addressed as "you".

Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running the Program is not restricted, and the output from the Program
is covered only if its contents constitute a work based on the
Program (independent of having been made by running the Program).
Whether that is true depends on what the Program does.

1. You may copy and distribute verbatim copies of the Program's
source code as you receive it, in any medium, provided that you
conspicuously and appropriately publish on each copy an appropriate
copyright notice and disclaimer of warranty; keep intact all the
notices that refer to this License and to the absence of any warranty;
and give any other recipients of the Program a copy of this License
along with the Program.

You may charge a fee for the physical act of transferring a copy, and
you may at your option offer warranty protection in exchange for a fee.

2. You may modify your copy or copies of the Program or any portion
of it, thus forming a work based on the Program, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

a) You must cause the modified files to carry prominent notices
stating that you changed the files and the date of any change.

b) You must cause any work that you distribute or publish, that in
whole or in part contains or is derived from the Program or any
part thereof, to be licensed as a whole at no charge to all third
parties under the terms of this License.

c) If the modified program normally reads commands interactively
when run, you must cause it, when started running for such
interactive use in the most ordinary way, to print or display an
announcement including an appropriate copyright notice and a
notice that there is no warranty (or else, saying that you provide
a warranty) and that users may redistribute the program under
these conditions, and telling the user how to view a copy of this
License.  (Exception: if the Program itself is interactive but
does not normally print such an announcement, your work based on
the Program is not required to print an announcement.)

These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Program,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Program, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Program.

In addition, mere aggregation of another work not based on the Program
with the Program (or with a work based on the Program) on a volume of
a storage or distribution medium does not bring the other work under
the scope of this License.

3. You may copy and distribute the Program (or a work based on it,
under Section 2) in object code or executable form under the terms of
Sections 1 and 2 above provided that you also do one of the following:

a) Accompany it with the complete corresponding machine-readable
source code, which must be distributed under the terms of Sections
1 and 2 above on a medium customarily used for software interchange; or,

b) Accompany it with a written offer, valid for at least three
years, to give any third party, for a charge no more than your
cost of physically performing source distribution, a complete
machine-readable copy of the corresponding source code, to be
distributed under the terms of Sections 1 and 2 above on a medium
customarily used for software interchange; or,

c) Accompany it with the information you received as to the offer
to distribute corresponding source code.  (This alternative is
allowed only for noncommercial distribution and only if you
received the program in object code or executable form with such
an offer, in accord with Subsection b above.)

The source code for a work means the preferred form of the work for
making modifications to it.  For an executable work, complete source
code means all the source code for all modules it contains, plus any
associated interface definition files, plus the scripts used to
control compilation and installation of the executable.  However, as a
special exception, the source code distributed need not include
anything that is normally distributed (in either source or binary
form) with the major components (compiler, kernel, and so on) of the
operating system on which the executable runs, unless that component
itself accompanies the executable.

If distribution of executable or object code is made by offering
access to copy from a designated place, then offering equivalent
access to copy the source code from the same place counts as
distribution of the source code, even though third parties are not
compelled to copy the source along with the object code.

4. You may not copy, modify, sublicense, or distribute the Program
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense or distribute the Program is
void, and will automatically terminate your rights under this License.
However, parties who have received copies, or rights, from you under
this License will not have their licenses terminated so long as such
parties remain in full compliance.

5. You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Program or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Program (or any work based on the
Program), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying
the Program or works based on it.

6. Each time you redistribute the Program (or any work based on the
Program), the recipient automatically receives a license from the
original licensor to copy, distribute or modify the Program subject to
these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties to
this License.

7. If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Program at all.  For example, if a patent
license would not permit royalty-free redistribution of the Program by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Program.

If any portion of this section is held invalid or unenforceable under
any particular circumstance, the balance of the section is intended to
apply and the section as a whole is intended to apply in other
circumstances.

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

8. If the distribution and/or use of the Program is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Program under this License
may add an explicit geographical distribution limitation excluding
those countries, so that distribution is permitted only in or among
countries not thus excluded.  In such case, this License incorporates
the limitation as if written in the body of this License.

9. The Free Software Foundation may publish revised and/or new versions
of the General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

Each version is given a distinguishing version number.  If the Program
specifies a version number of this License which applies to it and "any
later version", you have the option of following the terms and conditions
either of that version or of any later version published by the Free
Software Foundation.  If the Program does not specify a version number of
this License, you may choose any version ever published by the Free Software
Foundation.

10. If you wish to incorporate parts of the Program into other free
programs whose distribution conditions are different, write to the author
to ask for permission.  For software which is copyrighted by the Free
Software Foundation, write to the Free Software Foundation; we sometimes
make exceptions for this.  Our decision will be guided by the two goals
of preserving the free status of all derivatives of our free software and
of promoting the sharing and reuse of software generally.

		NO WARRANTY

11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
REPAIR OR CORRECTION.

12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.

 END OF TERMS AND CONDITIONS

How to Apply These Terms to Your New Programs

If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

<one line to give the program's name and a brief idea of what it does.>
Copyright (C) <year>  <name of author>

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

Also add information on how to contact you by electronic and paper mail.

If the program is interactive, make it output a short notice like this
when it starts in an interactive mode:

Gnomovision version 69, Copyright (C) year name of author
Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
This is free software, and you are welcome to redistribute it
under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, the commands you use may
be called something other than `show w' and `show c'; they could even be
mouse-clicks or menu items--whatever suits your program.

You should also get your employer (if you work as a programmer) or your
school, if any, to sign a "copyright disclaimer" for the program, if
necessary.  Here is a sample; alter the names:

Yoyodyne, Inc., hereby disclaims all copyright interest in the program
`Gnomovision' (which makes passes at compilers) written by James Hacker.

<signature of Ty Coon>, 1 April 1989
Ty Coon, President of Vice

This General Public License does not permit incorporating your program into
proprietary programs.  If your program is a subroutine library, you may
consider it more useful to permit linking proprietary applications with the
library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.
README.md                                                                                                                                                                                                                                                      1367          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-roles                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 # Jetpack Roles

A user roles class for Jetpack.

Contains utilities for translating user roles to capabilities and vice versa.

### Usage

Get the role of the current user:

```php
use Automattic\Jetpack\Roles;

$roles = new Roles();
$current_user_role = $roles->translate_current_user_to_role();
```

Get the role of a particular user:

```php
use Automattic\Jetpack\Roles;

$roles = new Roles();
$user  = get_user_by( 'contact@yourjetpack.blog' );
$user_role = $roles->translate_user_to_role( $user );
```

Get the capability we require for a role:

```php
use Automattic\Jetpack\Roles;

$roles = new Roles();
$capability = $roles->translate_role_to_cap( 'administrator' );
```

## Using this package in your WordPress plugin

If you plan on using this package in your WordPress plugin, we would recommend that you use [Jetpack Autoloader](https://packagist.org/packages/automattic/jetpack-autoloader) as your autoloader. This will allow for maximum interoperability with other plugins that use this package as well.

## Security

Need to report a security vulnerability? Go to [https://automattic.com/security/](https://automattic.com/security/) or directly to our security bug bounty site [https://hackerone.com/automattic](https://hackerone.com/automattic).

## License

jetpack-roles is licensed under [GNU General Public License v2 (or later)](./LICENSE.txt)
SECURITY.md                                                                                                                                                                                                                                                    2506          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-roles                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 # Security Policy

Full details of the Automattic Security Policy can be found on [automattic.com](https://automattic.com/security/).

## Supported Versions

Generally, only the latest version of Jetpack and its associated plugins have continued support. If a critical vulnerability is found in the current version of a plugin, we may opt to backport any patches to previous versions. 

## Reporting a Vulnerability

Our HackerOne program covers the below plugin software, as well as a variety of related projects and infrastructure:

* [Jetpack](https://jetpack.com/)
* Jetpack Backup
* Jetpack Boost
* Jetpack CRM
* Jetpack Protect
* Jetpack Search
* Jetpack Social
* Jetpack VideoPress

**For responsible disclosure of security issues and to be eligible for our bug bounty program, please submit your report via the [HackerOne](https://hackerone.com/automattic) portal.**

Our most critical targets are:

* Jetpack and the Jetpack composer packages (all within this repo)
* Jetpack.com -- the primary marketing site.
* cloud.jetpack.com -- a management site.
* wordpress.com -- the shared management site for both Jetpack and WordPress.com sites.

For more targets, see the `In Scope` section on [HackerOne](https://hackerone.com/automattic).

_Please note that the **WordPress software is a separate entity** from Automattic. Please report vulnerabilities for WordPress through [the WordPress Foundation's HackerOne page](https://hackerone.com/wordpress)._

## Guidelines

We're committed to working with security researchers to resolve the vulnerabilities they discover. You can help us by following these guidelines:

*   Follow [HackerOne's disclosure guidelines](https://www.hackerone.com/disclosure-guidelines).
*   Pen-testing Production:
    *   Please **setup a local environment** instead whenever possible. Most of our code is open source (see above).
    *   If that's not possible, **limit any data access/modification** to the bare minimum necessary to reproduce a PoC.
    *   **_Don't_ automate form submissions!** That's very annoying for us, because it adds extra work for the volunteers who manage those systems, and reduces the signal/noise ratio in our communication channels.
    *   To be eligible for a bounty, all of these guidelines must be followed.
*   Be Patient - Give us a reasonable time to correct the issue before you disclose the vulnerability.

We also expect you to comply with all applicable laws. You're responsible to pay any taxes associated with your bounties.
class-roles.php                                                                                                                                                                                                                                                1863          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-roles/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             <?php
/**
 * A user roles class for Jetpack.
 *
 * @package automattic/jetpack-roles
 */

namespace Automattic\Jetpack;

/**
 * Class Automattic\Jetpack\Roles
 *
 * Contains utilities for translating user roles to capabilities and vice versa.
 */
class Roles {
	/**
	 * Map of roles we care about, and their corresponding minimum capabilities.
	 *
	 * @access protected
	 *
	 * @var array
	 */
	protected $capability_translations = array(
		'administrator' => 'manage_options',
		'editor'        => 'edit_others_posts',
		'author'        => 'publish_posts',
		'contributor'   => 'edit_posts',
		'subscriber'    => 'read',
	);

	/**
	 * Get the role of the current user.
	 *
	 * @access public
	 *
	 * @return string|boolean Current user's role, false if not enough capabilities for any of the roles.
	 */
	public function translate_current_user_to_role() {
		foreach ( $this->capability_translations as $role => $cap ) {
			if ( current_user_can( $role ) || current_user_can( $cap ) ) {
				return $role;
			}
		}

		return false;
	}

	/**
	 * Get the role of a particular user.
	 *
	 * @access public
	 *
	 * @param \WP_User $user User object.
	 * @return string|boolean User's role, false if not enough capabilities for any of the roles.
	 */
	public function translate_user_to_role( $user ) {
		foreach ( $this->capability_translations as $role => $cap ) {
			if ( user_can( $user, $role ) || user_can( $user, $cap ) ) {
				return $role;
			}
		}

		return false;
	}

	/**
	 * Get the minimum capability for a role.
	 *
	 * @access public
	 *
	 * @param string $role Role name.
	 * @return string|boolean Capability, false if role isn't mapped to any capabilities.
	 */
	public function translate_role_to_cap( $role ) {
		if ( ! isset( $this->capability_translations[ $role ] ) ) {
			return false;
		}

		return $this->capability_translations[ $role ];
	}
}
CHANGELOG.md                                                                                                                                                                                                                                                   13054         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                # Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [2.1.0] - 2024-01-18
### Added
- Add hosting provider check. [#34864]

## [2.0.2] - 2023-12-03
### Fixed
- Module active checks should always be true on WordPress.com simple sites. [#34248]

## [2.0.1] - 2023-11-21
### Changed
- Added a note of non-usage of PHP8+ functions yet. [#34137]
- Replaced usage of substr() with str_starts_with() and str_ends_with(). [#34207]

## [2.0.0] - 2023-11-20
### Changed
- Updated required PHP version to >= 7.0. [#34192]

## [1.19.0] - 2023-11-13
### Added
- Added Host::get_source_query() to return the 'source' query param from the current URL. [#33984]

## [1.18.5] - 2023-09-25
### Changed
- Add 127.0.0.1 into the list of known local domains. [#32898]
- WP.com Compatibility: Abort out early checking if Protect is active. WP.com's protection is not site option based. [#33196]

## [1.18.4] - 2023-09-19

- Minor internal updates.

## [1.18.3] - 2023-09-11
### Changed
- General: remove backwards-compatibility function checks now that the package supports WP 6.2. [#32772]

## [1.18.2] - 2023-09-04
### Fixed
- Exclude domains starting with live from known Pantheon staging domains [#32789]

## [1.18.1] - 2023-08-23
### Changed
- Updated package dependencies. [#32605]

## [1.18.0] - 2023-07-18
### Added
- Transferred 'get_calypso_env()' method from Jetpack plugin. [#31906]

## [1.17.2] - 2023-06-19
### Changed
- Use Plans package to detect feature support. [#31213]

## [1.17.1] - 2023-05-11
### Changed
- PHP 8.1 compatibility updates [#30517]

## [1.17.0] - 2023-04-17
### Changed
- When Jetpack is available, `Modules::get()` no longer translates `module_tags`. Use Jetpack's `jetpack_get_module_i18n_tag()` function if you need translations. [#30067]

## [1.16.4] - 2023-04-10
### Added
- Add Jetpack Autoloader package suggestion. [#29988]

## [1.16.3] - 2023-03-28
### Changed
- Move brute force protection into WAF package. [#28401]

## [1.16.2] - 2023-02-20
### Changed
- Minor internal updates.

## [1.16.1] - 2023-01-23
### Added
- Add new filters for the latest status methods [#28328]

## [1.16.0] - 2023-01-16
### Added
- Add 2 new methods to detect whether a site is private or not. [#28322]

## [1.15.4] - 2023-01-11
### Changed
- Modules: Allow for deactivating multiple plugins when activating a module. [#28181]

## [1.15.3] - 2022-12-19
### Changed
- Updated package dependencies.

## [1.15.2] - 2022-12-02
### Changed
- Updated package dependencies. [#27688]

## [1.15.1] - 2022-11-22
### Changed
- Updated package dependencies. [#27043]

## [1.15.0] - 2022-11-07
### Added
- WordPress.com: add checks for Simple or either Simple/WoA. [#27278]

## [1.14.3] - 2022-07-26
### Changed
- Updated package dependencies. [#25158]

## [1.14.2] - 2022-07-19
### Changed
- Update logic in `is_woa_site` function for host changes [#25067]

## [1.14.1] - 2022-06-21
### Changed
- Renaming master to trunk.

## [1.14.0] - 2022-06-14
### Fixed
- Moved the connection_url_redirect action handling to the connection package. [#24529]

## [1.13.6] - 2022-05-24
### Added
- Allow plugins to filter the list of available modules. Only activate and consider active modules that are available [#24454]

## [1.13.5] - 2022-05-20
### Changed
- Modules: Make activate() method Jetpack plugin agnostic. Allowing standalone plugins to use it without Jetpack.

## [1.13.4] - 2022-05-19
### Added
- PHPCS updates. [#24418]

## [1.13.3] - 2022-05-10

## [1.13.2] - 2022-04-26
### Changed
- Updated package dependencies.

## [1.13.1] - 2022-04-19
### Changed
- PHPCS: Fix `WordPress.Security.ValidatedSanitizedInput`

## [1.13.0] - 2022-04-05
### Added
- Created Modules and File modules for managing those resources

## [1.12.0] - 2022-03-02
### Added
- Cache return values (per blog) from various status methods.

## [1.11.2] - 2022-02-28
### Fixed
- Re-doing 1.11.1 to fixup a bad release.

## [1.11.1] - 2022-02-28
### Fixed
- Remove trailing semicolor form site suffix.

## [1.11.0] - 2022-02-22
### Added
- Add methods to distinguish Newspack and VIP sites.

## [1.10.0] - 2022-01-25
### Added
- Added Visitor class for status regarding the site visitor.

## [1.9.5] - 2022-01-04
### Changed
- Switch to pcov for code coverage.
- Updated package dependencies

## [1.9.4] - 2021-12-14
### Changed
- Updated package dependencies.

## [1.9.3] - 2021-11-22
### Changed
- Updated package dependencies

## [1.9.2] - 2021-11-16
### Changed
- Add a function_exists check before calling wp_get_environment_type

## [1.9.1] - 2021-11-02
### Changed
- Set `convertDeprecationsToExceptions` true in PHPUnit config.
- Update PHPUnit configs to include just what needs coverage rather than include everything then try to exclude stuff that doesn't.

## [1.9.0] - 2021-10-26
### Added
- Added Host class for reporting known hosting environment information.

## [1.8.4] - 2021-10-13
### Changed
- Updated package dependencies.

## [1.8.3] - 2021-10-12
### Changed
- Updated package dependencies

## [1.8.2] - 2021-09-28
### Changed
- Updated package dependencies.

## [1.8.1] - 2021-08-30
### Changed
- Run composer update on test-php command instead of phpunit
- Tests: update PHPUnit polyfills dependency (yoast/phpunit-polyfills).
- update annotations versions

## [1.8.0] - 2021-06-15
### Changed
- Update callback to Jetpack to new Identity_Crisis class.

## [1.7.6] - 2021-05-25
### Changed
- Updated package dependencies.

## [1.7.5] - 2021-04-27
### Deprecated
- Deprecates is_no_user_testing_mode

## [1.7.4] - 2021-04-08
### Changed
- Packaging and build changes, no change to the package itself.

## [1.7.3] - 2021-03-30
### Added
- Composer alias for dev-master, to improve dependencies

### Changed
- Update package dependencies.

### Fixed
- Use `composer update` rather than `install` in scripts, as composer.lock isn't checked in.

## [1.7.2] - 2021-02-05

- CI: Make tests more generic

## [1.7.1] - 2021-01-20

- Add mirror-repo information to all current composer packages
- Monorepo: Reorganize all projects

## [1.7.0] - 2020-12-14

- Update dependency brain/monkey to v2.6.0
- Pin dependencies
- Packages: Update for PHP 8 testing

## [1.6.0] - 2020-11-23

- Status: Introduce get_site_suffix method
- Status: Fix test failure
- Status: Improve the staging site detection
- General: update minimum required version to WordPress 5.5
- Add the no_user_testing mode
- Status: Add a couple of test cases for staging site detection
- Update dependency brain/monkey to v2.5.0
- Updated PHPCS: Packages and Debugger

## [1.5.0] - 2020-10-13

- Also use Core `wp_get_environment_type` for local

## [1.4.0] - 2020-08-13

- CI: Try collect js coverage

## [1.3.0] - 2020-07-28

- Core Compat: Site Environment

## [1.2.0] - 2020-06-22

- PHPCS: Clean up the packages
- Staging Sites: add newspack staging to the list of known providers

## [1.1.1] - 2020-01-27

- Pin dependency brain/monkey to 2.4.0

## [1.1.0] - 2020-01-14

- Packages: Various improvements for wp.com or self-contained consumers

## [1.0.4] - 2019-11-08

- Packages: Use classmap instead of PSR-4

## [1.0.3] - 2019-10-28

- Packages: Add gitattributes files to all packages that need th…

## [1.0.2] - 2019-10-23

- Use spread operator instead of func_get_args

## [1.0.1] - 2019-09-20

- Docs: Unify usage of @package phpdoc tags

## 1.0.0 - 2019-09-14

- Packages: Introduce a status package

[2.1.0]: https://github.com/Automattic/jetpack-status/compare/v2.0.2...v2.1.0
[2.0.2]: https://github.com/Automattic/jetpack-status/compare/v2.0.1...v2.0.2
[2.0.1]: https://github.com/Automattic/jetpack-status/compare/v2.0.0...v2.0.1
[2.0.0]: https://github.com/Automattic/jetpack-status/compare/v1.19.0...v2.0.0
[1.19.0]: https://github.com/Automattic/jetpack-status/compare/v1.18.5...v1.19.0
[1.18.5]: https://github.com/Automattic/jetpack-status/compare/v1.18.4...v1.18.5
[1.18.4]: https://github.com/Automattic/jetpack-status/compare/v1.18.3...v1.18.4
[1.18.3]: https://github.com/Automattic/jetpack-status/compare/v1.18.2...v1.18.3
[1.18.2]: https://github.com/Automattic/jetpack-status/compare/v1.18.1...v1.18.2
[1.18.1]: https://github.com/Automattic/jetpack-status/compare/v1.18.0...v1.18.1
[1.18.0]: https://github.com/Automattic/jetpack-status/compare/v1.17.2...v1.18.0
[1.17.2]: https://github.com/Automattic/jetpack-status/compare/v1.17.1...v1.17.2
[1.17.1]: https://github.com/Automattic/jetpack-status/compare/v1.17.0...v1.17.1
[1.17.0]: https://github.com/Automattic/jetpack-status/compare/v1.16.4...v1.17.0
[1.16.4]: https://github.com/Automattic/jetpack-status/compare/v1.16.3...v1.16.4
[1.16.3]: https://github.com/Automattic/jetpack-status/compare/v1.16.2...v1.16.3
[1.16.2]: https://github.com/Automattic/jetpack-status/compare/v1.16.1...v1.16.2
[1.16.1]: https://github.com/Automattic/jetpack-status/compare/v1.16.0...v1.16.1
[1.16.0]: https://github.com/Automattic/jetpack-status/compare/v1.15.4...v1.16.0
[1.15.4]: https://github.com/Automattic/jetpack-status/compare/v1.15.3...v1.15.4
[1.15.3]: https://github.com/Automattic/jetpack-status/compare/v1.15.2...v1.15.3
[1.15.2]: https://github.com/Automattic/jetpack-status/compare/v1.15.1...v1.15.2
[1.15.1]: https://github.com/Automattic/jetpack-status/compare/v1.15.0...v1.15.1
[1.15.0]: https://github.com/Automattic/jetpack-status/compare/v1.14.3...v1.15.0
[1.14.3]: https://github.com/Automattic/jetpack-status/compare/v1.14.2...v1.14.3
[1.14.2]: https://github.com/Automattic/jetpack-status/compare/v1.14.1...v1.14.2
[1.14.1]: https://github.com/Automattic/jetpack-status/compare/v1.14.0...v1.14.1
[1.14.0]: https://github.com/Automattic/jetpack-status/compare/v1.13.6...v1.14.0
[1.13.6]: https://github.com/Automattic/jetpack-status/compare/v1.13.5...v1.13.6
[1.13.5]: https://github.com/Automattic/jetpack-status/compare/v1.13.4...v1.13.5
[1.13.4]: https://github.com/Automattic/jetpack-status/compare/v1.13.3...v1.13.4
[1.13.3]: https://github.com/Automattic/jetpack-status/compare/v1.13.2...v1.13.3
[1.13.2]: https://github.com/Automattic/jetpack-status/compare/v1.13.1...v1.13.2
[1.13.1]: https://github.com/Automattic/jetpack-status/compare/v1.13.0...v1.13.1
[1.13.0]: https://github.com/Automattic/jetpack-status/compare/v1.12.0...v1.13.0
[1.12.0]: https://github.com/Automattic/jetpack-status/compare/v1.11.2...v1.12.0
[1.11.2]: https://github.com/Automattic/jetpack-status/compare/v1.11.1...v1.11.2
[1.11.1]: https://github.com/Automattic/jetpack-status/compare/v1.11.0...v1.11.1
[1.11.0]: https://github.com/Automattic/jetpack-status/compare/v1.10.0...v1.11.0
[1.10.0]: https://github.com/Automattic/jetpack-status/compare/v1.9.5...v1.10.0
[1.9.5]: https://github.com/Automattic/jetpack-status/compare/v1.9.4...v1.9.5
[1.9.4]: https://github.com/Automattic/jetpack-status/compare/v1.9.3...v1.9.4
[1.9.3]: https://github.com/Automattic/jetpack-status/compare/v1.9.2...v1.9.3
[1.9.2]: https://github.com/Automattic/jetpack-status/compare/v1.9.1...v1.9.2
[1.9.1]: https://github.com/Automattic/jetpack-status/compare/v1.9.0...v1.9.1
[1.9.0]: https://github.com/Automattic/jetpack-status/compare/v1.8.4...v1.9.0
[1.8.4]: https://github.com/Automattic/jetpack-status/compare/v1.8.3...v1.8.4
[1.8.3]: https://github.com/Automattic/jetpack-status/compare/v1.8.2...v1.8.3
[1.8.2]: https://github.com/Automattic/jetpack-status/compare/v1.8.1...v1.8.2
[1.8.1]: https://github.com/Automattic/jetpack-status/compare/v1.8.0...v1.8.1
[1.8.0]: https://github.com/Automattic/jetpack-status/compare/v1.7.6...v1.8.0
[1.7.6]: https://github.com/Automattic/jetpack-status/compare/v1.7.5...v1.7.6
[1.7.5]: https://github.com/Automattic/jetpack-status/compare/v1.7.4...v1.7.5
[1.7.4]: https://github.com/Automattic/jetpack-status/compare/v1.7.3...v1.7.4
[1.7.3]: https://github.com/Automattic/jetpack-status/compare/v1.7.2...v1.7.3
[1.7.2]: https://github.com/Automattic/jetpack-status/compare/v1.7.1...v1.7.2
[1.7.1]: https://github.com/Automattic/jetpack-status/compare/v1.7.0...v1.7.1
[1.7.0]: https://github.com/Automattic/jetpack-status/compare/v1.6.0...v1.7.0
[1.6.0]: https://github.com/Automattic/jetpack-status/compare/v1.5.0...v1.6.0
[1.5.0]: https://github.com/Automattic/jetpack-status/compare/v1.4.0...v1.5.0
[1.4.0]: https://github.com/Automattic/jetpack-status/compare/v1.3.0...v1.4.0
[1.3.0]: https://github.com/Automattic/jetpack-status/compare/v1.2.0...v1.3.0
[1.2.0]: https://github.com/Automattic/jetpack-status/compare/v1.1.1...v1.2.0
[1.1.1]: https://github.com/Automattic/jetpack-status/compare/v1.1.0...v1.1.1
[1.1.0]: https://github.com/Automattic/jetpack-status/compare/v1.0.4...v1.1.0
[1.0.4]: https://github.com/Automattic/jetpack-status/compare/v1.0.3...v1.0.4
[1.0.3]: https://github.com/Automattic/jetpack-status/compare/v1.0.2...v1.0.3
[1.0.2]: https://github.com/Automattic/jetpack-status/compare/v1.0.1...v1.0.2
[1.0.1]: https://github.com/Automattic/jetpack-status/compare/v1.0.0...v1.0.1
composer.json                                                                                                                                                                                                                                                  1078          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                {
	"name": "automattic/jetpack-status",
	"description": "Used to retrieve information about the current status of Jetpack and the site overall.",
	"type": "jetpack-library",
	"license": "GPL-2.0-or-later",
	"require": {
		"php": ">=7.0",
		"automattic/jetpack-constants": "^2.0.0"
	},
	"require-dev": {
		"brain/monkey": "2.6.1",
		"yoast/phpunit-polyfills": "1.1.0",
		"automattic/jetpack-changelogger": "^4.0.5",
		"automattic/jetpack-ip": "^0.2.1"
	},
	"suggest": {
		"automattic/jetpack-autoloader": "Allow for better interoperability with other plugins that use this package."
	},
	"autoload": {
		"classmap": [
			"src/"
		]
	},
	"scripts": {
		"phpunit": [
			"./vendor/phpunit/phpunit/phpunit --colors=always"
		],
		"test-php": [
			"@composer phpunit"
		]
	},
	"minimum-stability": "dev",
	"prefer-stable": true,
	"extra": {
		"autotagger": true,
		"mirror-repo": "Automattic/jetpack-status",
		"changelogger": {
			"link-template": "https://github.com/Automattic/jetpack-status/compare/v${old}...v${new}"
		},
		"branch-alias": {
			"dev-trunk": "2.1.x-dev"
		}
	}
}
LICENSE.txt                                                                                                                                                                                                                                                    18416         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


===================================


GNU GENERAL PUBLIC LICENSE
   Version 2, June 1991

Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.

		Preamble

The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Lesser General Public License instead.)  You can apply it to
your programs, too.

When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it
in new free programs; and that you know you can do these things.

To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

We protect your rights with two steps: (1) copyright the software, and
(2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

The precise terms and conditions for copying, distribution and
modification follow.

GNU GENERAL PUBLIC LICENSE
TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

0. This License applies to any program or other work which contains
a notice placed by the copyright holder saying it may be distributed
under the terms of this General Public License.  The "Program", below,
refers to any such program or work, and a "work based on the Program"
means either the Program or any derivative work under copyright law:
that is to say, a work containing the Program or a portion of it,
either verbatim or with modifications and/or translated into another
language.  (Hereinafter, translation is included without limitation in
the term "modification".)  Each licensee is addressed as "you".

Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running the Program is not restricted, and the output from the Program
is covered only if its contents constitute a work based on the
Program (independent of having been made by running the Program).
Whether that is true depends on what the Program does.

1. You may copy and distribute verbatim copies of the Program's
source code as you receive it, in any medium, provided that you
conspicuously and appropriately publish on each copy an appropriate
copyright notice and disclaimer of warranty; keep intact all the
notices that refer to this License and to the absence of any warranty;
and give any other recipients of the Program a copy of this License
along with the Program.

You may charge a fee for the physical act of transferring a copy, and
you may at your option offer warranty protection in exchange for a fee.

2. You may modify your copy or copies of the Program or any portion
of it, thus forming a work based on the Program, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

a) You must cause the modified files to carry prominent notices
stating that you changed the files and the date of any change.

b) You must cause any work that you distribute or publish, that in
whole or in part contains or is derived from the Program or any
part thereof, to be licensed as a whole at no charge to all third
parties under the terms of this License.

c) If the modified program normally reads commands interactively
when run, you must cause it, when started running for such
interactive use in the most ordinary way, to print or display an
announcement including an appropriate copyright notice and a
notice that there is no warranty (or else, saying that you provide
a warranty) and that users may redistribute the program under
these conditions, and telling the user how to view a copy of this
License.  (Exception: if the Program itself is interactive but
does not normally print such an announcement, your work based on
the Program is not required to print an announcement.)

These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Program,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Program, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Program.

In addition, mere aggregation of another work not based on the Program
with the Program (or with a work based on the Program) on a volume of
a storage or distribution medium does not bring the other work under
the scope of this License.

3. You may copy and distribute the Program (or a work based on it,
under Section 2) in object code or executable form under the terms of
Sections 1 and 2 above provided that you also do one of the following:

a) Accompany it with the complete corresponding machine-readable
source code, which must be distributed under the terms of Sections
1 and 2 above on a medium customarily used for software interchange; or,

b) Accompany it with a written offer, valid for at least three
years, to give any third party, for a charge no more than your
cost of physically performing source distribution, a complete
machine-readable copy of the corresponding source code, to be
distributed under the terms of Sections 1 and 2 above on a medium
customarily used for software interchange; or,

c) Accompany it with the information you received as to the offer
to distribute corresponding source code.  (This alternative is
allowed only for noncommercial distribution and only if you
received the program in object code or executable form with such
an offer, in accord with Subsection b above.)

The source code for a work means the preferred form of the work for
making modifications to it.  For an executable work, complete source
code means all the source code for all modules it contains, plus any
associated interface definition files, plus the scripts used to
control compilation and installation of the executable.  However, as a
special exception, the source code distributed need not include
anything that is normally distributed (in either source or binary
form) with the major components (compiler, kernel, and so on) of the
operating system on which the executable runs, unless that component
itself accompanies the executable.

If distribution of executable or object code is made by offering
access to copy from a designated place, then offering equivalent
access to copy the source code from the same place counts as
distribution of the source code, even though third parties are not
compelled to copy the source along with the object code.

4. You may not copy, modify, sublicense, or distribute the Program
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense or distribute the Program is
void, and will automatically terminate your rights under this License.
However, parties who have received copies, or rights, from you under
this License will not have their licenses terminated so long as such
parties remain in full compliance.

5. You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Program or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Program (or any work based on the
Program), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying
the Program or works based on it.

6. Each time you redistribute the Program (or any work based on the
Program), the recipient automatically receives a license from the
original licensor to copy, distribute or modify the Program subject to
these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties to
this License.

7. If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Program at all.  For example, if a patent
license would not permit royalty-free redistribution of the Program by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Program.

If any portion of this section is held invalid or unenforceable under
any particular circumstance, the balance of the section is intended to
apply and the section as a whole is intended to apply in other
circumstances.

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

8. If the distribution and/or use of the Program is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Program under this License
may add an explicit geographical distribution limitation excluding
those countries, so that distribution is permitted only in or among
countries not thus excluded.  In such case, this License incorporates
the limitation as if written in the body of this License.

9. The Free Software Foundation may publish revised and/or new versions
of the General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

Each version is given a distinguishing version number.  If the Program
specifies a version number of this License which applies to it and "any
later version", you have the option of following the terms and conditions
either of that version or of any later version published by the Free
Software Foundation.  If the Program does not specify a version number of
this License, you may choose any version ever published by the Free Software
Foundation.

10. If you wish to incorporate parts of the Program into other free
programs whose distribution conditions are different, write to the author
to ask for permission.  For software which is copyrighted by the Free
Software Foundation, write to the Free Software Foundation; we sometimes
make exceptions for this.  Our decision will be guided by the two goals
of preserving the free status of all derivatives of our free software and
of promoting the sharing and reuse of software generally.

		NO WARRANTY

11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
REPAIR OR CORRECTION.

12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.

 END OF TERMS AND CONDITIONS

How to Apply These Terms to Your New Programs

If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

<one line to give the program's name and a brief idea of what it does.>
Copyright (C) <year>  <name of author>

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

Also add information on how to contact you by electronic and paper mail.

If the program is interactive, make it output a short notice like this
when it starts in an interactive mode:

Gnomovision version 69, Copyright (C) year name of author
Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
This is free software, and you are welcome to redistribute it
under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, the commands you use may
be called something other than `show w' and `show c'; they could even be
mouse-clicks or menu items--whatever suits your program.

You should also get your employer (if you work as a programmer) or your
school, if any, to sign a "copyright disclaimer" for the program, if
necessary.  Here is a sample; alter the names:

Yoyodyne, Inc., hereby disclaims all copyright interest in the program
`Gnomovision' (which makes passes at compilers) written by James Hacker.

<signature of Ty Coon>, 1 April 1989
Ty Coon, President of Vice

This General Public License does not permit incorporating your program into
proprietary programs.  If your program is a subroutine library, you may
consider it more useful to permit linking proprietary applications with the
library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.
README.md                                                                                                                                                                                                                                                      1343          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                # Jetpack Status

A status class for Jetpack.

Used to retrieve information about the current status of Jetpack and the site overall.

### Usage

Find out whether the site is in offline mode:

```php
use Automattic\Jetpack\Status;

$status = new Status();
$is_offline_mode = $status->is_offline_mode();
```

Find out whether this is a system with multiple networks:

```php
use Automattic\Jetpack\Status;

$status = new Status();
$is_multi_network = $status->is_multi_network();
```

Find out whether this site is a single user site:

```php
use Automattic\Jetpack\Status;

$status = new Status();
$is_single_user_site = $status->is_single_user_site();
```
## Using this package in your WordPress plugin

If you plan on using this package in your WordPress plugin, we would recommend that you use [Jetpack Autoloader](https://packagist.org/packages/automattic/jetpack-autoloader) as your autoloader. This will allow for maximum interoperability with other plugins that use this package as well.

## Security

Need to report a security vulnerability? Go to [https://automattic.com/security/](https://automattic.com/security/) or directly to our security bug bounty site [https://hackerone.com/automattic](https://hackerone.com/automattic).

## License

jetpack-status is licensed under [GNU General Public License v2 (or later)](./LICENSE.txt)
SECURITY.md                                                                                                                                                                                                                                                    2506          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                # Security Policy

Full details of the Automattic Security Policy can be found on [automattic.com](https://automattic.com/security/).

## Supported Versions

Generally, only the latest version of Jetpack and its associated plugins have continued support. If a critical vulnerability is found in the current version of a plugin, we may opt to backport any patches to previous versions. 

## Reporting a Vulnerability

Our HackerOne program covers the below plugin software, as well as a variety of related projects and infrastructure:

* [Jetpack](https://jetpack.com/)
* Jetpack Backup
* Jetpack Boost
* Jetpack CRM
* Jetpack Protect
* Jetpack Search
* Jetpack Social
* Jetpack VideoPress

**For responsible disclosure of security issues and to be eligible for our bug bounty program, please submit your report via the [HackerOne](https://hackerone.com/automattic) portal.**

Our most critical targets are:

* Jetpack and the Jetpack composer packages (all within this repo)
* Jetpack.com -- the primary marketing site.
* cloud.jetpack.com -- a management site.
* wordpress.com -- the shared management site for both Jetpack and WordPress.com sites.

For more targets, see the `In Scope` section on [HackerOne](https://hackerone.com/automattic).

_Please note that the **WordPress software is a separate entity** from Automattic. Please report vulnerabilities for WordPress through [the WordPress Foundation's HackerOne page](https://hackerone.com/wordpress)._

## Guidelines

We're committed to working with security researchers to resolve the vulnerabilities they discover. You can help us by following these guidelines:

*   Follow [HackerOne's disclosure guidelines](https://www.hackerone.com/disclosure-guidelines).
*   Pen-testing Production:
    *   Please **setup a local environment** instead whenever possible. Most of our code is open source (see above).
    *   If that's not possible, **limit any data access/modification** to the bare minimum necessary to reproduce a PoC.
    *   **_Don't_ automate form submissions!** That's very annoying for us, because it adds extra work for the volunteers who manage those systems, and reduces the signal/noise ratio in our communication channels.
    *   To be eligible for a bounty, all of these guidelines must be followed.
*   Be Patient - Give us a reasonable time to correct the issue before you disclose the vulnerability.

We also expect you to comply with all applicable laws. You're responsible to pay any taxes associated with your bounties.
class-cache.php                                                                                                                                                                                                                                                1184          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <?php
/**
 * A static in-process cache for blog data.
 *
 * @package automattic/jetpack-status
 */

namespace Automattic\Jetpack\Status;

/**
 * A static in-process cache for blog data.
 *
 * For internal use only. Do not use this externally.
 */
class Cache {
	/**
	 * Cached data;
	 *
	 * @var array[]
	 */
	private static $cache = array();

	/**
	 * Get a value from the cache.
	 *
	 * @param string $key Key to fetch.
	 * @param mixed  $default Default value to return if the key is not set.
	 * @returns mixed Data.
	 */
	public static function get( $key, $default = null ) {
		$blog_id = get_current_blog_id();
		return isset( self::$cache[ $blog_id ] ) && array_key_exists( $key, self::$cache[ $blog_id ] ) ? self::$cache[ $blog_id ][ $key ] : $default;
	}

	/**
	 * Set a value in the cache.
	 *
	 * @param string $key Key to set.
	 * @param mixed  $value Value to store.
	 */
	public static function set( $key, $value ) {
		$blog_id                         = get_current_blog_id();
		self::$cache[ $blog_id ][ $key ] = $value;
	}

	/**
	 * Clear the cache.
	 *
	 * This is intended for use in unit tests.
	 */
	public static function clear() {
		self::$cache = array();
	}
}
class-cookiestate.php                                                                                                                                                                                                                                          2808          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <?php
/**
 * Pass state to subsequent requests via cookies.
 *
 * @package automattic/jetpack-status
 */

namespace Automattic\Jetpack;

/**
 * Class Automattic\Jetpack\Status
 *
 * Used to retrieve information about the current status of Jetpack and the site overall.
 */
class CookieState {

	/**
	 * State is passed via cookies from one request to the next, but never to subsequent requests.
	 * SET: state( $key, $value );
	 * GET: $value = state( $key );
	 *
	 * @param string $key State key.
	 * @param string $value Value.
	 * @param bool   $restate Reset the cookie (private).
	 */
	public function state( $key = null, $value = null, $restate = false ) {
		static $state = array();
		static $path, $domain;
		if ( ! isset( $path ) ) {
			require_once ABSPATH . 'wp-admin/includes/plugin.php';
			$admin_url = ( new Paths() )->admin_url();
			$bits      = wp_parse_url( $admin_url );

			if ( is_array( $bits ) ) {
				$path   = ( isset( $bits['path'] ) ) ? dirname( $bits['path'] ) : null;
				$domain = ( isset( $bits['host'] ) ) ? $bits['host'] : null;
			} else {
				$path   = null;
				$domain = null;
			}
		}

		// Extract state from cookies and delete cookies.
		if ( isset( $_COOKIE['jetpackState'] ) && is_array( $_COOKIE['jetpackState'] ) ) {
			// phpcs:ignore WordPress.Security.ValidatedSanitizedInput.InputNotSanitized -- User should sanitize if necessary.
			$yum = wp_unslash( $_COOKIE['jetpackState'] );
			unset( $_COOKIE['jetpackState'] );
			foreach ( $yum as $k => $v ) {
				if ( strlen( $v ) ) {
					$state[ $k ] = $v;
				}
				setcookie( "jetpackState[$k]", false, 0, $path, $domain, is_ssl(), true );
			}
		}

		if ( $restate ) {
			foreach ( $state as $k => $v ) {
				setcookie( "jetpackState[$k]", $v, 0, $path, $domain, is_ssl(), true );
			}
			return;
		}

		// Get a state variable.
		if ( isset( $key ) && ! isset( $value ) ) {
			if ( array_key_exists( $key, $state ) ) {
				return $state[ $key ];
			}
			return null;
		}

		// Set a state variable.
		if ( isset( $key ) && isset( $value ) ) {
			if ( is_array( $value ) && isset( $value[0] ) ) {
				$value = $value[0];
			}
			$state[ $key ] = $value;
			if ( ! headers_sent() ) {
				if ( $this->should_set_cookie( $key ) ) {
					setcookie( "jetpackState[$key]", $value, 0, $path, $domain, is_ssl(), true );
				}
			}
		}
	}

	/**
	 * Determines whether the jetpackState[$key] value should be added to the
	 * cookie.
	 *
	 * @param string $key The state key.
	 *
	 * @return boolean Whether the value should be added to the cookie.
	 */
	public function should_set_cookie( $key ) {
		global $current_screen;
		$page = isset( $current_screen->base ) ? $current_screen->base : null;

		if ( 'toplevel_page_jetpack' === $page && 'display_update_modal' === $key ) {
			return false;
		}

		return true;
	}
}
class-errors.php                                                                                                                                                                                                                                               1215          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <?php
/**
 * An errors utility class for Jetpack.
 *
 * @package automattic/jetpack-status
 */

// phpcs:disable WordPress.PHP.IniSet.display_errors_Disallowed
// phpcs:disable WordPress.PHP.NoSilencedErrors.Discouraged
// phpcs:disable WordPress.PHP.DevelopmentFunctions.prevent_path_disclosure_error_reporting
// phpcs:disable WordPress.PHP.DiscouragedPHPFunctions.runtime_configuration_error_reporting

namespace Automattic\Jetpack;

/**
 * Erros class.
 */
class Errors {
	/**
	 * Catches PHP errors.  Must be used in conjunction with output buffering.
	 *
	 * @param bool $catch True to start catching, False to stop.
	 *
	 * @static
	 */
	public function catch_errors( $catch ) {
		static $display_errors, $error_reporting;

		if ( $catch ) {
			$display_errors  = @ini_set( 'display_errors', 1 );
			$error_reporting = @error_reporting( E_ALL );
			if ( class_exists( 'Jetpack' ) ) {
				add_action( 'shutdown', array( 'Jetpack', 'catch_errors_on_shutdown' ), 0 );
			}
		} else {
			@ini_set( 'display_errors', $display_errors );
			@error_reporting( $error_reporting );
			if ( class_exists( 'Jetpack' ) ) {
				remove_action( 'shutdown', array( 'Jetpack', 'catch_errors_on_shutdown' ), 0 );
			}
		}
	}
}
class-files.php                                                                                                                                                                                                                                                1242          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <?php
/**
 * A modules class for Jetpack.
 *
 * @package automattic/jetpack-status
 */

namespace Automattic\Jetpack;

/**
 * Class Automattic\Jetpack\Files
 *
 * Used to retrieve information about files.
 */
class Files {
	/**
	 * Returns an array of all PHP files in the specified absolute path.
	 * Equivalent to glob( "$absolute_path/*.php" ).
	 *
	 * @param string $absolute_path The absolute path of the directory to search.
	 * @return array Array of absolute paths to the PHP files.
	 */
	public function glob_php( $absolute_path ) {
		if ( function_exists( 'glob' ) ) {
			return glob( "$absolute_path/*.php" );
		}

		$absolute_path = untrailingslashit( $absolute_path );
		$files         = array();
		$dir           = @opendir( $absolute_path ); // phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged
		if ( ! $dir ) {
			return $files;
		}

		// phpcs:ignore Generic.CodeAnalysis.AssignmentInCondition.FoundInWhileCondition
		while ( false !== $file = readdir( $dir ) ) {
			if ( str_starts_with( $file, '.' ) || ! str_ends_with( $file, '.php' ) ) {
				continue;
			}

			$file = "$absolute_path/$file";

			if ( ! is_file( $file ) ) {
				continue;
			}

			$files[] = $file;
		}

		closedir( $dir );

		return $files;
	}
}
class-host.php                                                                                                                                                                                                                                                 6892          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <?php
/**
 * A hosting provide class for Jetpack.
 *
 * @package automattic/jetpack-status
 */

namespace Automattic\Jetpack\Status;

use Automattic\Jetpack\Constants;

/**
 * Hosting provider class.
 */
class Host {
	/**
	 * Determine if this site is an WordPress.com on Atomic site or not by looking for presence of the wpcomsh plugin.
	 *
	 * @since 1.9.0
	 *
	 * @return bool
	 */
	public function is_woa_site() {
		$ret = Cache::get( 'is_woa_site' );
		if ( null === $ret ) {
			$ret = $this->is_atomic_platform() && Constants::is_true( 'WPCOMSH__PLUGIN_FILE' );
			Cache::set( 'is_woa_site', $ret );
		}
		return $ret;
	}

	/**
	 * Determine if the site is hosted on the Atomic hosting platform.
	 *
	 * @since 1.9.0
	 *
	 * @return bool;
	 */
	public function is_atomic_platform() {
		return Constants::is_true( 'ATOMIC_SITE_ID' ) && Constants::is_true( 'ATOMIC_CLIENT_ID' );
	}

	/**
	 * Determine if this is a Newspack site.
	 *
	 * @return bool
	 */
	public function is_newspack_site() {
		return Constants::is_defined( 'NEWSPACK_PLUGIN_FILE' );
	}

	/**
	 * Determine if this is a VIP-hosted site.
	 *
	 * @return bool
	 */
	public function is_vip_site() {
		return Constants::is_defined( 'WPCOM_IS_VIP_ENV' ) && true === Constants::get_constant( 'WPCOM_IS_VIP_ENV' );
	}

	/**
	 * Determine if this is a Simple platform site.
	 *
	 * @return bool
	 */
	public function is_wpcom_simple() {
		return Constants::is_defined( 'IS_WPCOM' ) && true === Constants::get_constant( 'IS_WPCOM' );
	}

	/**
	 * Determine if this is a WordPress.com site.
	 *
	 * Includes both Simple and WoA platforms.
	 *
	 * @return bool
	 */
	public function is_wpcom_platform() {
		return $this->is_wpcom_simple() || $this->is_woa_site();
	}

	/**
	 * Add all wordpress.com environments to the safe redirect allowed list.
	 *
	 * To be used with a filter of allowed domains for a redirect.
	 *
	 * @param array $domains Allowed WP.com Environments.
	 */
	public static function allow_wpcom_environments( $domains ) {
		$domains[] = 'wordpress.com';
		$domains[] = 'jetpack.wordpress.com';
		$domains[] = 'wpcalypso.wordpress.com';
		$domains[] = 'horizon.wordpress.com';
		$domains[] = 'calypso.localhost';
		return $domains;
	}

	/**
	 * Return Calypso environment value; used for developing Jetpack and pairing
	 * it with different Calypso environments, such as localhost.
	 *
	 * @since 1.18.0
	 *
	 * @return string Calypso environment
	 */
	public function get_calypso_env() {
		// phpcs:disable WordPress.Security.NonceVerification.Recommended -- Nonce is not required; only used for changing environments.
		if ( isset( $_GET['calypso_env'] ) ) {
			return sanitize_key( $_GET['calypso_env'] );
		}
		// phpcs:enable WordPress.Security.NonceVerification.Recommended

		if ( getenv( 'CALYPSO_ENV' ) ) {
			return sanitize_key( getenv( 'CALYPSO_ENV' ) );
		}

		if ( defined( 'CALYPSO_ENV' ) && CALYPSO_ENV ) {
			return sanitize_key( CALYPSO_ENV );
		}

		return '';
	}

	/**
	 * Return source query param value from the URL if exists in the allowed sources list.
	 *
	 * @return string "source" query param value
	 */
	public function get_source_query() {
		// phpcs:disable WordPress.Security.NonceVerification.Recommended
		$allowed_sources = array( 'jetpack-manage' );
		if ( isset( $_GET['source'] ) && in_array( $_GET['source'], $allowed_sources, true ) ) {
			return sanitize_key( $_GET['source'] );
		}

		return '';
	}

	/**
	 * Returns an array of nameservers for the current site.
	 *
	 * @param string $domain The domain of the site to check.
	 * @return string
	 */
	public function get_nameserver_dns_records( $domain ) {
		$dns_records = dns_get_record( $domain, DNS_NS ); // Fetches the DNS records of type NS (Name Server)
		$nameservers = array();

		foreach ( $dns_records as $record ) {
			if ( isset( $record['target'] ) ) {
				$nameservers[] = $record['target']; // Adds the nameserver to the array
			}
		}

		return $nameservers; // Returns an array of nameserver names
	}

	/**
	 * Given a DNS entry, will return a hosting provider if one can be determined. Otherwise, will return 'unknown'.
	 * Sourced from: fbhepr%2Skers%2Sjcpbz%2Sjc%2Qpbagrag%2Syvo%2Subfgvat%2Qcebivqre%2Sanzrfreiref.cuc-og
	 *
	 * @param string $domain The domain of the site to check.
	 * @return string The hosting provider of 'unknown'.
	 */
	public function get_hosting_provider_by_nameserver( $domain ) {
		$known_nameservers = array(
			'bluehost'     => array(
				'.bluehost.com',
			),
			'dreamhost'    => array(
				'.dreamhost.com',
			),
			'mediatemple'  => array(
				'.mediatemple.net',
			),
			'xserver'      => array(
				'.xserver.jp',
			),
			'namecheap'    => array(
				'.namecheaphosting.com',
			),
			'hostmonster'  => array(
				'.hostmonster.com',
			),
			'justhost'     => array(
				'.justhost.com',
			),
			'digitalocean' => array(
				'.digitalocean.com',
			),
			'one'          => array(
				'.one.com',
			),
			'hostpapa'     => array(
				'.hostpapa.com',
			),
			'siteground'   => array(
				'.sgcloud.net',
				'.sgedu.site',
				'.sgsrv1.com',
				'.sgvps.net',
				'.siteground.biz',
				'.siteground.net',
				'.siteground.eu',
			),
			'inmotion'     => array(
				'.inmotionhosting.com',
			),
			'ionos'        => array(
				'.ui-dns.org',
				'.ui-dns.de',
				'.ui-dns.biz',
				'.ui-dns.com',
			),
		);

		$dns_records = $this->get_nameserver_dns_records( $domain );
		$dns_records = array_map( 'strtolower', $dns_records );

		foreach ( $known_nameservers as $host => $ns_patterns ) {
			foreach ( $ns_patterns as $ns_pattern ) {
				foreach ( $dns_records as $record ) {
					if ( false !== strpos( $record, $ns_pattern ) ) {
						return $host;
					}
				}
			}
		}

		return 'unknown';
	}

	/**
	 * Returns a guess of the hosting provider for the current site based on various checks.
	 *
	 * @return string
	 */
	public function get_known_host_guess() {
		$host = Cache::get( 'host_guess' );

		if ( null !== $host ) {
			return $host;
		}

		// First, let's check if we can recognize provider manually:
		switch ( true ) {
			case $this->is_woa_site():
				$provider = 'woa';
				break;
			case $this->is_atomic_platform():
				$provider = 'atomic';
				break;
			case $this->is_newspack_site():
				$provider = 'newspack';
				break;
			case $this->is_vip_site():
				$provider = 'vip';
				break;
			case $this->is_wpcom_simple():
			case $this->is_wpcom_platform():
				$provider = 'wpcom';
				break;
			default:
				$provider = 'unknown';
				break;
		}

		// Second, let's check if we can recognize provider by nameservers:
		$domain = isset( $_SERVER['SERVER_NAME'] ) ? sanitize_text_field( wp_unslash( $_SERVER['SERVER_NAME'] ) ) : '';
		if ( $provider === 'unknown' && ! empty( $domain ) ) {
			$provider = $this->get_hosting_provider_by_nameserver( $domain );
		}

		Cache::set( 'host_guess', $provider );
		return $provider;
	}
}
class-modules.php                                                                                                                                                                                                                                              19900         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <?php
/**
 * A modules class for Jetpack.
 *
 * @package automattic/jetpack-status
 */

namespace Automattic\Jetpack;

use Automattic\Jetpack\Current_Plan as Jetpack_Plan;
use Automattic\Jetpack\IP\Utils as IP_Utils;
use Automattic\Jetpack\Status\Host;

/**
 * Class Automattic\Jetpack\Modules
 *
 * Used to retrieve information about the current status of Jetpack modules.
 */
class Modules {

	/**
	 * Check whether or not a Jetpack module is active.
	 *
	 * @param string $module The slug of a Jetpack module.
	 * @return bool
	 */
	public function is_active( $module ) {
		if ( defined( 'IS_WPCOM' ) && IS_WPCOM ) {
			return true;
		}

		return in_array( $module, self::get_active(), true );
	}

	/**
	 * Load module data from module file. Headers differ from WordPress
	 * plugin headers to avoid them being identified as standalone
	 * plugins on the WordPress plugins page.
	 *
	 * @param string $module The module slug.
	 */
	public function get( $module ) {
		static $modules_details;

		// This method relies heavy on auto-generated file found in Jetpack only: module-headings.php
		// If it doesn't exist, it's safe to assume none of this will be helpful.
		if ( ! function_exists( 'jetpack_has_no_module_info' ) ) {
			return false;
		}

		if ( jetpack_has_no_module_info( $module ) ) {
			return false;
		}

		$file = $this->get_path( $this->get_slug( $module ) );

		if ( isset( $modules_details[ $module ] ) ) {
			$mod = $modules_details[ $module ];
		} else {
			$mod = jetpack_get_module_info( $module );

			if ( null === $mod ) {
				// Try to get the module info from the file as a fallback.
				$mod = $this->get_file_data( $file, jetpack_get_all_module_header_names() );

				if ( empty( $mod['name'] ) ) {
					// No info for this module.
					return false;
				}
			}

			$mod['sort']                     = empty( $mod['sort'] ) ? 10 : (int) $mod['sort'];
			$mod['recommendation_order']     = empty( $mod['recommendation_order'] ) ? 20 : (int) $mod['recommendation_order'];
			$mod['deactivate']               = empty( $mod['deactivate'] );
			$mod['free']                     = empty( $mod['free'] );
			$mod['requires_connection']      = ( ! empty( $mod['requires_connection'] ) && 'No' === $mod['requires_connection'] ) ? false : true;
			$mod['requires_user_connection'] = ( empty( $mod['requires_user_connection'] ) || 'No' === $mod['requires_user_connection'] ) ? false : true;

			if ( empty( $mod['auto_activate'] ) || ! in_array( strtolower( $mod['auto_activate'] ), array( 'yes', 'no', 'public' ), true ) ) {
				$mod['auto_activate'] = 'No';
			} else {
				$mod['auto_activate'] = (string) $mod['auto_activate'];
			}

			if ( $mod['module_tags'] ) {
				$mod['module_tags'] = explode( ',', $mod['module_tags'] );
				$mod['module_tags'] = array_map( 'trim', $mod['module_tags'] );
			} else {
				$mod['module_tags'] = array( 'Other' );
			}

			if ( $mod['plan_classes'] ) {
				$mod['plan_classes'] = explode( ',', $mod['plan_classes'] );
				$mod['plan_classes'] = array_map( 'strtolower', array_map( 'trim', $mod['plan_classes'] ) );
			} else {
				$mod['plan_classes'] = array( 'free' );
			}

			if ( $mod['feature'] ) {
				$mod['feature'] = explode( ',', $mod['feature'] );
				$mod['feature'] = array_map( 'trim', $mod['feature'] );
			} else {
				$mod['feature'] = array( 'Other' );
			}

			$modules_details[ $module ] = $mod;

		}

		/**
		 * Filters the feature array on a module.
		 *
		 * This filter allows you to control where each module is filtered: Recommended,
		 * and the default "Other" listing.
		 *
		 * @since-jetpack 3.5.0
		 *
		 * @param array   $mod['feature'] The areas to feature this module:
		 *     'Recommended' shows on the main Jetpack admin screen.
		 *     'Other' should be the default if no other value is in the array.
		 * @param string  $module The slug of the module, e.g. sharedaddy.
		 * @param array   $mod All the currently assembled module data.
		 */
		$mod['feature'] = apply_filters( 'jetpack_module_feature', $mod['feature'], $module, $mod );

		/**
		 * Filter the returned data about a module.
		 *
		 * This filter allows overriding any info about Jetpack modules. It is dangerous,
		 * so please be careful.
		 *
		 * @since-jetpack 3.6.0
		 *
		 * @param array   $mod    The details of the requested module.
		 * @param string  $module The slug of the module, e.g. sharedaddy
		 * @param string  $file   The path to the module source file.
		 */
		return apply_filters( 'jetpack_get_module', $mod, $module, $file );
	}

	/**
	 * Like core's get_file_data implementation, but caches the result.
	 *
	 * @param string $file Absolute path to the file.
	 * @param array  $headers List of headers, in the format array( 'HeaderKey' => 'Header Name' ).
	 */
	public function get_file_data( $file, $headers ) {
		// Get just the filename from $file (i.e. exclude full path) so that a consistent hash is generated.
		$file_name = basename( $file );

		if ( ! Constants::is_defined( 'JETPACK__VERSION' ) ) {
			return get_file_data( $file, $headers );
		}

		$cache_key = 'jetpack_file_data_' . JETPACK__VERSION;

		$file_data_option = get_transient( $cache_key );

		if ( ! is_array( $file_data_option ) ) {
			delete_transient( $cache_key );
			$file_data_option = false;
		}

		if ( false === $file_data_option ) {
			$file_data_option = array();
		}

		$key           = md5( $file_name . maybe_serialize( $headers ) );
		$refresh_cache = is_admin() && isset( $_GET['page'] ) && str_starts_with( $_GET['page'], 'jetpack' ); // phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.Security.ValidatedSanitizedInput

		// If we don't need to refresh the cache, and already have the value, short-circuit!
		if ( ! $refresh_cache && isset( $file_data_option[ $key ] ) ) {
			return $file_data_option[ $key ];
		}

		$data = get_file_data( $file, $headers );

		$file_data_option[ $key ] = $data;

		set_transient( $cache_key, $file_data_option, 29 * DAY_IN_SECONDS );

		return $data;
	}

	/**
	 * Get a list of activated modules as an array of module slugs.
	 */
	public function get_active() {
		$active = \Jetpack_Options::get_option( 'active_modules' );

		if ( ! is_array( $active ) ) {
			$active = array();
		}

		if ( class_exists( 'VaultPress' ) || function_exists( 'vaultpress_contact_service' ) ) {
			$active[] = 'vaultpress';
		} else {
			$active = array_diff( $active, array( 'vaultpress' ) );
		}

		// If protect is active on the main site of a multisite, it should be active on all sites. Doesn't apply to WP.com.
		if ( ! in_array( 'protect', $active, true )
			&& ! ( new Host() )->is_wpcom_simple()
			&& is_multisite()
			&& get_site_option( 'jetpack_protect_active' ) ) {
			$active[] = 'protect';
		}

		// If it's not available, it shouldn't be active.
		// We don't delete it from the options though, as it will be active again when a plugin gets reactivated.
		$active = array_intersect( $active, $this->get_available() );

		/**
		 * Allow filtering of the active modules.
		 *
		 * Gives theme and plugin developers the power to alter the modules that
		 * are activated on the fly.
		 *
		 * @since-jetpack 5.8.0
		 *
		 * @param array $active Array of active module slugs.
		 */
		$active = apply_filters( 'jetpack_active_modules', $active );

		return array_unique( $active );
	}

	/**
	 * Extract a module's slug from its full path.
	 *
	 * @param string $file Full path to a file.
	 *
	 * @return string Module slug.
	 */
	public function get_slug( $file ) {
		return str_replace( '.php', '', basename( $file ) );
	}

	/**
	 * List available Jetpack modules. Simply lists .php files in /modules/.
	 * Make sure to tuck away module "library" files in a sub-directory.
	 *
	 * @param bool|string $min_version Only return modules introduced in this version or later. Default is false, do not filter.
	 * @param bool|string $max_version Only return modules introduced before this version. Default is false, do not filter.
	 * @param bool|null   $requires_connection Pass a boolean value to only return modules that require (or do not require) a connection.
	 * @param bool|null   $requires_user_connection Pass a boolean value to only return modules that require (or do not require) a user connection.
	 *
	 * @return array $modules Array of module slugs
	 */
	public function get_available( $min_version = false, $max_version = false, $requires_connection = null, $requires_user_connection = null ) {
		static $modules = null;

		if ( ! class_exists( 'Jetpack' ) || ! Constants::is_defined( 'JETPACK__VERSION' ) || ! Constants::is_defined( 'JETPACK__PLUGIN_DIR' ) ) {
			return array_unique(
				/**
				 * Stand alone plugins need to use this filter to register the modules they interact with.
				 * This will allow them to activate and deactivate these modules even when Jetpack is not present.
				 * Note: Standalone plugins can only interact with modules that also exist in the Jetpack plugin, otherwise they'll lose the ability to control it if Jetpack is activated.
				 *
				 * @since 1.13.6
				 *
				 * @param array $modules The list of available modules as an array of slugs.
				 * @param bool $requires_connection Whether to list only modules that require a connection to work.
				 * @param bool $requires_user_connection Whether to list only modules that require a user connection to work.
				 */
				apply_filters( 'jetpack_get_available_standalone_modules', array(), $requires_connection, $requires_user_connection )
			);
		}

		if ( ! isset( $modules ) ) {
			$available_modules_option = \Jetpack_Options::get_option( 'available_modules', array() );
			// Use the cache if we're on the front-end and it's available...
			if ( ! is_admin() && ! empty( $available_modules_option[ JETPACK__VERSION ] ) ) {
				$modules = $available_modules_option[ JETPACK__VERSION ];
			} else {
				$files = ( new Files() )->glob_php( JETPACK__PLUGIN_DIR . 'modules' );

				$modules = array();

				foreach ( $files as $file ) {
					$slug    = $this->get_slug( $file );
					$headers = $this->get( $slug );

					if ( ! $headers ) {
						continue;
					}

					$modules[ $slug ] = $headers['introduced'];
				}

				\Jetpack_Options::update_option(
					'available_modules',
					array(
						JETPACK__VERSION => $modules,
					)
				);
			}
		}

		/**
		 * Filters the array of modules available to be activated.
		 *
		 * @since 2.4.0
		 *
		 * @param array $modules Array of available modules.
		 * @param string $min_version Minimum version number required to use modules.
		 * @param string $max_version Maximum version number required to use modules.
		 * @param bool|null $requires_connection Value of the Requires Connection filter.
		 * @param bool|null $requires_user_connection Value of the Requires User Connection filter.
		 */
		$mods = apply_filters( 'jetpack_get_available_modules', $modules, $min_version, $max_version, $requires_connection, $requires_user_connection );

		if ( ! $min_version && ! $max_version && $requires_connection === null && $requires_user_connection === null ) {
			return array_keys( $mods );
		}

		$r = array();
		foreach ( $mods as $slug => $introduced ) {
			if ( $min_version && version_compare( $min_version, $introduced, '>=' ) ) {
				continue;
			}

			if ( $max_version && version_compare( $max_version, $introduced, '<' ) ) {
				continue;
			}

			$mod_details = $this->get( $slug );

			if ( null !== $requires_connection && (bool) $requires_connection !== $mod_details['requires_connection'] ) {
				continue;
			}

			if ( null !== $requires_user_connection && (bool) $requires_user_connection !== $mod_details['requires_user_connection'] ) {
				continue;
			}

			$r[] = $slug;
		}

		return $r;
	}

	/**
	 * Is slug a valid module.
	 *
	 * @param string $module Module slug.
	 *
	 * @return bool
	 */
	public function is_module( $module ) {
		return ! empty( $module ) && ! validate_file( $module, $this->get_available() );
	}

	/**
	 * Update module status.
	 *
	 * @param string  $module - module slug.
	 * @param boolean $active - true to activate, false to deactivate.
	 * @param bool    $exit Should exit be called after deactivation.
	 * @param bool    $redirect Should there be a redirection after activation.
	 */
	public function update_status( $module, $active, $exit = true, $redirect = true ) {
		return $active ? $this->activate( $module, $exit, $redirect ) : $this->deactivate( $module );
	}

	/**
	 * Activate a module.
	 *
	 * @param string $module Module slug.
	 * @param bool   $exit Should exit be called after deactivation.
	 * @param bool   $redirect Should there be a redirection after activation.
	 *
	 * @return bool|void
	 */
	public function activate( $module, $exit = true, $redirect = true ) {
		/**
		 * Fires before a module is activated.
		 *
		 * @since 2.6.0
		 *
		 * @param string $module Module slug.
		 * @param bool $exit Should we exit after the module has been activated. Default to true.
		 * @param bool $redirect Should the user be redirected after module activation? Default to true.
		 */
		do_action( 'jetpack_pre_activate_module', $module, $exit, $redirect );

		if ( ! strlen( $module ) ) {
			return false;
		}

		// If it's already active, then don't do it again.
		$active = $this->get_active();
		foreach ( $active as $act ) {
			if ( $act === $module ) {
				return true;
			}
		}

		if ( ! $this->is_module( $module ) ) {
			return false;
		}

		// Jetpack plugin only
		if ( class_exists( 'Jetpack' ) ) {

			$module_data = $this->get( $module );

			$status = new Status();
			$state  = new CookieState();

			if ( ! \Jetpack::is_connection_ready() ) {
				if ( ! $status->is_offline_mode() && ! $status->is_onboarding() ) {
					return false;
				}

				// If we're not connected but in offline mode, make sure the module doesn't require a connection.
				if ( $status->is_offline_mode() && $module_data['requires_connection'] ) {
					return false;
				}
			}

			if ( class_exists( 'Jetpack_Client_Server' ) ) {
				$jetpack = \Jetpack::init();

				// Check and see if the old plugin is active.
				if ( isset( $jetpack->plugins_to_deactivate[ $module ] ) ) {
					// Deactivate the old plugins.
					$deactivated = array();
					foreach ( $jetpack->plugins_to_deactivate[ $module ] as $idx => $deactivate_me ) {
						if ( \Jetpack_Client_Server::deactivate_plugin( $deactivate_me[0], $deactivate_me[1] ) ) {
							// If we deactivated the old plugin, remembere that with ::state() and redirect back to this page to activate the module
							// We can't activate the module on this page load since the newly deactivated old plugin is still loaded on this page load.
							$deactivated[] = "$module:$idx";
						}
					}
					if ( $deactivated ) {
						$state->state( 'deactivated_plugins', implode( ',', $deactivated ) );
						wp_safe_redirect( add_query_arg( 'jetpack_restate', 1 ) );
						exit;
					}
				}
			}

			// Protect won't work with mis-configured IPs.
			if ( 'protect' === $module ) {
				if ( ! IP_Utils::get_ip() ) {
					$state->state( 'message', 'protect_misconfigured_ip' );
					return false;
				}
			}

			if ( ! Jetpack_Plan::supports( $module ) ) {
				return false;
			}

			// Check the file for fatal errors, a la wp-admin/plugins.php::activate.
			$errors = new Errors();
			$state->state( 'module', $module );
			$state->state( 'error', 'module_activation_failed' ); // we'll override this later if the plugin can be included without fatal error.
			$errors->catch_errors( true );

			ob_start();
			$module_path = $this->get_path( $module );
			if ( file_exists( $module_path ) ) {
				require $this->get_path( $module ); // phpcs:ignore WordPressVIPMinimum.Files.IncludingFile.NotAbsolutePath
			}

			$active[] = $module;
			$this->update_active( $active );

			$state->state( 'error', false ); // the override.
			ob_end_clean();
			$errors->catch_errors( false );
		} else { // Not a Jetpack plugin.
			$active[] = $module;
			$this->update_active( $active );
		}

		if ( $redirect ) {
			wp_safe_redirect( ( new Paths() )->admin_url( 'page=jetpack' ) );
		}
		if ( $exit ) {
			exit;
		}
		return true;
	}

	/**
	 * Deactivate module.
	 *
	 * @param string $module Module slug.
	 *
	 * @return bool
	 */
	public function deactivate( $module ) {
		/**
		 * Fires when a module is deactivated.
		 *
		 * @since 1.9.0
		 *
		 * @param string $module Module slug.
		 */
		do_action( 'jetpack_pre_deactivate_module', $module );

		$active = $this->get_active();
		$new    = array_filter( array_diff( $active, (array) $module ) );

		return $this->update_active( $new );
	}

	/**
	 * Generate a module's path from its slug.
	 *
	 * @param string $slug Module slug.
	 */
	public function get_path( $slug ) {
		if ( ! Constants::is_defined( 'JETPACK__PLUGIN_DIR' ) ) {
			return '';
		}
		/**
		 * Filters the path of a modules.
		 *
		 * @since 7.4.0
		 *
		 * @param array $return The absolute path to a module's root php file
		 * @param string $slug The module slug
		 */
		return apply_filters( 'jetpack_get_module_path', JETPACK__PLUGIN_DIR . "modules/$slug.php", $slug );
	}

	/**
	 * Saves all the currently active modules to options.
	 * Also fires Action hooks for each newly activated and deactivated module.
	 *
	 * @param array $modules Array of active modules to be saved in options.
	 *
	 * @return $success bool true for success, false for failure.
	 */
	public function update_active( $modules ) {
		$current_modules      = \Jetpack_Options::get_option( 'active_modules', array() );
		$active_modules       = $this->get_active();
		$new_active_modules   = array_diff( $modules, $current_modules );
		$new_inactive_modules = array_diff( $active_modules, $modules );
		$new_current_modules  = array_diff( array_merge( $current_modules, $new_active_modules ), $new_inactive_modules );
		$reindexed_modules    = array_values( $new_current_modules );
		$success              = \Jetpack_Options::update_option( 'active_modules', array_unique( $reindexed_modules ) );
		// Let's take `pre_update_option_jetpack_active_modules` filter into account
		// and actually decide for which modules we need to fire hooks by comparing
		// the 'active_modules' option before and after the update.
		$current_modules_post_update = \Jetpack_Options::get_option( 'active_modules', array() );

		$new_inactive_modules = array_diff( $current_modules, $current_modules_post_update );
		$new_inactive_modules = array_unique( $new_inactive_modules );
		$new_inactive_modules = array_values( $new_inactive_modules );

		$new_active_modules = array_diff( $current_modules_post_update, $current_modules );
		$new_active_modules = array_unique( $new_active_modules );
		$new_active_modules = array_values( $new_active_modules );

		foreach ( $new_active_modules as $module ) {
			/**
			 * Fires when a specific module is activated.
			 *
			 * @since 1.9.0
			 *
			 * @param string $module Module slug.
			 * @param boolean $success whether the module was activated. @since 4.2
			 */
			do_action( 'jetpack_activate_module', $module, $success );
			/**
			 * Fires when a module is activated.
			 * The dynamic part of the filter, $module, is the module slug.
			 *
			 * @since 1.9.0
			 *
			 * @param string $module Module slug.
			 */
			do_action( "jetpack_activate_module_$module", $module );
		}

		foreach ( $new_inactive_modules as $module ) {
			/**
			 * Fired after a module has been deactivated.
			 *
			 * @since 4.2.0
			 *
			 * @param string $module Module slug.
			 * @param boolean $success whether the module was deactivated.
			 */
			do_action( 'jetpack_deactivate_module', $module, $success );
			/**
			 * Fires when a module is deactivated.
			 * The dynamic part of the filter, $module, is the module slug.
			 *
			 * @since 1.9.0
			 *
			 * @param string $module Module slug.
			 */
			do_action( "jetpack_deactivate_module_$module", $module );
		}

		return $success;
	}
}
class-paths.php                                                                                                                                                                                                                                                544           1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <?php
/**
 * A Path & URL utility class for Jetpack.
 *
 * @package automattic/jetpack-status
 */

namespace Automattic\Jetpack;

/**
 * Class Automattic\Jetpack\Paths
 *
 * Used to retrieve information about files.
 */
class Paths {
	/**
	 * Jetpack Admin URL.
	 *
	 * @param array $args Query string args.
	 *
	 * @return string Jetpack admin URL.
	 */
	public function admin_url( $args = null ) {
		$args = wp_parse_args( $args, array( 'page' => 'jetpack' ) );
		$url  = add_query_arg( $args, admin_url( 'admin.php' ) );
		return $url;
	}
}
class-status.php                                                                                                                                                                                                                                               12398         1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <?php
/**
 * A status class for Jetpack.
 *
 * @package automattic/jetpack-status
 */

namespace Automattic\Jetpack;

use Automattic\Jetpack\Status\Cache;
use Automattic\Jetpack\Status\Host;
use WPCOM_Masterbar;

/**
 * Class Automattic\Jetpack\Status
 *
 * Used to retrieve information about the current status of Jetpack and the site overall.
 */
class Status {
	/**
	 * Is Jetpack in development (offline) mode?
	 *
	 * @deprecated 1.3.0 Use Status->is_offline_mode().
	 *
	 * @return bool Whether Jetpack's offline mode is active.
	 */
	public function is_development_mode() {
		_deprecated_function( __FUNCTION__, '1.3.0', 'Automattic\Jetpack\Status->is_offline_mode' );
		return $this->is_offline_mode();
	}

	/**
	 * Is Jetpack in offline mode?
	 *
	 * This was formerly called "Development Mode", but sites "in development" aren't always offline/localhost.
	 *
	 * @since 1.3.0
	 *
	 * @return bool Whether Jetpack's offline mode is active.
	 */
	public function is_offline_mode() {
		$cached = Cache::get( 'is_offline_mode' );
		if ( null !== $cached ) {
			return $cached;
		}

		$offline_mode = false;

		if ( defined( '\\JETPACK_DEV_DEBUG' ) ) {
			$offline_mode = constant( '\\JETPACK_DEV_DEBUG' );
		} elseif ( defined( '\\WP_LOCAL_DEV' ) ) {
			$offline_mode = constant( '\\WP_LOCAL_DEV' );
		} elseif ( $this->is_local_site() ) {
			$offline_mode = true;
		}

		/**
		 * Filters Jetpack's offline mode.
		 *
		 * @see https://jetpack.com/support/development-mode/
		 * @todo Update documentation ^^.
		 *
		 * @since 1.1.1
		 * @since-jetpack 2.2.1
		 * @deprecated 1.3.0
		 *
		 * @param bool $offline_mode Is Jetpack's offline mode active.
		 */
		$offline_mode = (bool) apply_filters_deprecated( 'jetpack_development_mode', array( $offline_mode ), '1.3.0', 'jetpack_offline_mode' );

		/**
		 * Filters Jetpack's offline mode.
		 *
		 * @see https://jetpack.com/support/development-mode/
		 * @todo Update documentation ^^.
		 *
		 * @since 1.3.0
		 *
		 * @param bool $offline_mode Is Jetpack's offline mode active.
		 */
		$offline_mode = (bool) apply_filters( 'jetpack_offline_mode', $offline_mode );

		Cache::set( 'is_offline_mode', $offline_mode );
		return $offline_mode;
	}

	/**
	 * Is Jetpack in "No User test mode"?
	 *
	 * This will make Jetpack act as if there were no connected users, but only a site connection (aka blog token)
	 *
	 * @since 1.6.0
	 * @deprecated 1.7.5 Since this version, Jetpack connection is considered active after registration, making no_user_testing_mode obsolete.
	 *
	 * @return bool Whether Jetpack's No User Testing Mode is active.
	 */
	public function is_no_user_testing_mode() {
		_deprecated_function( __METHOD__, '1.7.5' );
		return true;
	}

	/**
	 * Whether this is a system with a multiple networks.
	 * Implemented since there is no core is_multi_network function.
	 * Right now there is no way to tell which network is the dominant network on the system.
	 *
	 * @return boolean
	 */
	public function is_multi_network() {
		global $wpdb;

		$cached = Cache::get( 'is_multi_network' );
		if ( null !== $cached ) {
			return $cached;
		}

		// If we don't have a multi site setup no need to do any more.
		if ( ! is_multisite() ) {
			Cache::set( 'is_multi_network', false );
			return false;
		}

		$num_sites = $wpdb->get_var( "SELECT COUNT(*) FROM {$wpdb->site}" );
		if ( $num_sites > 1 ) {
			Cache::set( 'is_multi_network', true );
			return true;
		}

		Cache::set( 'is_multi_network', false );
		return false;
	}

	/**
	 * Whether the current site is single user site.
	 *
	 * @return bool
	 */
	public function is_single_user_site() {
		global $wpdb;

		$ret = Cache::get( 'is_single_user_site' );
		if ( null === $ret ) {
			$some_users = get_transient( 'jetpack_is_single_user' );
			if ( false === $some_users ) {
				$some_users = $wpdb->get_var( "SELECT COUNT(*) FROM (SELECT user_id FROM $wpdb->usermeta WHERE meta_key = '{$wpdb->prefix}capabilities' LIMIT 2) AS someusers" );
				set_transient( 'jetpack_is_single_user', (int) $some_users, 12 * HOUR_IN_SECONDS );
			}
			$ret = 1 === (int) $some_users;
			Cache::set( 'is_single_user_site', $ret );
		}
		return $ret;
	}

	/**
	 * If the site is a local site.
	 *
	 * @since 1.3.0
	 *
	 * @return bool
	 */
	public function is_local_site() {
		$cached = Cache::get( 'is_local_site' );
		if ( null !== $cached ) {
			return $cached;
		}

		$site_url = site_url();

		// Check for localhost and sites using an IP only first.
		// Note: str_contains() is not used here, as wp-includes/compat.php is not loaded in this file.
		$is_local = $site_url && false === strpos( $site_url, '.' );

		// Use Core's environment check, if available.
		if ( 'local' === wp_get_environment_type() ) {
			$is_local = true;
		}

		// Then check for usual usual domains used by local dev tools.
		$known_local = array(
			'#\.local$#i',
			'#\.localhost$#i',
			'#\.test$#i',
			'#\.docksal$#i',      // Docksal.
			'#\.docksal\.site$#i', // Docksal.
			'#\.dev\.cc$#i',       // ServerPress.
			'#\.lndo\.site$#i',    // Lando.
			'#^https?://127\.0\.0\.1$#',
		);

		if ( ! $is_local ) {
			foreach ( $known_local as $url ) {
				if ( preg_match( $url, $site_url ) ) {
					$is_local = true;
					break;
				}
			}
		}

		/**
		 * Filters is_local_site check.
		 *
		 * @since 1.3.0
		 *
		 * @param bool $is_local If the current site is a local site.
		 */
		$is_local = apply_filters( 'jetpack_is_local_site', $is_local );

		Cache::set( 'is_local_site', $is_local );
		return $is_local;
	}

	/**
	 * If is a staging site.
	 *
	 * @todo Add IDC detection to a package.
	 *
	 * @return bool
	 */
	public function is_staging_site() {
		$cached = Cache::get( 'is_staging_site' );
		if ( null !== $cached ) {
			return $cached;
		}

		/*
		 * Core's wp_get_environment_type allows for a few specific options.
		 * We should default to bowing out gracefully for anything other than production or local.
		 */
		$is_staging = ! in_array( wp_get_environment_type(), array( 'production', 'local' ), true );

		$known_staging = array(
			'urls'      => array(
				'#\.staging\.wpengine\.com$#i',                    // WP Engine. This is their legacy staging URL structure. Their new platform does not have a common URL. https://github.com/Automattic/jetpack/issues/21504
				'#\.staging\.kinsta\.com$#i',                      // Kinsta.com.
				'#\.kinsta\.cloud$#i',                             // Kinsta.com.
				'#\.stage\.site$#i',                               // DreamPress.
				'#\.newspackstaging\.com$#i',                      // Newspack.
				'#^(?!live-)([a-zA-Z0-9-]+)\.pantheonsite\.io$#i', // Pantheon.
				'#\.flywheelsites\.com$#i',                        // Flywheel.
				'#\.flywheelstaging\.com$#i',                      // Flywheel.
				'#\.cloudwaysapps\.com$#i',                        // Cloudways.
				'#\.azurewebsites\.net$#i',                        // Azure.
				'#\.wpserveur\.net$#i',                            // WPServeur.
				'#\-liquidwebsites\.com$#i',                       // Liquidweb.
			),
			'constants' => array(
				'IS_WPE_SNAPSHOT',      // WP Engine. This is used on their legacy staging environment. Their new platform does not have a constant. https://github.com/Automattic/jetpack/issues/21504
				'KINSTA_DEV_ENV',       // Kinsta.com.
				'WPSTAGECOACH_STAGING', // WP Stagecoach.
				'JETPACK_STAGING_MODE', // Generic.
				'WP_LOCAL_DEV',         // Generic.
			),
		);
		/**
		 * Filters the flags of known staging sites.
		 *
		 * @since 1.1.1
		 * @since-jetpack 3.9.0
		 *
		 * @param array $known_staging {
		 *     An array of arrays that each are used to check if the current site is staging.
		 *     @type array $urls      URLs of staging sites in regex to check against site_url.
		 *     @type array $constants PHP constants of known staging/developement environments.
		 *  }
		 */
		$known_staging = apply_filters( 'jetpack_known_staging', $known_staging );

		if ( isset( $known_staging['urls'] ) ) {
			$site_url = site_url();
			foreach ( $known_staging['urls'] as $url ) {
				if ( preg_match( $url, wp_parse_url( $site_url, PHP_URL_HOST ) ) ) {
					$is_staging = true;
					break;
				}
			}
		}

		if ( isset( $known_staging['constants'] ) ) {
			foreach ( $known_staging['constants'] as $constant ) {
				if ( defined( $constant ) && constant( $constant ) ) {
					$is_staging = true;
				}
			}
		}

		// Last, let's check if sync is erroring due to an IDC. If so, set the site to staging mode.
		if ( ! $is_staging && method_exists( 'Automattic\\Jetpack\\Identity_Crisis', 'validate_sync_error_idc_option' ) && \Automattic\Jetpack\Identity_Crisis::validate_sync_error_idc_option() ) {
			$is_staging = true;
		}

		/**
		 * Filters is_staging_site check.
		 *
		 * @since 1.1.1
		 * @since-jetpack 3.9.0
		 *
		 * @param bool $is_staging If the current site is a staging site.
		 */
		$is_staging = apply_filters( 'jetpack_is_staging_site', $is_staging );

		Cache::set( 'is_staging_site', $is_staging );
		return $is_staging;
	}

	/**
	 * Whether the site is currently onboarding or not.
	 * A site is considered as being onboarded if it currently has an onboarding token.
	 *
	 * @since-jetpack 5.8
	 *
	 * @access public
	 * @static
	 *
	 * @return bool True if the site is currently onboarding, false otherwise
	 */
	public function is_onboarding() {
		return \Jetpack_Options::get_option( 'onboarding' ) !== false;
	}

	/**
	 * Whether the site is currently private or not.
	 * On WordPress.com and WoA, sites can be marked as private
	 *
	 * @since 1.16.0
	 *
	 * @return bool True if the site is private.
	 */
	public function is_private_site() {
		$ret = Cache::get( 'is_private_site' );
		if ( null === $ret ) {
			$is_private_site = '-1' === get_option( 'blog_public' );

			/**
			 * Filters the is_private_site check.
			 *
			 * @since 1.16.1
			 *
			 * @param bool $is_private_site True if the site is private.
			 */
			$is_private_site = apply_filters( 'jetpack_is_private_site', $is_private_site );

			Cache::set( 'is_private_site', $is_private_site );
			return $is_private_site;
		}
		return $ret;
	}

	/**
	 * Whether the site is currently unlaunched or not.
	 * On WordPress.com and WoA, sites can be marked as "coming soon", aka unlaunched
	 *
	 * @since 1.16.0
	 *
	 * @return bool True if the site is not launched.
	 */
	public function is_coming_soon() {
		$ret = Cache::get( 'is_coming_soon' );
		if ( null === $ret ) {
			$is_coming_soon = (bool) ( function_exists( 'site_is_coming_soon' ) && \site_is_coming_soon() )
				|| get_option( 'wpcom_public_coming_soon' );

			/**
			 * Filters the is_coming_soon check.
			 *
			 * @since 1.16.1
			 *
			 * @param bool $is_coming_soon True if the site is coming soon (i.e. unlaunched).
			 */
			$is_coming_soon = apply_filters( 'jetpack_is_coming_soon', $is_coming_soon );

			Cache::set( 'is_coming_soon', $is_coming_soon );
			return $is_coming_soon;
		}
		return $ret;
	}

	/**
	 * Returns the site slug suffix to be used as part of Calypso URLs.
	 *
	 * Strips http:// or https:// from a url, replaces forward slash with ::.
	 *
	 * @since 1.6.0
	 *
	 * @param string $url Optional. URL to build the site suffix from. Default: Home URL.
	 *
	 * @return string
	 */
	public function get_site_suffix( $url = '' ) {
		// On WordPress.com, site suffixes are a bit different.
		if ( method_exists( 'WPCOM_Masterbar', 'get_calypso_site_slug' ) ) {
			return WPCOM_Masterbar::get_calypso_site_slug( get_current_blog_id() );
		}

		// Grab the 'site_url' option for WoA sites to avoid plugins to interfere with the site
		// identifier (e.g. i18n plugins may change the main url to '<DOMAIN>/<LOCALE>', but we
		// want to exclude the locale since it's not part of the site suffix).
		if ( ( new Host() )->is_woa_site() ) {
			$url = \site_url();
		}

		if ( empty( $url ) ) {
			// WordPress can be installed in subdirectories (e.g. make.wordpress.org/plugins)
			// where the 'site_url' option points to the root domain (e.g. make.wordpress.org)
			// which could collide with another site in the same domain but with WordPress
			// installed in a different subdirectory (e.g. make.wordpress.org/core). To avoid
			// such collision, we identify the site with the 'home_url' option.
			$url = \home_url();
		}

		$url = preg_replace( '#^.*?://#', '', $url );
		$url = str_replace( '/', '::', $url );

		return rtrim( $url, ':' );
	}
}
class-visitor.php                                                                                                                                                                                                                                              1051          1711191316  plugins/google-listings-and-ads/vendor/automattic/jetpack-status/src                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <?php
/**
 * Status and information regarding the site visitor.
 *
 * @package automattic/jetpack-status
 */

namespace Automattic\Jetpack\Status;

/**
 * Visitor class.
 */
class Visitor {

	/**
	 * Gets current user IP address.
	 *
	 * @param  bool $check_all_headers Check all headers? Default is `false`.
	 *
	 * @return string                  Current user IP address.
	 */
	public function get_ip( $check_all_headers = false ) {
		if ( $check_all_headers ) {
			foreach ( array(
				'HTTP_CF_CONNECTING_IP',
				'HTTP_CLIENT_IP',
				'HTTP_X_FORWARDED_FOR',
				'HTTP_X_FORWARDED',
				'HTTP_X_CLUSTER_CLIENT_IP',
				'HTTP_FORWARDED_FOR',
				'HTTP_FORWARDED',
				'HTTP_VIA',
			) as $key ) {
				if ( ! empty( $_SERVER[ $key ] ) ) {
					// @todo Some of these might actually be lists of IPs (e.g. HTTP_X_FORWARDED_FOR) or something else entirely (HTTP_VIA).
					return filter_var( wp_unslash( $_SERVER[ $key ] ) );
				}
			}
		}

		return ! empty( $_SERVER['REMOTE_ADDR'] ) ? filter_var( wp_unslash( $_SERVER['REMOTE_ADDR'] ) ) : '';
	}
}
autoload_classmap.php                                                                                                                                                                                                                                          633594        1711191316  plugins/google-listings-and-ads/vendor/composer                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 <?php

// autoload_classmap.php @generated by Composer

$vendorDir = dirname(__DIR__);
$baseDir = dirname($vendorDir);

return array(
    'Attribute' => $vendorDir . '/symfony/polyfill-php80/Resources/stubs/Attribute.php',
    'Automattic\\Jetpack\\A8c_Mc_Stats' => $vendorDir . '/automattic/jetpack-a8c-mc-stats/src/class-a8c-mc-stats.php',
    'Automattic\\Jetpack\\Admin_UI\\Admin_Menu' => $vendorDir . '/automattic/jetpack-admin-ui/src/class-admin-menu.php',
    'Automattic\\Jetpack\\Autoloader\\AutoloadFileWriter' => $vendorDir . '/automattic/jetpack-autoloader/src/AutoloadFileWriter.php',
    'Automattic\\Jetpack\\Autoloader\\AutoloadGenerator' => $vendorDir . '/automattic/jetpack-autoloader/src/AutoloadGenerator.php',
    'Automattic\\Jetpack\\Autoloader\\AutoloadProcessor' => $vendorDir . '/automattic/jetpack-autoloader/src/AutoloadProcessor.php',
    'Automattic\\Jetpack\\Autoloader\\CustomAutoloaderPlugin' => $vendorDir . '/automattic/jetpack-autoloader/src/CustomAutoloaderPlugin.php',
    'Automattic\\Jetpack\\Autoloader\\ManifestGenerator' => $vendorDir . '/automattic/jetpack-autoloader/src/ManifestGenerator.php',
    'Automattic\\Jetpack\\Config' => $vendorDir . '/automattic/jetpack-config/src/class-config.php',
    'Automattic\\Jetpack\\Connection\\Client' => $vendorDir . '/automattic/jetpack-connection/src/class-client.php',
    'Automattic\\Jetpack\\Connection\\Connection_Notice' => $vendorDir . '/automattic/jetpack-connection/src/class-connection-notice.php',
    'Automattic\\Jetpack\\Connection\\Error_Handler' => $vendorDir . '/automattic/jetpack-connection/src/class-error-handler.php',
    'Automattic\\Jetpack\\Connection\\Initial_State' => $vendorDir . '/automattic/jetpack-connection/src/class-initial-state.php',
    'Automattic\\Jetpack\\Connection\\Manager' => $vendorDir . '/automattic/jetpack-connection/src/class-manager.php',
    'Automattic\\Jetpack\\Connection\\Manager_Interface' => $vendorDir . '/automattic/jetpack-connection/src/interface-manager.php',
    'Automattic\\Jetpack\\Connection\\Nonce_Handler' => $vendorDir . '/automattic/jetpack-connection/src/class-nonce-handler.php',
    'Automattic\\Jetpack\\Connection\\Package_Version' => $vendorDir . '/automattic/jetpack-connection/src/class-package-version.php',
    'Automattic\\Jetpack\\Connection\\Package_Version_Tracker' => $vendorDir . '/automattic/jetpack-connection/src/class-package-version-tracker.php',
    'Automattic\\Jetpack\\Connection\\Plugin' => $vendorDir . '/automattic/jetpack-connection/src/class-plugin.php',
    'Automattic\\Jetpack\\Connection\\Plugin_Storage' => $vendorDir . '/automattic/jetpack-connection/src/class-plugin-storage.php',
    'Automattic\\Jetpack\\Connection\\REST_Connector' => $vendorDir . '/automattic/jetpack-connection/src/class-rest-connector.php',
    'Automattic\\Jetpack\\Connection\\Rest_Authentication' => $vendorDir . '/automattic/jetpack-connection/src/class-rest-authentication.php',
    'Automattic\\Jetpack\\Connection\\Secrets' => $vendorDir . '/automattic/jetpack-connection/src/class-secrets.php',
    'Automattic\\Jetpack\\Connection\\Server_Sandbox' => $vendorDir . '/automattic/jetpack-connection/src/class-server-sandbox.php',
    'Automattic\\Jetpack\\Connection\\Tokens' => $vendorDir . '/automattic/jetpack-connection/src/class-tokens.php',
    'Automattic\\Jetpack\\Connection\\Tokens_Locks' => $vendorDir . '/automattic/jetpack-connection/src/class-tokens-locks.php',
    'Automattic\\Jetpack\\Connection\\Urls' => $vendorDir . '/automattic/jetpack-connection/src/class-urls.php',
    'Automattic\\Jetpack\\Connection\\Utils' => $vendorDir . '/automattic/jetpack-connection/src/class-utils.php',
    'Automattic\\Jetpack\\Connection\\Webhooks' => $vendorDir . '/automattic/jetpack-connection/src/class-webhooks.php',
    'Automattic\\Jetpack\\Connection\\Webhooks\\Authorize_Redirect' => $vendorDir . '/automattic/jetpack-connection/src/webhooks/class-authorize-redirect.php',
    'Automattic\\Jetpack\\Connection\\XMLRPC_Async_Call' => $vendorDir . '/automattic/jetpack-connection/src/class-xmlrpc-async-call.php',
    'Automattic\\Jetpack\\Connection\\XMLRPC_Connector' => $vendorDir . '/automattic/jetpack-connection/src/class-xmlrpc-connector.php',
    'Automattic\\Jetpack\\Constants' => $vendorDir . '/automattic/jetpack-constants/src/class-constants.php',
    'Automattic\\Jetpack\\CookieState' => $vendorDir . '/automattic/jetpack-status/src/class-cookiestate.php',
    'Automattic\\Jetpack\\Errors' => $vendorDir . '/automattic/jetpack-status/src/class-errors.php',
    'Automattic\\Jetpack\\Files' => $vendorDir . '/automattic/jetpack-status/src/class-files.php',
    'Automattic\\Jetpack\\Heartbeat' => $vendorDir . '/automattic/jetpack-connection/src/class-heartbeat.php',
    'Automattic\\Jetpack\\Modules' => $vendorDir . '/automattic/jetpack-status/src/class-modules.php',
    'Automattic\\Jetpack\\Partner' => $vendorDir . '/automattic/jetpack-connection/src/class-partner.php',
    'Automattic\\Jetpack\\Partner_Coupon' => $vendorDir . '/automattic/jetpack-connection/src/class-partner-coupon.php',
    'Automattic\\Jetpack\\Paths' => $vendorDir . '/automattic/jetpack-status/src/class-paths.php',
    'Automattic\\Jetpack\\Redirect' => $vendorDir . '/automattic/jetpack-redirect/src/class-redirect.php',
    'Automattic\\Jetpack\\Roles' => $vendorDir . '/automattic/jetpack-roles/src/class-roles.php',
    'Automattic\\Jetpack\\Status' => $vendorDir . '/automattic/jetpack-status/src/class-status.php',
    'Automattic\\Jetpack\\Status\\Cache' => $vendorDir . '/automattic/jetpack-status/src/class-cache.php',
    'Automattic\\Jetpack\\Status\\Host' => $vendorDir . '/automattic/jetpack-status/src/class-host.php',
    'Automattic\\Jetpack\\Status\\Visitor' => $vendorDir . '/automattic/jetpack-status/src/class-visitor.php',
    'Automattic\\Jetpack\\Terms_Of_Service' => $vendorDir . '/automattic/jetpack-connection/src/class-terms-of-service.php',
    'Automattic\\Jetpack\\Tracking' => $vendorDir . '/automattic/jetpack-connection/src/class-tracking.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Ads' => $baseDir . '/src/API/Google/Ads.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\AdsAsset' => $baseDir . '/src/API/Google/AdsAsset.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\AdsAssetGroup' => $baseDir . '/src/API/Google/AdsAssetGroup.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\AdsAssetGroupAsset' => $baseDir . '/src/API/Google/AdsAssetGroupAsset.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\AdsCampaign' => $baseDir . '/src/API/Google/AdsCampaign.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\AdsCampaignBudget' => $baseDir . '/src/API/Google/AdsCampaignBudget.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\AdsCampaignCriterion' => $baseDir . '/src/API/Google/AdsCampaignCriterion.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\AdsConversionAction' => $baseDir . '/src/API/Google/AdsConversionAction.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\AdsReport' => $baseDir . '/src/API/Google/AdsReport.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\AssetFieldType' => $baseDir . '/src/API/Google/AssetFieldType.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\BillingSetupStatus' => $baseDir . '/src/API/Google/BillingSetupStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\CallToActionType' => $baseDir . '/src/API/Google/CallToActionType.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\CampaignStatus' => $baseDir . '/src/API/Google/CampaignStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\CampaignType' => $baseDir . '/src/API/Google/CampaignType.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Connection' => $baseDir . '/src/API/Google/Connection.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\ExceptionTrait' => $baseDir . '/src/API/Google/ExceptionTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\LocationIDTrait' => $baseDir . '/src/API/Google/LocationIDTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Merchant' => $baseDir . '/src/API/Google/Merchant.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\MerchantMetrics' => $baseDir . '/src/API/Google/MerchantMetrics.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\MerchantReport' => $baseDir . '/src/API/Google/MerchantReport.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Middleware' => $baseDir . '/src/API/Google/Middleware.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsAccountAccessQuery' => $baseDir . '/src/API/Google/Query/AdsAccountAccessQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsAccountQuery' => $baseDir . '/src/API/Google/Query/AdsAccountQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsAssetGroupAssetQuery' => $baseDir . '/src/API/Google/Query/AdsAssetGroupAssetQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsAssetGroupQuery' => $baseDir . '/src/API/Google/Query/AdsAssetGroupQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsBillingStatusQuery' => $baseDir . '/src/API/Google/Query/AdsBillingStatusQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsCampaignBudgetQuery' => $baseDir . '/src/API/Google/Query/AdsCampaignBudgetQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsCampaignCriterionQuery' => $baseDir . '/src/API/Google/Query/AdsCampaignCriterionQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsCampaignQuery' => $baseDir . '/src/API/Google/Query/AdsCampaignQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsCampaignReportQuery' => $baseDir . '/src/API/Google/Query/AdsCampaignReportQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsConversionActionQuery' => $baseDir . '/src/API/Google/Query/AdsConversionActionQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsProductReportQuery' => $baseDir . '/src/API/Google/Query/AdsProductReportQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsQuery' => $baseDir . '/src/API/Google/Query/AdsQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\AdsReportQuery' => $baseDir . '/src/API/Google/Query/AdsReportQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\MerchantFreeListingReportQuery' => $baseDir . '/src/API/Google/Query/MerchantFreeListingReportQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\MerchantProductReportQuery' => $baseDir . '/src/API/Google/Query/MerchantProductReportQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\MerchantQuery' => $baseDir . '/src/API/Google/Query/MerchantQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\MerchantReportQuery' => $baseDir . '/src/API/Google/Query/MerchantReportQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\Query' => $baseDir . '/src/API/Google/Query/Query.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\QueryInterface' => $baseDir . '/src/API/Google/Query/QueryInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Query\\ReportQueryTrait' => $baseDir . '/src/API/Google/Query/ReportQueryTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\ReportTrait' => $baseDir . '/src/API/Google/ReportTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\Settings' => $baseDir . '/src/API/Google/Settings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Google\\SiteVerification' => $baseDir . '/src/API/Google/SiteVerification.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\MicroTrait' => $baseDir . '/src/API/MicroTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\PermissionsTrait' => $baseDir . '/src/API/PermissionsTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\Ads\\AccountController' => $baseDir . '/src/API/Site/Controllers/Ads/AccountController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\Ads\\AssetGroupController' => $baseDir . '/src/API/Site/Controllers/Ads/AssetGroupController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\Ads\\AssetSuggestionsController' => $baseDir . '/src/API/Site/Controllers/Ads/AssetSuggestionsController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\Ads\\BudgetRecommendationController' => $baseDir . '/src/API/Site/Controllers/Ads/BudgetRecommendationController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\Ads\\CampaignController' => $baseDir . '/src/API/Site/Controllers/Ads/CampaignController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\Ads\\ReportsController' => $baseDir . '/src/API/Site/Controllers/Ads/ReportsController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\Ads\\SetupCompleteController' => $baseDir . '/src/API/Site/Controllers/Ads/SetupCompleteController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\AttributeMapping\\AttributeMappingDataController' => $baseDir . '/src/API/Site/Controllers/AttributeMapping/AttributeMappingDataController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\AttributeMapping\\AttributeMappingRulesController' => $baseDir . '/src/API/Site/Controllers/AttributeMapping/AttributeMappingRulesController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\AttributeMapping\\AttributeMappingSyncerController' => $baseDir . '/src/API/Site/Controllers/AttributeMapping/AttributeMappingSyncerController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\BaseController' => $baseDir . '/src/API/Site/Controllers/BaseController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\BaseOptionsController' => $baseDir . '/src/API/Site/Controllers/BaseOptionsController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\BaseReportsController' => $baseDir . '/src/API/Site/Controllers/BaseReportsController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\BatchSchemaTrait' => $baseDir . '/src/API/Site/Controllers/BatchSchemaTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\CountryCodeTrait' => $baseDir . '/src/API/Site/Controllers/CountryCodeTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\DisconnectController' => $baseDir . '/src/API/Site/Controllers/DisconnectController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\EmptySchemaPropertiesTrait' => $baseDir . '/src/API/Site/Controllers/EmptySchemaPropertiesTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\Google\\AccountController' => $baseDir . '/src/API/Site/Controllers/Google/AccountController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\Jetpack\\AccountController' => $baseDir . '/src/API/Site/Controllers/Jetpack/AccountController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\AccountController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/AccountController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\AttributeMappingCategoriesController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/AttributeMappingCategoriesController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\BatchShippingTrait' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/BatchShippingTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\ConnectionController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/ConnectionController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\ContactInformationController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/ContactInformationController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\IssuesController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/IssuesController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\PhoneVerificationController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/PhoneVerificationController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\PolicyComplianceCheckController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/PolicyComplianceCheckController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\ProductFeedController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/ProductFeedController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\ProductStatisticsController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/ProductStatisticsController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\ProductVisibilityController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/ProductVisibilityController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\ReportsController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/ReportsController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\RequestReviewController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/RequestReviewController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\SettingsController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/SettingsController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\SettingsSyncController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/SettingsSyncController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\ShippingRateBatchController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/ShippingRateBatchController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\ShippingRateController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/ShippingRateController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\ShippingRateSuggestionsController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/ShippingRateSuggestionsController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\ShippingTimeBatchController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/ShippingTimeBatchController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\ShippingTimeController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/ShippingTimeController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\SupportedCountriesController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/SupportedCountriesController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\SyncableProductsCountController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/SyncableProductsCountController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\MerchantCenter\\TargetAudienceController' => $baseDir . '/src/API/Site/Controllers/MerchantCenter/TargetAudienceController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\ResponseFromExceptionTrait' => $baseDir . '/src/API/Site/Controllers/ResponseFromExceptionTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\ShippingRateSchemaTrait' => $baseDir . '/src/API/Site/Controllers/ShippingRateSchemaTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\Controllers\\TourController' => $baseDir . '/src/API/Site/Controllers/TourController.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\Site\\RESTControllers' => $baseDir . '/src/API/Site/RESTControllers.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\API\\TransportMethods' => $baseDir . '/src/API/TransportMethods.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\ActionScheduler\\ActionScheduler' => $baseDir . '/src/ActionScheduler/ActionScheduler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\ActionScheduler\\ActionSchedulerException' => $baseDir . '/src/ActionScheduler/ActionSchedulerException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\ActionScheduler\\ActionSchedulerInterface' => $baseDir . '/src/ActionScheduler/ActionSchedulerInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\ActionScheduler\\AsyncActionRunner' => $baseDir . '/src/ActionScheduler/AsyncActionRunner.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Admin' => $baseDir . '/src/Admin/Admin.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\BulkEdit\\BulkEditInitializer' => $baseDir . '/src/Admin/BulkEdit/BulkEditInitializer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\BulkEdit\\BulkEditInterface' => $baseDir . '/src/Admin/BulkEdit/BulkEditInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\BulkEdit\\CouponBulkEdit' => $baseDir . '/src/Admin/BulkEdit/CouponBulkEdit.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Input\\BooleanSelect' => $baseDir . '/src/Admin/Input/BooleanSelect.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Input\\DateTime' => $baseDir . '/src/Admin/Input/DateTime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Input\\Form' => $baseDir . '/src/Admin/Input/Form.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Input\\FormException' => $baseDir . '/src/Admin/Input/FormException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Input\\FormInterface' => $baseDir . '/src/Admin/Input/FormInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Input\\Input' => $baseDir . '/src/Admin/Input/Input.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Input\\InputInterface' => $baseDir . '/src/Admin/Input/InputInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Input\\Integer' => $baseDir . '/src/Admin/Input/Integer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Input\\Select' => $baseDir . '/src/Admin/Input/Select.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Input\\SelectWithTextInput' => $baseDir . '/src/Admin/Input/SelectWithTextInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Input\\Text' => $baseDir . '/src/Admin/Input/Text.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\MetaBox\\AbstractMetaBox' => $baseDir . '/src/Admin/MetaBox/AbstractMetaBox.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\MetaBox\\ChannelVisibilityMetaBox' => $baseDir . '/src/Admin/MetaBox/ChannelVisibilityMetaBox.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\MetaBox\\CouponChannelVisibilityMetaBox' => $baseDir . '/src/Admin/MetaBox/CouponChannelVisibilityMetaBox.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\MetaBox\\MetaBoxInitializer' => $baseDir . '/src/Admin/MetaBox/MetaBoxInitializer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\MetaBox\\MetaBoxInterface' => $baseDir . '/src/Admin/MetaBox/MetaBoxInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\MetaBox\\SubmittableMetaBox' => $baseDir . '/src/Admin/MetaBox/SubmittableMetaBox.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\ProductBlocksService' => $baseDir . '/src/Admin/ProductBlocksService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\AttributesForm' => $baseDir . '/src/Admin/Product/Attributes/AttributesForm.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\AttributesTab' => $baseDir . '/src/Admin/Product/Attributes/AttributesTab.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\AttributesTrait' => $baseDir . '/src/Admin/Product/Attributes/AttributesTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\AdultInput' => $baseDir . '/src/Admin/Product/Attributes/Input/AdultInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\AgeGroupInput' => $baseDir . '/src/Admin/Product/Attributes/Input/AgeGroupInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\AttributeInputInterface' => $baseDir . '/src/Admin/Product/Attributes/Input/AttributeInputInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\AvailabilityDateInput' => $baseDir . '/src/Admin/Product/Attributes/Input/AvailabilityDateInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\BrandInput' => $baseDir . '/src/Admin/Product/Attributes/Input/BrandInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\ColorInput' => $baseDir . '/src/Admin/Product/Attributes/Input/ColorInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\ConditionInput' => $baseDir . '/src/Admin/Product/Attributes/Input/ConditionInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\GTINInput' => $baseDir . '/src/Admin/Product/Attributes/Input/GTINInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\GenderInput' => $baseDir . '/src/Admin/Product/Attributes/Input/GenderInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\IsBundleInput' => $baseDir . '/src/Admin/Product/Attributes/Input/IsBundleInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\MPNInput' => $baseDir . '/src/Admin/Product/Attributes/Input/MPNInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\MaterialInput' => $baseDir . '/src/Admin/Product/Attributes/Input/MaterialInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\MultipackInput' => $baseDir . '/src/Admin/Product/Attributes/Input/MultipackInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\PatternInput' => $baseDir . '/src/Admin/Product/Attributes/Input/PatternInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\SizeInput' => $baseDir . '/src/Admin/Product/Attributes/Input/SizeInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\SizeSystemInput' => $baseDir . '/src/Admin/Product/Attributes/Input/SizeSystemInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\Input\\SizeTypeInput' => $baseDir . '/src/Admin/Product/Attributes/Input/SizeTypeInput.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\Attributes\\VariationsAttributes' => $baseDir . '/src/Admin/Product/Attributes/VariationsAttributes.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Product\\ChannelVisibilityBlock' => $baseDir . '/src/Admin/Product/ChannelVisibilityBlock.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Admin\\Redirect' => $baseDir . '/src/Admin/Redirect.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Ads\\AccountService' => $baseDir . '/src/Ads/AccountService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Ads\\AdsAwareInterface' => $baseDir . '/src/Ads/AdsAwareInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Ads\\AdsAwareTrait' => $baseDir . '/src/Ads/AdsAwareTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Ads\\AdsService' => $baseDir . '/src/Ads/AdsService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Ads\\AssetSuggestionsService' => $baseDir . '/src/Ads/AssetSuggestionsService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Assets\\AdminAssetHelper' => $baseDir . '/src/Assets/AdminAssetHelper.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Assets\\AdminScriptAsset' => $baseDir . '/src/Assets/AdminScriptAsset.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Assets\\AdminScriptWithBuiltDependenciesAsset' => $baseDir . '/src/Assets/AdminScriptWithBuiltDependenciesAsset.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Assets\\AdminStyleAsset' => $baseDir . '/src/Assets/AdminStyleAsset.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Assets\\Asset' => $baseDir . '/src/Assets/Asset.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Assets\\AssetsHandler' => $baseDir . '/src/Assets/AssetsHandler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Assets\\AssetsHandlerInterface' => $baseDir . '/src/Assets/AssetsHandlerInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Assets\\BaseAsset' => $baseDir . '/src/Assets/BaseAsset.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Assets\\ScriptAsset' => $baseDir . '/src/Assets/ScriptAsset.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Assets\\ScriptWithBuiltDependenciesAsset' => $baseDir . '/src/Assets/ScriptWithBuiltDependenciesAsset.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Assets\\StyleAsset' => $baseDir . '/src/Assets/StyleAsset.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Autoloader' => $baseDir . '/src/Autoloader.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\ConnectionTest' => $baseDir . '/src/ConnectionTest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Container' => $baseDir . '/src/Container.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Coupon\\CouponHelper' => $baseDir . '/src/Coupon/CouponHelper.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Coupon\\CouponMetaHandler' => $baseDir . '/src/Coupon/CouponMetaHandler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Coupon\\CouponSyncer' => $baseDir . '/src/Coupon/CouponSyncer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Coupon\\CouponSyncerException' => $baseDir . '/src/Coupon/CouponSyncerException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Coupon\\SyncerHooks' => $baseDir . '/src/Coupon/SyncerHooks.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Coupon\\WCCouponAdapter' => $baseDir . '/src/Coupon/WCCouponAdapter.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Installer' => $baseDir . '/src/DB/Installer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Migration\\AbstractMigration' => $baseDir . '/src/DB/Migration/AbstractMigration.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Migration\\Migration20211228T1640692399' => $baseDir . '/src/DB/Migration/Migration20211228T1640692399.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Migration\\Migration20220524T1653383133' => $baseDir . '/src/DB/Migration/Migration20220524T1653383133.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Migration\\Migration20231109T1653383133' => $baseDir . '/src/DB/Migration/Migration20231109T1653383133.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Migration\\MigrationInterface' => $baseDir . '/src/DB/Migration/MigrationInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Migration\\MigrationVersion141' => $baseDir . '/src/DB/Migration/MigrationVersion141.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Migration\\Migrator' => $baseDir . '/src/DB/Migration/Migrator.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\ProductFeedQueryHelper' => $baseDir . '/src/DB/ProductFeedQueryHelper.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\ProductMetaQueryHelper' => $baseDir . '/src/DB/ProductMetaQueryHelper.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Query' => $baseDir . '/src/DB/Query.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\QueryInterface' => $baseDir . '/src/DB/QueryInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Query\\AttributeMappingRulesQuery' => $baseDir . '/src/DB/Query/AttributeMappingRulesQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Query\\BudgetRecommendationQuery' => $baseDir . '/src/DB/Query/BudgetRecommendationQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Query\\MerchantIssueQuery' => $baseDir . '/src/DB/Query/MerchantIssueQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Query\\ShippingRateQuery' => $baseDir . '/src/DB/Query/ShippingRateQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Query\\ShippingTimeQuery' => $baseDir . '/src/DB/Query/ShippingTimeQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Table' => $baseDir . '/src/DB/Table.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\TableInterface' => $baseDir . '/src/DB/TableInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\TableManager' => $baseDir . '/src/DB/TableManager.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Table\\AttributeMappingRulesTable' => $baseDir . '/src/DB/Table/AttributeMappingRulesTable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Table\\BudgetRecommendationTable' => $baseDir . '/src/DB/Table/BudgetRecommendationTable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Table\\MerchantIssueTable' => $baseDir . '/src/DB/Table/MerchantIssueTable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Table\\ShippingRateTable' => $baseDir . '/src/DB/Table/ShippingRateTable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\DB\\Table\\ShippingTimeTable' => $baseDir . '/src/DB/Table/ShippingTimeTable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Event\\ClearProductStatsCache' => $baseDir . '/src/Event/ClearProductStatsCache.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Event\\StartProductSync' => $baseDir . '/src/Event/StartProductSync.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\AccountReconnect' => $baseDir . '/src/Exception/AccountReconnect.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\ApiNotReady' => $baseDir . '/src/Exception/ApiNotReady.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\ExceptionWithResponseData' => $baseDir . '/src/Exception/ExceptionWithResponseData.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\ExtensionRequirementException' => $baseDir . '/src/Exception/ExtensionRequirementException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\GoogleListingsAndAdsException' => $baseDir . '/src/Exception/GoogleListingsAndAdsException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidArgument' => $baseDir . '/src/Exception/InvalidArgument.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidArray' => $baseDir . '/src/Exception/InvalidArray.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidAsset' => $baseDir . '/src/Exception/InvalidAsset.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidClass' => $baseDir . '/src/Exception/InvalidClass.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidDomainName' => $baseDir . '/src/Exception/InvalidDomainName.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidMeta' => $baseDir . '/src/Exception/InvalidMeta.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidOption' => $baseDir . '/src/Exception/InvalidOption.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidProperty' => $baseDir . '/src/Exception/InvalidProperty.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidQuery' => $baseDir . '/src/Exception/InvalidQuery.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidService' => $baseDir . '/src/Exception/InvalidService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidState' => $baseDir . '/src/Exception/InvalidState.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidTerm' => $baseDir . '/src/Exception/InvalidTerm.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidType' => $baseDir . '/src/Exception/InvalidType.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidValue' => $baseDir . '/src/Exception/InvalidValue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\InvalidVersion' => $baseDir . '/src/Exception/InvalidVersion.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\ValidateInterface' => $baseDir . '/src/Exception/ValidateInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\WPError' => $baseDir . '/src/Exception/WPError.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Exception\\WPErrorTrait' => $baseDir . '/src/Exception/WPErrorTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\Ads\\GoogleAdsClient' => $baseDir . '/src/Google/Ads/GoogleAdsClient.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\Ads\\ServiceClientFactoryTrait' => $baseDir . '/src/Google/Ads/ServiceClientFactoryTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\BatchInvalidProductEntry' => $baseDir . '/src/Google/BatchInvalidProductEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\BatchProductEntry' => $baseDir . '/src/Google/BatchProductEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\BatchProductIDRequestEntry' => $baseDir . '/src/Google/BatchProductIDRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\BatchProductRequestEntry' => $baseDir . '/src/Google/BatchProductRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\BatchProductResponse' => $baseDir . '/src/Google/BatchProductResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\DeleteCouponEntry' => $baseDir . '/src/Google/DeleteCouponEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\GlobalSiteTag' => $baseDir . '/src/Google/GlobalSiteTag.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\GoogleHelper' => $baseDir . '/src/Google/GoogleHelper.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\GoogleHelperAwareInterface' => $baseDir . '/src/Google/GoogleHelperAwareInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\GoogleHelperAwareTrait' => $baseDir . '/src/Google/GoogleHelperAwareTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\GoogleProductService' => $baseDir . '/src/Google/GoogleProductService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\GooglePromotionService' => $baseDir . '/src/Google/GooglePromotionService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\InvalidCouponEntry' => $baseDir . '/src/Google/InvalidCouponEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\RequestReviewStatuses' => $baseDir . '/src/Google/RequestReviewStatuses.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Google\\SiteVerificationMeta' => $baseDir . '/src/Google/SiteVerificationMeta.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\HelperTraits\\ISO3166Awareness' => $baseDir . '/src/HelperTraits/ISO3166Awareness.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\HelperTraits\\Utilities' => $baseDir . '/src/HelperTraits/Utilities.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\HelperTraits\\ViewHelperTrait' => $baseDir . '/src/HelperTraits/ViewHelperTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Infrastructure\\Activateable' => $baseDir . '/src/Infrastructure/Activateable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Infrastructure\\AdminConditional' => $baseDir . '/src/Infrastructure/AdminConditional.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Infrastructure\\Conditional' => $baseDir . '/src/Infrastructure/Conditional.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Infrastructure\\Deactivateable' => $baseDir . '/src/Infrastructure/Deactivateable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Infrastructure\\GoogleListingsAndAdsPlugin' => $baseDir . '/src/Infrastructure/GoogleListingsAndAdsPlugin.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Infrastructure\\Plugin' => $baseDir . '/src/Infrastructure/Plugin.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Infrastructure\\Registerable' => $baseDir . '/src/Infrastructure/Registerable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Infrastructure\\Renderable' => $baseDir . '/src/Infrastructure/Renderable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Infrastructure\\Service' => $baseDir . '/src/Infrastructure/Service.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Infrastructure\\View' => $baseDir . '/src/Infrastructure/View.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Infrastructure\\ViewFactory' => $baseDir . '/src/Infrastructure/ViewFactory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Installer' => $baseDir . '/src/Installer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Integration\\IntegrationInitializer' => $baseDir . '/src/Integration/IntegrationInitializer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Integration\\IntegrationInterface' => $baseDir . '/src/Integration/IntegrationInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Integration\\WooCommerceBrands' => $baseDir . '/src/Integration/WooCommerceBrands.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Integration\\WooCommercePreOrders' => $baseDir . '/src/Integration/WooCommercePreOrders.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Integration\\WooCommerceProductBundles' => $baseDir . '/src/Integration/WooCommerceProductBundles.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Integration\\YoastWooCommerceSeo' => $baseDir . '/src/Integration/YoastWooCommerceSeo.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\ContainerAwareTrait' => $baseDir . '/src/Internal/ContainerAwareTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\DependencyManagement\\AbstractServiceProvider' => $baseDir . '/src/Internal/DependencyManagement/AbstractServiceProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\DependencyManagement\\CoreServiceProvider' => $baseDir . '/src/Internal/DependencyManagement/CoreServiceProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\DependencyManagement\\DBServiceProvider' => $baseDir . '/src/Internal/DependencyManagement/DBServiceProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\DependencyManagement\\GoogleServiceProvider' => $baseDir . '/src/Internal/DependencyManagement/GoogleServiceProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\DependencyManagement\\IntegrationServiceProvider' => $baseDir . '/src/Internal/DependencyManagement/IntegrationServiceProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\DependencyManagement\\JobServiceProvider' => $baseDir . '/src/Internal/DependencyManagement/JobServiceProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\DependencyManagement\\ProxyServiceProvider' => $baseDir . '/src/Internal/DependencyManagement/ProxyServiceProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\DependencyManagement\\RESTServiceProvider' => $baseDir . '/src/Internal/DependencyManagement/RESTServiceProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\DependencyManagement\\ThirdPartyServiceProvider' => $baseDir . '/src/Internal/DependencyManagement/ThirdPartyServiceProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\DeprecatedFilters' => $baseDir . '/src/Internal/DeprecatedFilters.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\InstallTimestamp' => $baseDir . '/src/Internal/InstallTimestamp.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\Interfaces\\ContainerAwareInterface' => $baseDir . '/src/Internal/Interfaces/ContainerAwareInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\Interfaces\\FirstInstallInterface' => $baseDir . '/src/Internal/Interfaces/FirstInstallInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\Interfaces\\ISO3166AwareInterface' => $baseDir . '/src/Internal/Interfaces/ISO3166AwareInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\Interfaces\\InstallableInterface' => $baseDir . '/src/Internal/Interfaces/InstallableInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\Requirements\\GoogleProductFeedValidator' => $baseDir . '/src/Internal/Requirements/GoogleProductFeedValidator.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\Requirements\\PluginValidator' => $baseDir . '/src/Internal/Requirements/PluginValidator.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\Requirements\\RequirementValidator' => $baseDir . '/src/Internal/Requirements/RequirementValidator.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\Requirements\\RequirementValidatorInterface' => $baseDir . '/src/Internal/Requirements/RequirementValidatorInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\Requirements\\VersionValidator' => $baseDir . '/src/Internal/Requirements/VersionValidator.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\Requirements\\WCAdminValidator' => $baseDir . '/src/Internal/Requirements/WCAdminValidator.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\Requirements\\WCValidator' => $baseDir . '/src/Internal/Requirements/WCValidator.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Internal\\StatusMapping' => $baseDir . '/src/Internal/StatusMapping.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\AbstractActionSchedulerJob' => $baseDir . '/src/Jobs/AbstractActionSchedulerJob.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\AbstractBatchedActionSchedulerJob' => $baseDir . '/src/Jobs/AbstractBatchedActionSchedulerJob.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\AbstractCouponSyncerJob' => $baseDir . '/src/Jobs/AbstractCouponSyncerJob.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\AbstractProductSyncerBatchedJob' => $baseDir . '/src/Jobs/AbstractProductSyncerBatchedJob.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\AbstractProductSyncerJob' => $baseDir . '/src/Jobs/AbstractProductSyncerJob.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\ActionSchedulerJobInterface' => $baseDir . '/src/Jobs/ActionSchedulerJobInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\ActionSchedulerJobMonitor' => $baseDir . '/src/Jobs/ActionSchedulerJobMonitor.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\BatchedActionSchedulerJobInterface' => $baseDir . '/src/Jobs/BatchedActionSchedulerJobInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\CleanupProductsJob' => $baseDir . '/src/Jobs/CleanupProductsJob.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\CleanupSyncedProducts' => $baseDir . '/src/Jobs/CleanupSyncedProducts.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\DeleteAllProducts' => $baseDir . '/src/Jobs/DeleteAllProducts.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\DeleteCoupon' => $baseDir . '/src/Jobs/DeleteCoupon.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\DeleteProducts' => $baseDir . '/src/Jobs/DeleteProducts.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\JobException' => $baseDir . '/src/Jobs/JobException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\JobInitializer' => $baseDir . '/src/Jobs/JobInitializer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\JobInterface' => $baseDir . '/src/Jobs/JobInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\JobRepository' => $baseDir . '/src/Jobs/JobRepository.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\ProductSyncStats' => $baseDir . '/src/Jobs/ProductSyncStats.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\ProductSyncerJobInterface' => $baseDir . '/src/Jobs/ProductSyncerJobInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\RecurringJobInterface' => $baseDir . '/src/Jobs/RecurringJobInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\ResubmitExpiringProducts' => $baseDir . '/src/Jobs/ResubmitExpiringProducts.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\StartHook' => $baseDir . '/src/Jobs/StartHook.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\StartOnHookInterface' => $baseDir . '/src/Jobs/StartOnHookInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\SyncableProductsBatchedActionSchedulerJobTrait' => $baseDir . '/src/Jobs/SyncableProductsBatchedActionSchedulerJobTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\UpdateAllProducts' => $baseDir . '/src/Jobs/UpdateAllProducts.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\UpdateCoupon' => $baseDir . '/src/Jobs/UpdateCoupon.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\UpdateProducts' => $baseDir . '/src/Jobs/UpdateProducts.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\UpdateShippingSettings' => $baseDir . '/src/Jobs/UpdateShippingSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\UpdateSyncableProductsCount' => $baseDir . '/src/Jobs/UpdateSyncableProductsCount.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\Update\\CleanupProductTargetCountriesJob' => $baseDir . '/src/Jobs/Update/CleanupProductTargetCountriesJob.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Jobs\\Update\\PluginUpdate' => $baseDir . '/src/Jobs/Update/PluginUpdate.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Logging\\DebugLogger' => $baseDir . '/src/Logging/DebugLogger.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Menu\\AttributeMapping' => $baseDir . '/src/Menu/AttributeMapping.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Menu\\Dashboard' => $baseDir . '/src/Menu/Dashboard.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Menu\\GetStarted' => $baseDir . '/src/Menu/GetStarted.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Menu\\MenuFixesTrait' => $baseDir . '/src/Menu/MenuFixesTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Menu\\ProductFeed' => $baseDir . '/src/Menu/ProductFeed.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Menu\\Reports' => $baseDir . '/src/Menu/Reports.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Menu\\Settings' => $baseDir . '/src/Menu/Settings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Menu\\SetupAds' => $baseDir . '/src/Menu/SetupAds.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Menu\\SetupMerchantCenter' => $baseDir . '/src/Menu/SetupMerchantCenter.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Menu\\WooAdminNavigationTrait' => $baseDir . '/src/Menu/WooAdminNavigationTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MerchantCenter\\AccountService' => $baseDir . '/src/MerchantCenter/AccountService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MerchantCenter\\ContactInformation' => $baseDir . '/src/MerchantCenter/ContactInformation.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MerchantCenter\\MerchantCenterAwareInterface' => $baseDir . '/src/MerchantCenter/MerchantCenterAwareInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MerchantCenter\\MerchantCenterAwareTrait' => $baseDir . '/src/MerchantCenter/MerchantCenterAwareTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MerchantCenter\\MerchantCenterService' => $baseDir . '/src/MerchantCenter/MerchantCenterService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MerchantCenter\\MerchantStatuses' => $baseDir . '/src/MerchantCenter/MerchantStatuses.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MerchantCenter\\PhoneVerification' => $baseDir . '/src/MerchantCenter/PhoneVerification.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MerchantCenter\\PhoneVerificationException' => $baseDir . '/src/MerchantCenter/PhoneVerificationException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MerchantCenter\\PolicyComplianceCheck' => $baseDir . '/src/MerchantCenter/PolicyComplianceCheck.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MerchantCenter\\TargetAudience' => $baseDir . '/src/MerchantCenter/TargetAudience.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MultichannelMarketing\\GLAChannel' => $baseDir . '/src/MultichannelMarketing/GLAChannel.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\MultichannelMarketing\\MarketingChannelRegistrar' => $baseDir . '/src/MultichannelMarketing/MarketingChannelRegistrar.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\AbstractNote' => $baseDir . '/src/Notes/AbstractNote.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\AbstractSetupCampaign' => $baseDir . '/src/Notes/AbstractSetupCampaign.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\CompleteSetup' => $baseDir . '/src/Notes/CompleteSetup.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\ContactInformation' => $baseDir . '/src/Notes/ContactInformation.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\LeaveReviewActionTrait' => $baseDir . '/src/Notes/LeaveReviewActionTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\Note' => $baseDir . '/src/Notes/Note.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\NoteInitializer' => $baseDir . '/src/Notes/NoteInitializer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\ReconnectWordPress' => $baseDir . '/src/Notes/ReconnectWordPress.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\ReviewAfterClicks' => $baseDir . '/src/Notes/ReviewAfterClicks.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\ReviewAfterConversions' => $baseDir . '/src/Notes/ReviewAfterConversions.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\SetupCampaign' => $baseDir . '/src/Notes/SetupCampaign.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\SetupCampaignTwoWeeks' => $baseDir . '/src/Notes/SetupCampaignTwoWeeks.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Notes\\SetupCouponSharing' => $baseDir . '/src/Notes/SetupCouponSharing.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Options\\AccountState' => $baseDir . '/src/Options/AccountState.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Options\\AdsAccountState' => $baseDir . '/src/Options/AdsAccountState.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Options\\AdsSetupCompleted' => $baseDir . '/src/Options/AdsSetupCompleted.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Options\\MerchantAccountState' => $baseDir . '/src/Options/MerchantAccountState.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Options\\MerchantSetupCompleted' => $baseDir . '/src/Options/MerchantSetupCompleted.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Options\\Options' => $baseDir . '/src/Options/Options.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Options\\OptionsAwareInterface' => $baseDir . '/src/Options/OptionsAwareInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Options\\OptionsAwareTrait' => $baseDir . '/src/Options/OptionsAwareTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Options\\OptionsInterface' => $baseDir . '/src/Options/OptionsInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Options\\Transients' => $baseDir . '/src/Options/Transients.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Options\\TransientsInterface' => $baseDir . '/src/Options/TransientsInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\PluginFactory' => $baseDir . '/src/PluginFactory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\PluginHelper' => $baseDir . '/src/PluginHelper.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\AttributeMapping\\AttributeMappingHelper' => $baseDir . '/src/Product/AttributeMapping/AttributeMappingHelper.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\AttributeMapping\\Traits\\IsEnumTrait' => $baseDir . '/src/Product/AttributeMapping/Traits/IsEnumTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\AttributeMapping\\Traits\\IsFieldTrait' => $baseDir . '/src/Product/AttributeMapping/Traits/IsFieldTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\AbstractAttribute' => $baseDir . '/src/Product/Attributes/AbstractAttribute.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\Adult' => $baseDir . '/src/Product/Attributes/Adult.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\AgeGroup' => $baseDir . '/src/Product/Attributes/AgeGroup.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\AttributeInterface' => $baseDir . '/src/Product/Attributes/AttributeInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\AttributeManager' => $baseDir . '/src/Product/Attributes/AttributeManager.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\AvailabilityDate' => $baseDir . '/src/Product/Attributes/AvailabilityDate.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\Brand' => $baseDir . '/src/Product/Attributes/Brand.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\Color' => $baseDir . '/src/Product/Attributes/Color.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\Condition' => $baseDir . '/src/Product/Attributes/Condition.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\GTIN' => $baseDir . '/src/Product/Attributes/GTIN.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\Gender' => $baseDir . '/src/Product/Attributes/Gender.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\IsBundle' => $baseDir . '/src/Product/Attributes/IsBundle.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\MPN' => $baseDir . '/src/Product/Attributes/MPN.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\Material' => $baseDir . '/src/Product/Attributes/Material.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\Multipack' => $baseDir . '/src/Product/Attributes/Multipack.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\Pattern' => $baseDir . '/src/Product/Attributes/Pattern.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\Size' => $baseDir . '/src/Product/Attributes/Size.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\SizeSystem' => $baseDir . '/src/Product/Attributes/SizeSystem.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\SizeType' => $baseDir . '/src/Product/Attributes/SizeType.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\WithMappingInterface' => $baseDir . '/src/Product/Attributes/WithMappingInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\Attributes\\WithValueOptionsInterface' => $baseDir . '/src/Product/Attributes/WithValueOptionsInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\BatchProductHelper' => $baseDir . '/src/Product/BatchProductHelper.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\FilteredProductList' => $baseDir . '/src/Product/FilteredProductList.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\ProductFactory' => $baseDir . '/src/Product/ProductFactory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\ProductFilter' => $baseDir . '/src/Product/ProductFilter.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\ProductHelper' => $baseDir . '/src/Product/ProductHelper.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\ProductMetaHandler' => $baseDir . '/src/Product/ProductMetaHandler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\ProductRepository' => $baseDir . '/src/Product/ProductRepository.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\ProductSyncer' => $baseDir . '/src/Product/ProductSyncer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\ProductSyncerException' => $baseDir . '/src/Product/ProductSyncerException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\SyncerHooks' => $baseDir . '/src/Product/SyncerHooks.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Product\\WCProductAdapter' => $baseDir . '/src/Product/WCProductAdapter.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Proxies\\GoogleGtagJs' => $baseDir . '/src/Proxies/GoogleGtagJs.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Proxies\\Http' => $baseDir . '/src/Proxies/Http.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Proxies\\RESTServer' => $baseDir . '/src/Proxies/RESTServer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Proxies\\Tracks' => $baseDir . '/src/Proxies/Tracks.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Proxies\\WC' => $baseDir . '/src/Proxies/WC.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Proxies\\WP' => $baseDir . '/src/Proxies/WP.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\CountryRatesCollection' => $baseDir . '/src/Shipping/CountryRatesCollection.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\GoogleAdapter\\AbstractRateGroupAdapter' => $baseDir . '/src/Shipping/GoogleAdapter/AbstractRateGroupAdapter.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\GoogleAdapter\\AbstractShippingSettingsAdapter' => $baseDir . '/src/Shipping/GoogleAdapter/AbstractShippingSettingsAdapter.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\GoogleAdapter\\DBShippingSettingsAdapter' => $baseDir . '/src/Shipping/GoogleAdapter/DBShippingSettingsAdapter.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\GoogleAdapter\\PostcodesRateGroupAdapter' => $baseDir . '/src/Shipping/GoogleAdapter/PostcodesRateGroupAdapter.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\GoogleAdapter\\StatesRateGroupAdapter' => $baseDir . '/src/Shipping/GoogleAdapter/StatesRateGroupAdapter.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\GoogleAdapter\\WCShippingSettingsAdapter' => $baseDir . '/src/Shipping/GoogleAdapter/WCShippingSettingsAdapter.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\LocationRate' => $baseDir . '/src/Shipping/LocationRate.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\LocationRatesCollection' => $baseDir . '/src/Shipping/LocationRatesCollection.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\LocationRatesProcessor' => $baseDir . '/src/Shipping/LocationRatesProcessor.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\PostcodeRange' => $baseDir . '/src/Shipping/PostcodeRange.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\ServiceRatesCollection' => $baseDir . '/src/Shipping/ServiceRatesCollection.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\ShippingLocation' => $baseDir . '/src/Shipping/ShippingLocation.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\ShippingRate' => $baseDir . '/src/Shipping/ShippingRate.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\ShippingRegion' => $baseDir . '/src/Shipping/ShippingRegion.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\ShippingSuggestionService' => $baseDir . '/src/Shipping/ShippingSuggestionService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\ShippingZone' => $baseDir . '/src/Shipping/ShippingZone.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\SyncerHooks' => $baseDir . '/src/Shipping/SyncerHooks.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\ZoneLocationsParser' => $baseDir . '/src/Shipping/ZoneLocationsParser.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Shipping\\ZoneMethodsParser' => $baseDir . '/src/Shipping/ZoneMethodsParser.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\TaskList\\CompleteSetupTask' => $baseDir . '/src/TaskList/CompleteSetupTask.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\EventTracking' => $baseDir . '/src/Tracking/EventTracking.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\Events\\ActivatedEvents' => $baseDir . '/src/Tracking/Events/ActivatedEvents.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\Events\\BaseEvent' => $baseDir . '/src/Tracking/Events/BaseEvent.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\Events\\GenericEvents' => $baseDir . '/src/Tracking/Events/GenericEvents.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\Events\\SiteClaimEvents' => $baseDir . '/src/Tracking/Events/SiteClaimEvents.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\Events\\SiteVerificationEvents' => $baseDir . '/src/Tracking/Events/SiteVerificationEvents.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\Events\\TracksEventInterface' => $baseDir . '/src/Tracking/Events/TracksEventInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\TrackerSnapshot' => $baseDir . '/src/Tracking/TrackerSnapshot.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\Tracks' => $baseDir . '/src/Tracking/Tracks.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\TracksAwareInterface' => $baseDir . '/src/Tracking/TracksAwareInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\TracksAwareTrait' => $baseDir . '/src/Tracking/TracksAwareTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Tracking\\TracksInterface' => $baseDir . '/src/Tracking/TracksInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Util\\GoogleAdsCleanupServices' => $baseDir . '/bin/GoogleAdsCleanupServices.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Util\\SymfonyPolyfillCleanup' => $baseDir . '/bin/SymfonyPolyfillCleanup.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Utility\\AddressUtility' => $baseDir . '/src/Utility/AddressUtility.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Utility\\ArrayUtil' => $baseDir . '/src/Utility/ArrayUtil.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Utility\\DateTimeUtility' => $baseDir . '/src/Utility/DateTimeUtility.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Utility\\DimensionUtility' => $baseDir . '/src/Utility/DimensionUtility.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Utility\\ISOUtility' => $baseDir . '/src/Utility/ISOUtility.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Utility\\ImageUtility' => $baseDir . '/src/Utility/ImageUtility.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Validator\\GooglePriceConstraint' => $baseDir . '/src/Validator/GooglePriceConstraint.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Validator\\GooglePriceConstraintValidator' => $baseDir . '/src/Validator/GooglePriceConstraintValidator.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Validator\\ImageUrlConstraint' => $baseDir . '/src/Validator/ImageUrlConstraint.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Validator\\ImageUrlConstraintValidator' => $baseDir . '/src/Validator/ImageUrlConstraintValidator.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Validator\\Validatable' => $baseDir . '/src/Validator/Validatable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\ArrayWithRequiredKeys' => $baseDir . '/src/Value/ArrayWithRequiredKeys.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\BuiltScriptDependencyArray' => $baseDir . '/src/Value/BuiltScriptDependencyArray.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\CastableValueInterface' => $baseDir . '/src/Value/CastableValueInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\ChannelVisibility' => $baseDir . '/src/Value/ChannelVisibility.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\EnumeratedValues' => $baseDir . '/src/Value/EnumeratedValues.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\MCStatus' => $baseDir . '/src/Value/MCStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\MerchantCenterSettings' => $baseDir . '/src/Value/MerchantCenterSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\PhoneNumber' => $baseDir . '/src/Value/PhoneNumber.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\PositiveInteger' => $baseDir . '/src/Value/PositiveInteger.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\ProductIDMap' => $baseDir . '/src/Value/ProductIDMap.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\RateType' => $baseDir . '/src/Value/RateType.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\SyncStatus' => $baseDir . '/src/Value/SyncStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\TosAccepted' => $baseDir . '/src/Value/TosAccepted.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Value\\ValueInterface' => $baseDir . '/src/Value/ValueInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\AccessToken\\Revoke' => $vendorDir . '/google/apiclient/src/AccessToken/Revoke.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\AccessToken\\Verify' => $vendorDir . '/google/apiclient/src/AccessToken/Verify.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\AuthHandler\\AuthHandlerFactory' => $vendorDir . '/google/apiclient/src/AuthHandler/AuthHandlerFactory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\AuthHandler\\Guzzle6AuthHandler' => $vendorDir . '/google/apiclient/src/AuthHandler/Guzzle6AuthHandler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\AuthHandler\\Guzzle7AuthHandler' => $vendorDir . '/google/apiclient/src/AuthHandler/Guzzle7AuthHandler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\AccessToken' => $vendorDir . '/google/auth/src/AccessToken.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\ApplicationDefaultCredentials' => $vendorDir . '/google/auth/src/ApplicationDefaultCredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\CacheTrait' => $vendorDir . '/google/auth/src/CacheTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Cache\\InvalidArgumentException' => $vendorDir . '/google/auth/src/Cache/InvalidArgumentException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Cache\\Item' => $vendorDir . '/google/auth/src/Cache/Item.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Cache\\MemoryCacheItemPool' => $vendorDir . '/google/auth/src/Cache/MemoryCacheItemPool.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Cache\\SysVCacheItemPool' => $vendorDir . '/google/auth/src/Cache/SysVCacheItemPool.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Cache\\TypedItem' => $vendorDir . '/google/auth/src/Cache/TypedItem.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\CredentialSource\\AwsNativeSource' => $vendorDir . '/google/auth/src/CredentialSource/AwsNativeSource.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\CredentialSource\\FileSource' => $vendorDir . '/google/auth/src/CredentialSource/FileSource.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\CredentialSource\\UrlSource' => $vendorDir . '/google/auth/src/CredentialSource/UrlSource.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\CredentialsLoader' => $vendorDir . '/google/auth/src/CredentialsLoader.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Credentials\\AppIdentityCredentials' => $vendorDir . '/google/auth/src/Credentials/AppIdentityCredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Credentials\\ExternalAccountCredentials' => $vendorDir . '/google/auth/src/Credentials/ExternalAccountCredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Credentials\\GCECredentials' => $vendorDir . '/google/auth/src/Credentials/GCECredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Credentials\\IAMCredentials' => $vendorDir . '/google/auth/src/Credentials/IAMCredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Credentials\\ImpersonatedServiceAccountCredentials' => $vendorDir . '/google/auth/src/Credentials/ImpersonatedServiceAccountCredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Credentials\\InsecureCredentials' => $vendorDir . '/google/auth/src/Credentials/InsecureCredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Credentials\\ServiceAccountCredentials' => $vendorDir . '/google/auth/src/Credentials/ServiceAccountCredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Credentials\\ServiceAccountJwtAccessCredentials' => $vendorDir . '/google/auth/src/Credentials/ServiceAccountJwtAccessCredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Credentials\\UserRefreshCredentials' => $vendorDir . '/google/auth/src/Credentials/UserRefreshCredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\ExternalAccountCredentialSourceInterface' => $vendorDir . '/google/auth/src/ExternalAccountCredentialSourceInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\FetchAuthTokenCache' => $vendorDir . '/google/auth/src/FetchAuthTokenCache.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\FetchAuthTokenInterface' => $vendorDir . '/google/auth/src/FetchAuthTokenInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\GCECache' => $vendorDir . '/google/auth/src/GCECache.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\GetQuotaProjectInterface' => $vendorDir . '/google/auth/src/GetQuotaProjectInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\GetUniverseDomainInterface' => $vendorDir . '/google/auth/src/GetUniverseDomainInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\HttpHandler\\Guzzle6HttpHandler' => $vendorDir . '/google/auth/src/HttpHandler/Guzzle6HttpHandler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\HttpHandler\\Guzzle7HttpHandler' => $vendorDir . '/google/auth/src/HttpHandler/Guzzle7HttpHandler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\HttpHandler\\HttpClientCache' => $vendorDir . '/google/auth/src/HttpHandler/HttpClientCache.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\HttpHandler\\HttpHandlerFactory' => $vendorDir . '/google/auth/src/HttpHandler/HttpHandlerFactory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Iam' => $vendorDir . '/google/auth/src/Iam.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\IamSignerTrait' => $vendorDir . '/google/auth/src/IamSignerTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Middleware\\AuthTokenMiddleware' => $vendorDir . '/google/auth/src/Middleware/AuthTokenMiddleware.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Middleware\\ProxyAuthTokenMiddleware' => $vendorDir . '/google/auth/src/Middleware/ProxyAuthTokenMiddleware.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Middleware\\ScopedAccessTokenMiddleware' => $vendorDir . '/google/auth/src/Middleware/ScopedAccessTokenMiddleware.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\Middleware\\SimpleMiddleware' => $vendorDir . '/google/auth/src/Middleware/SimpleMiddleware.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\OAuth2' => $vendorDir . '/google/auth/src/OAuth2.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\ProjectIdProviderInterface' => $vendorDir . '/google/auth/src/ProjectIdProviderInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\ServiceAccountSignerTrait' => $vendorDir . '/google/auth/src/ServiceAccountSignerTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\SignBlobInterface' => $vendorDir . '/google/auth/src/SignBlobInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\UpdateMetadataInterface' => $vendorDir . '/google/auth/src/UpdateMetadataInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Auth\\UpdateMetadataTrait' => $vendorDir . '/google/auth/src/UpdateMetadataTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Client' => $vendorDir . '/google/apiclient/src/Client.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Collection' => $vendorDir . '/google/apiclient/src/Collection.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Exception' => $vendorDir . '/google/apiclient/src/Exception.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Http\\Batch' => $vendorDir . '/google/apiclient/src/Http/Batch.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Http\\MediaFileUpload' => $vendorDir . '/google/apiclient/src/Http/MediaFileUpload.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Http\\REST' => $vendorDir . '/google/apiclient/src/Http/REST.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Model' => $vendorDir . '/google/apiclient/src/Model.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service' => $vendorDir . '/google/apiclient/src/Service.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\Exception' => $vendorDir . '/google/apiclient/src/Service/Exception.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\Resource' => $vendorDir . '/google/apiclient/src/Service/Resource.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent' => $vendorDir . '/google/apiclient-services/src/ShoppingContent.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Account' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Account.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountAddress' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountAddress.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountAdsLink' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountAdsLink.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountAutomaticImprovements' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountAutomaticImprovements.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountBusinessIdentity' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountBusinessIdentity.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountBusinessInformation' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountBusinessInformation.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountConversionSettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountConversionSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountCredentials' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountCredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountCustomerService' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountCustomerService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountGoogleMyBusinessLink' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountGoogleMyBusinessLink.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountIdentifier' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountIdentifier.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountIdentityType' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountIdentityType.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountImageImprovements' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountImageImprovements.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountImageImprovementsSettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountImageImprovementsSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountIssue' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountIssue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountIssueImpact' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountIssueImpact.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountItemUpdates' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountItemUpdates.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountItemUpdatesSettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountItemUpdatesSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountLabel' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountLabel.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountReturnCarrier' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountReturnCarrier.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountShippingImprovements' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountShippingImprovements.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountStatusAccountLevelIssue' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountStatusAccountLevelIssue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountStatusItemLevelIssue' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountStatusItemLevelIssue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountStatusProducts' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountStatusProducts.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountStatusStatistics' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountStatusStatistics.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountTax' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountTax.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountTaxTaxRule' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountTaxTaxRule.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountUser' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountUser.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountYouTubeChannelLink' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountYouTubeChannelLink.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsAuthInfoResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsAuthInfoResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsClaimWebsiteResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsClaimWebsiteResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsCustomBatchRequestEntryLinkRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsCustomBatchRequestEntryLinkRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsLinkRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsLinkRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsLinkResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsLinkResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsListLinksResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsListLinksResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsUpdateLabelsRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsUpdateLabelsRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountsUpdateLabelsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountsUpdateLabelsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountstatusesCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountstatusesCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountstatusesCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountstatusesCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountstatusesCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountstatusesCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountstatusesCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountstatusesCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccountstatusesListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccountstatusesListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccounttaxCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccounttaxCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccounttaxCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccounttaxCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccounttaxCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccounttaxCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccounttaxCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccounttaxCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AccounttaxListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AccounttaxListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Action' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Action.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ActionReason' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ActionReason.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ActivateBuyOnGoogleProgramRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ActivateBuyOnGoogleProgramRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Address' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Address.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AlternateDisputeResolution' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AlternateDisputeResolution.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Amount' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Amount.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AttributionSettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AttributionSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\AttributionSettingsConversionType' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/AttributionSettingsConversionType.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\BestSellers' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/BestSellers.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Brand' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Brand.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Breakdown' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Breakdown.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\BreakdownRegion' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/BreakdownRegion.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\BuiltInSimpleAction' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/BuiltInSimpleAction.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\BuiltInSimpleActionAdditionalContent' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/BuiltInSimpleActionAdditionalContent.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\BusinessDayConfig' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/BusinessDayConfig.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\BusinessMessagesLink' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/BusinessMessagesLink.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\BuyOnGoogleProgramStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/BuyOnGoogleProgramStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CaptureOrderRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CaptureOrderRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CaptureOrderResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CaptureOrderResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CarrierRate' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CarrierRate.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CarriersCarrier' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CarriersCarrier.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CheckoutSettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CheckoutSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CloudExportAdditionalProperties' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CloudExportAdditionalProperties.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Collection' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Collection.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CollectionFeaturedProduct' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CollectionFeaturedProduct.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CollectionStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CollectionStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CollectionStatusDestinationStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CollectionStatusDestinationStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CollectionStatusItemLevelIssue' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CollectionStatusItemLevelIssue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CompetitiveVisibility' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CompetitiveVisibility.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ConversionSource' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ConversionSource.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Css' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Css.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CustomAttribute' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CustomAttribute.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Customer' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Customer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CustomerLoyaltyData' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CustomerLoyaltyData.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CustomerReturnReason' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CustomerReturnReason.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\CutoffTime' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/CutoffTime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Datafeed' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Datafeed.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedFetchSchedule' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedFetchSchedule.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedFormat' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedFormat.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedStatusError' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedStatusError.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedStatusExample' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedStatusExample.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedTarget' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedTarget.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedsCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedsCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedsCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedsCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedsCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedsCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedsCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedsCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedsFetchNowResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedsFetchNowResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedsListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedsListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedstatusesCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedstatusesCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedstatusesCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedstatusesCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedstatusesCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedstatusesCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedstatusesCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedstatusesCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DatafeedstatusesListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DatafeedstatusesListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Date' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Date.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DateTime' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DateTime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DeliveryArea' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DeliveryArea.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DeliveryAreaPostalCodeRange' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DeliveryAreaPostalCodeRange.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\DeliveryTime' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/DeliveryTime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Distance' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Distance.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ECommercePlatformLinkInfo' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ECommercePlatformLinkInfo.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Error' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Error.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Errors' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Errors.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ExternalAction' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ExternalAction.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\FreeListingsProgramStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/FreeListingsProgramStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\FreeListingsProgramStatusRegionStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/FreeListingsProgramStatusRegionStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\FreeListingsProgramStatusReviewIneligibilityReasonDetails' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/FreeListingsProgramStatusReviewIneligibilityReasonDetails.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\GenerateRecommendationsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/GenerateRecommendationsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\GmbAccounts' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/GmbAccounts.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\GmbAccountsGmbAccount' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/GmbAccountsGmbAccount.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\GoogleAnalyticsLink' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/GoogleAnalyticsLink.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Headers' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Headers.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\HolidayCutoff' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/HolidayCutoff.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\HolidaysHoliday' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/HolidaysHoliday.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\InapplicabilityDetails' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/InapplicabilityDetails.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\InsertCheckoutSettingsRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/InsertCheckoutSettingsRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Installment' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Installment.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\InvoiceSummary' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/InvoiceSummary.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\InvoiceSummaryAdditionalChargeSummary' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/InvoiceSummaryAdditionalChargeSummary.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LabelIds' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LabelIds.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiaAboutPageSettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiaAboutPageSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiaCountrySettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiaCountrySettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiaInventorySettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiaInventorySettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiaOmnichannelExperience' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiaOmnichannelExperience.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiaOnDisplayToOrderSettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiaOnDisplayToOrderSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiaPosDataProvider' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiaPosDataProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiaSettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiaSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiasettingsCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiasettingsCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiasettingsCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiasettingsCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiasettingsCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiasettingsCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiasettingsCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiasettingsCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiasettingsGetAccessibleGmbAccountsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiasettingsGetAccessibleGmbAccountsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiasettingsListPosDataProvidersResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiasettingsListPosDataProvidersResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiasettingsListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiasettingsListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiasettingsRequestGmbAccessResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiasettingsRequestGmbAccessResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiasettingsRequestInventoryVerificationResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiasettingsRequestInventoryVerificationResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiasettingsSetInventoryVerificationContactResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiasettingsSetInventoryVerificationContactResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LiasettingsSetPosDataProviderResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LiasettingsSetPosDataProviderResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LinkService' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LinkService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LinkedAccount' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LinkedAccount.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListAccountLabelsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListAccountLabelsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListAccountReturnCarrierResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListAccountReturnCarrierResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListBusinessMessagesLinksResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListBusinessMessagesLinksResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListCollectionStatusesResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListCollectionStatusesResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListCollectionsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListCollectionsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListConversionSourcesResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListConversionSourcesResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListCssesResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListCssesResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListMethodQuotasResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListMethodQuotasResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListPromotionResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListPromotionResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListRegionsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListRegionsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListRepricingProductReportsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListRepricingProductReportsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListRepricingRuleReportsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListRepricingRuleReportsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListRepricingRulesResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListRepricingRulesResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ListReturnPolicyOnlineResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ListReturnPolicyOnlineResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LocalInventory' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LocalInventory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LocalinventoryCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LocalinventoryCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LocalinventoryCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LocalinventoryCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LocalinventoryCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LocalinventoryCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LocalinventoryCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LocalinventoryCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LocationIdSet' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LocationIdSet.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\LoyaltyPoints' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/LoyaltyPoints.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\MerchantCenterDestination' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/MerchantCenterDestination.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\MerchantOrderReturn' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/MerchantOrderReturn.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\MerchantOrderReturnItem' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/MerchantOrderReturnItem.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\MerchantRejectionReason' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/MerchantRejectionReason.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\MethodQuota' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/MethodQuota.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Metrics' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Metrics.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\MinimumOrderValueTable' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/MinimumOrderValueTable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\MinimumOrderValueTableStoreCodeSetWithMov' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/MinimumOrderValueTableStoreCodeSetWithMov.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\MonetaryAmount' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/MonetaryAmount.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OnboardBuyOnGoogleProgramRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OnboardBuyOnGoogleProgramRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Order' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Order.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderAddress' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderAddress.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderCancellation' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderCancellation.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderCustomer' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderCustomer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderCustomerLoyaltyInfo' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderCustomerLoyaltyInfo.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderCustomerMarketingRightsInfo' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderCustomerMarketingRightsInfo.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderDeliveryDetails' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderDeliveryDetails.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderLineItem' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderLineItem.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderLineItemAdjustment' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderLineItemAdjustment.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderLineItemProduct' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderLineItemProduct.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderLineItemProductFee' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderLineItemProductFee.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderLineItemProductVariantAttribute' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderLineItemProductVariantAttribute.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderLineItemReturnInfo' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderLineItemReturnInfo.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderLineItemShippingDetails' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderLineItemShippingDetails.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderLineItemShippingDetailsMethod' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderLineItemShippingDetailsMethod.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderMerchantProvidedAnnotation' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderMerchantProvidedAnnotation.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderOrderAnnotation' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderOrderAnnotation.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderPickupDetails' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderPickupDetails.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderPickupDetailsCollector' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderPickupDetailsCollector.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderPromotion' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderPromotion.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderPromotionItem' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderPromotionItem.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderRefund' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderRefund.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderReportDisbursement' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderReportDisbursement.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderReportTransaction' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderReportTransaction.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderReturn' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderReturn.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderShipment' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderShipment.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderShipmentLineItemShipment' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderShipmentLineItemShipment.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderShipmentScheduledDeliveryDetails' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderShipmentScheduledDeliveryDetails.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderTrackingSignal' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderTrackingSignal.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderTrackingSignalLineItemDetails' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderTrackingSignalLineItemDetails.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderTrackingSignalShipmentLineItemMapping' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderTrackingSignalShipmentLineItemMapping.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderTrackingSignalShippingInfo' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderTrackingSignalShippingInfo.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderinvoicesCreateChargeInvoiceRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderinvoicesCreateChargeInvoiceRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderinvoicesCreateChargeInvoiceResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderinvoicesCreateChargeInvoiceResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderinvoicesCreateRefundInvoiceRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderinvoicesCreateRefundInvoiceRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderinvoicesCreateRefundInvoiceResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderinvoicesCreateRefundInvoiceResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreportsListDisbursementsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreportsListDisbursementsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreportsListTransactionsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreportsListTransactionsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsAcknowledgeRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsAcknowledgeRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsAcknowledgeResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsAcknowledgeResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsCreateOrderReturnRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsCreateOrderReturnRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsCreateOrderReturnResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsCreateOrderReturnResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsLineItem' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsLineItem.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsPartialRefund' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsPartialRefund.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsProcessRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsProcessRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsProcessResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsProcessResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsRefundOperation' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsRefundOperation.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsRejectOperation' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsRejectOperation.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrderreturnsReturnItem' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrderreturnsReturnItem.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersAcknowledgeRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersAcknowledgeRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersAcknowledgeResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersAcknowledgeResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersAdvanceTestOrderResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersAdvanceTestOrderResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCancelLineItemRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCancelLineItemRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCancelLineItemResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCancelLineItemResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCancelRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCancelRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCancelResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCancelResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCancelTestOrderByCustomerRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCancelTestOrderByCustomerRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCancelTestOrderByCustomerResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCancelTestOrderByCustomerResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCreateTestOrderRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCreateTestOrderRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCreateTestOrderResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCreateTestOrderResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCreateTestReturnRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCreateTestReturnRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCreateTestReturnResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCreateTestReturnResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCustomBatchRequestEntryCreateTestReturnReturnItem' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCustomBatchRequestEntryCreateTestReturnReturnItem.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCustomBatchRequestEntryRefundItemItem' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCustomBatchRequestEntryRefundItemItem.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCustomBatchRequestEntryRefundItemShipping' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCustomBatchRequestEntryRefundItemShipping.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersGetByMerchantOrderIdResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersGetByMerchantOrderIdResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersGetTestOrderTemplateResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersGetTestOrderTemplateResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersInStoreRefundLineItemRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersInStoreRefundLineItemRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersInStoreRefundLineItemResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersInStoreRefundLineItemResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersRefundItemRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersRefundItemRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersRefundItemResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersRefundItemResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersRefundOrderRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersRefundOrderRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersRefundOrderResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersRefundOrderResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersRejectReturnLineItemRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersRejectReturnLineItemRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersRejectReturnLineItemResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersRejectReturnLineItemResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersReturnRefundLineItemRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersReturnRefundLineItemRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersReturnRefundLineItemResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersReturnRefundLineItemResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersSetLineItemMetadataRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersSetLineItemMetadataRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersSetLineItemMetadataResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersSetLineItemMetadataResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersShipLineItemsRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersShipLineItemsRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersShipLineItemsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersShipLineItemsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersUpdateLineItemShippingDetailsRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersUpdateLineItemShippingDetailsRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersUpdateLineItemShippingDetailsResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersUpdateLineItemShippingDetailsResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersUpdateMerchantOrderIdRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersUpdateMerchantOrderIdRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersUpdateMerchantOrderIdResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersUpdateMerchantOrderIdResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersUpdateShipmentRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersUpdateShipmentRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\OrdersUpdateShipmentResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/OrdersUpdateShipmentResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PauseBuyOnGoogleProgramRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PauseBuyOnGoogleProgramRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PaymentServiceProviderLinkInfo' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PaymentServiceProviderLinkInfo.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PickupCarrierService' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PickupCarrierService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PickupServicesPickupService' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PickupServicesPickupService.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosDataProviders' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosDataProviders.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosDataProvidersPosDataProvider' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosDataProvidersPosDataProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosInventory' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosInventory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosInventoryRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosInventoryRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosInventoryResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosInventoryResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosSale' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosSale.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosSaleRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosSaleRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosSaleResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosSaleResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PosStore' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PosStore.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PostalCodeGroup' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PostalCodeGroup.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PostalCodeRange' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PostalCodeRange.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Price' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Price.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PriceAmount' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PriceAmount.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PriceCompetitiveness' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PriceCompetitiveness.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PriceInsights' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PriceInsights.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Product' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Product.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductAmount' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductAmount.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductCertification' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductCertification.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductCluster' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductCluster.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductDeliveryTime' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductDeliveryTime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductDeliveryTimeAreaDeliveryTime' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductDeliveryTimeAreaDeliveryTime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductDeliveryTimeAreaDeliveryTimeDeliveryTime' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductDeliveryTimeAreaDeliveryTimeDeliveryTime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductDimension' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductDimension.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductId' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductId.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductIssue' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductIssue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductIssueImpact' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductIssueImpact.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductProductDetail' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductProductDetail.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductShipping' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductShipping.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductShippingDimension' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductShippingDimension.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductShippingWeight' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductShippingWeight.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductStatusDestinationStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductStatusDestinationStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductStatusItemLevelIssue' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductStatusItemLevelIssue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductSubscriptionCost' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductSubscriptionCost.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductTax' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductTax.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductUnitPricingBaseMeasure' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductUnitPricingBaseMeasure.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductUnitPricingMeasure' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductUnitPricingMeasure.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductView' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductView.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductViewItemIssue' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductViewItemIssue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductViewItemIssueIssueSeverityPerDestination' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductViewItemIssueIssueSeverityPerDestination.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductViewItemIssueItemIssueSeverity' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductViewItemIssueItemIssueSeverity.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductViewItemIssueItemIssueType' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductViewItemIssueItemIssueType.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductWeight' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductWeight.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductsCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductsCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductsCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductsCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductsCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductsCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductsCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductsCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductsListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductsListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductstatusesCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductstatusesCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductstatusesCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductstatusesCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductstatusesCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductstatusesCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductstatusesCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductstatusesCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ProductstatusesListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ProductstatusesListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Promotion' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Promotion.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PromotionPromotionStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PromotionPromotionStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PromotionPromotionStatusDestinationStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PromotionPromotionStatusDestinationStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PromotionPromotionStatusPromotionIssue' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PromotionPromotionStatusPromotionIssue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\PubsubNotificationSettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/PubsubNotificationSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RateGroup' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RateGroup.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Recommendation' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Recommendation.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RecommendationCallToAction' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RecommendationCallToAction.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RecommendationCreative' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RecommendationCreative.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RecommendationDescription' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RecommendationDescription.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RefundReason' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RefundReason.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Region' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Region.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RegionGeoTargetArea' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RegionGeoTargetArea.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RegionPostalCodeArea' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RegionPostalCodeArea.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RegionPostalCodeAreaPostalCodeRange' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RegionPostalCodeAreaPostalCodeRange.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RegionalInventory' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RegionalInventory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RegionalinventoryCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RegionalinventoryCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RegionalinventoryCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RegionalinventoryCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RegionalinventoryCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RegionalinventoryCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RegionalinventoryCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RegionalinventoryCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RenderAccountIssuesRequestPayload' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RenderAccountIssuesRequestPayload.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RenderAccountIssuesResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RenderAccountIssuesResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RenderProductIssuesRequestPayload' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RenderProductIssuesRequestPayload.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RenderProductIssuesResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RenderProductIssuesResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReportInteractionRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReportInteractionRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReportRow' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReportRow.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingProductReport' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingProductReport.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingProductReportBuyboxWinningProductStats' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingProductReportBuyboxWinningProductStats.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingRule' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingRule.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingRuleCostOfGoodsSaleRule' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingRuleCostOfGoodsSaleRule.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingRuleEffectiveTime' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingRuleEffectiveTime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingRuleEffectiveTimeFixedTimePeriod' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingRuleEffectiveTimeFixedTimePeriod.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingRuleEligibleOfferMatcher' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingRuleEligibleOfferMatcher.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingRuleEligibleOfferMatcherStringMatcher' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingRuleEligibleOfferMatcherStringMatcher.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingRuleReport' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingRuleReport.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingRuleReportBuyboxWinningRuleStats' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingRuleReportBuyboxWinningRuleStats.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingRuleRestriction' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingRuleRestriction.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingRuleRestrictionBoundary' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingRuleRestrictionBoundary.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RepricingRuleStatsBasedRule' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RepricingRuleStatsBasedRule.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RequestPhoneVerificationRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RequestPhoneVerificationRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RequestPhoneVerificationResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RequestPhoneVerificationResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RequestReviewBuyOnGoogleProgramRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RequestReviewBuyOnGoogleProgramRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RequestReviewFreeListingsRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RequestReviewFreeListingsRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\RequestReviewShoppingAdsRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/RequestReviewShoppingAdsRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Accounts' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Accounts.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\AccountsBusinessmessageslinks' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/AccountsBusinessmessageslinks.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\AccountsCredentials' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/AccountsCredentials.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\AccountsLabels' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/AccountsLabels.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\AccountsReturncarrier' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/AccountsReturncarrier.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Accountsbyexternalsellerid' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Accountsbyexternalsellerid.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Accountstatuses' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Accountstatuses.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Accountstatusesbyexternalsellerid' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Accountstatusesbyexternalsellerid.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Accounttax' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Accounttax.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Buyongoogleprograms' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Buyongoogleprograms.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Collections' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Collections.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Collectionstatuses' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Collectionstatuses.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Conversionsources' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Conversionsources.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Csses' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Csses.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Customers' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Customers.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Datafeeds' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Datafeeds.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Datafeedstatuses' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Datafeedstatuses.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Freelistingsprogram' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Freelistingsprogram.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\FreelistingsprogramCheckoutsettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/FreelistingsprogramCheckoutsettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Liasettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Liasettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Localinventory' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Localinventory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Merchantsupport' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Merchantsupport.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Orderinvoices' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Orderinvoices.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Orderreports' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Orderreports.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Orderreturns' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Orderreturns.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\OrderreturnsLabels' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/OrderreturnsLabels.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Orders' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Orders.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Ordertrackingsignals' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Ordertrackingsignals.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Pos' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Pos.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Productdeliverytime' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Productdeliverytime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Products' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Products.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Productstatuses' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Productstatuses.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\ProductstatusesRepricingreports' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/ProductstatusesRepricingreports.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Promotions' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Promotions.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Pubsubnotificationsettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Pubsubnotificationsettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Quotas' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Quotas.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Recommendations' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Recommendations.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Regionalinventory' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Regionalinventory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Regions' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Regions.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Reports' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Reports.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Repricingrules' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Repricingrules.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\RepricingrulesRepricingreports' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/RepricingrulesRepricingreports.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Returnaddress' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Returnaddress.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Returnpolicy' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Returnpolicy.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Returnpolicyonline' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Returnpolicyonline.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Settlementreports' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Settlementreports.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Settlementtransactions' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Settlementtransactions.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Shippingsettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Shippingsettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Resource\\Shoppingadsprogram' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Resource/Shoppingadsprogram.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnAddress' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnAddress.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnAddressAddress' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnAddressAddress.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnPolicy' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnPolicy.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnPolicyOnline' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnPolicyOnline.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnPolicyOnlinePolicy' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnPolicyOnlinePolicy.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnPolicyOnlineRestockingFee' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnPolicyOnlineRestockingFee.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnPolicyOnlineReturnReasonCategoryInfo' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnPolicyOnlineReturnReasonCategoryInfo.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnPolicyOnlineReturnShippingFee' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnPolicyOnlineReturnShippingFee.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnPolicyPolicy' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnPolicyPolicy.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnPolicySeasonalOverride' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnPolicySeasonalOverride.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnPricingInfo' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnPricingInfo.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnShipment' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnShipment.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnShippingLabel' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnShippingLabel.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnaddressCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnaddressCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnaddressCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnaddressCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnaddressCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnaddressCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnaddressCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnaddressCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnaddressListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnaddressListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnpolicyCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnpolicyCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnpolicyCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnpolicyCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnpolicyCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnpolicyCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnpolicyCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnpolicyCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ReturnpolicyListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ReturnpolicyListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Row' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Row.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\SearchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/SearchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\SearchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/SearchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Segments' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Segments.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Service' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Service.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ServiceStoreConfig' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ServiceStoreConfig.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ServiceStoreConfigCutoffConfig' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ServiceStoreConfigCutoffConfig.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ServiceStoreConfigCutoffConfigLocalCutoffTime' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ServiceStoreConfigCutoffConfigLocalCutoffTime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\SettlementReport' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/SettlementReport.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\SettlementTransaction' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/SettlementTransaction.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\SettlementTransactionAmount' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/SettlementTransactionAmount.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\SettlementTransactionAmountCommission' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/SettlementTransactionAmountCommission.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\SettlementTransactionIdentifiers' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/SettlementTransactionIdentifiers.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\SettlementTransactionTransaction' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/SettlementTransactionTransaction.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\SettlementreportsListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/SettlementreportsListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\SettlementtransactionsListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/SettlementtransactionsListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShipmentInvoice' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShipmentInvoice.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShipmentInvoiceLineItemInvoice' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShipmentInvoiceLineItemInvoice.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShipmentTrackingInfo' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShipmentTrackingInfo.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShippingSettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShippingSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShippingsettingsCustomBatchRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShippingsettingsCustomBatchRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShippingsettingsCustomBatchRequestEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShippingsettingsCustomBatchRequestEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShippingsettingsCustomBatchResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShippingsettingsCustomBatchResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShippingsettingsCustomBatchResponseEntry' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShippingsettingsCustomBatchResponseEntry.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShippingsettingsGetSupportedCarriersResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShippingsettingsGetSupportedCarriersResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShippingsettingsGetSupportedHolidaysResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShippingsettingsGetSupportedHolidaysResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShippingsettingsGetSupportedPickupServicesResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShippingsettingsGetSupportedPickupServicesResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShippingsettingsListResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShippingsettingsListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShoppingAdsProgramStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShoppingAdsProgramStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShoppingAdsProgramStatusRegionStatus' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShoppingAdsProgramStatusRegionStatus.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\ShoppingAdsProgramStatusReviewIneligibilityReasonDetails' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/ShoppingAdsProgramStatusReviewIneligibilityReasonDetails.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Table' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Table.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TestOrder' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TestOrder.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TestOrderAddress' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TestOrderAddress.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TestOrderDeliveryDetails' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TestOrderDeliveryDetails.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TestOrderLineItem' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TestOrderLineItem.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TestOrderLineItemProduct' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TestOrderLineItemProduct.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TestOrderPickupDetails' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TestOrderPickupDetails.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TestOrderPickupDetailsPickupPerson' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TestOrderPickupDetailsPickupPerson.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TimePeriod' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TimePeriod.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TimeZone' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TimeZone.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TransitTable' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TransitTable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TransitTableTransitTimeRow' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TransitTableTransitTimeRow.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\TransitTableTransitTimeRowTransitTimeValue' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/TransitTableTransitTimeRowTransitTimeValue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\UndeleteConversionSourceRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/UndeleteConversionSourceRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\UnitInvoice' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/UnitInvoice.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\UnitInvoiceAdditionalCharge' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/UnitInvoiceAdditionalCharge.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\UnitInvoiceTaxLine' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/UnitInvoiceTaxLine.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\UrlSettings' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/UrlSettings.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Value' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Value.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\VerifyPhoneNumberRequest' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/VerifyPhoneNumberRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\VerifyPhoneNumberResponse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/VerifyPhoneNumberResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Warehouse' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Warehouse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\WarehouseBasedDeliveryTime' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/WarehouseBasedDeliveryTime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\WarehouseCutoffTime' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/WarehouseCutoffTime.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\ShoppingContent\\Weight' => $vendorDir . '/google/apiclient-services/src/ShoppingContent/Weight.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\SiteVerification' => $vendorDir . '/google/apiclient-services/src/SiteVerification.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\SiteVerification\\Resource\\WebResource' => $vendorDir . '/google/apiclient-services/src/SiteVerification/Resource/WebResource.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\SiteVerification\\SiteVerificationWebResourceGettokenRequest' => $vendorDir . '/google/apiclient-services/src/SiteVerification/SiteVerificationWebResourceGettokenRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\SiteVerification\\SiteVerificationWebResourceGettokenRequestSite' => $vendorDir . '/google/apiclient-services/src/SiteVerification/SiteVerificationWebResourceGettokenRequestSite.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\SiteVerification\\SiteVerificationWebResourceGettokenResponse' => $vendorDir . '/google/apiclient-services/src/SiteVerification/SiteVerificationWebResourceGettokenResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\SiteVerification\\SiteVerificationWebResourceListResponse' => $vendorDir . '/google/apiclient-services/src/SiteVerification/SiteVerificationWebResourceListResponse.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\SiteVerification\\SiteVerificationWebResourceResource' => $vendorDir . '/google/apiclient-services/src/SiteVerification/SiteVerificationWebResourceResource.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Service\\SiteVerification\\SiteVerificationWebResourceResourceSite' => $vendorDir . '/google/apiclient-services/src/SiteVerification/SiteVerificationWebResourceResourceSite.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Task\\Composer' => $vendorDir . '/google/apiclient/src/Task/Composer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Task\\Exception' => $vendorDir . '/google/apiclient/src/Task/Exception.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Task\\Retryable' => $vendorDir . '/google/apiclient/src/Task/Retryable.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Task\\Runner' => $vendorDir . '/google/apiclient/src/Task/Runner.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Google\\Utils\\UriTemplate' => $vendorDir . '/google/apiclient/src/Utils/UriTemplate.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\BodySummarizer' => $vendorDir . '/guzzlehttp/guzzle/src/BodySummarizer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\BodySummarizerInterface' => $vendorDir . '/guzzlehttp/guzzle/src/BodySummarizerInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Client' => $vendorDir . '/guzzlehttp/guzzle/src/Client.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\ClientInterface' => $vendorDir . '/guzzlehttp/guzzle/src/ClientInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\ClientTrait' => $vendorDir . '/guzzlehttp/guzzle/src/ClientTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Cookie\\CookieJar' => $vendorDir . '/guzzlehttp/guzzle/src/Cookie/CookieJar.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Cookie\\CookieJarInterface' => $vendorDir . '/guzzlehttp/guzzle/src/Cookie/CookieJarInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Cookie\\FileCookieJar' => $vendorDir . '/guzzlehttp/guzzle/src/Cookie/FileCookieJar.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Cookie\\SessionCookieJar' => $vendorDir . '/guzzlehttp/guzzle/src/Cookie/SessionCookieJar.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Cookie\\SetCookie' => $vendorDir . '/guzzlehttp/guzzle/src/Cookie/SetCookie.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Exception\\BadResponseException' => $vendorDir . '/guzzlehttp/guzzle/src/Exception/BadResponseException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Exception\\ClientException' => $vendorDir . '/guzzlehttp/guzzle/src/Exception/ClientException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Exception\\ConnectException' => $vendorDir . '/guzzlehttp/guzzle/src/Exception/ConnectException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Exception\\GuzzleException' => $vendorDir . '/guzzlehttp/guzzle/src/Exception/GuzzleException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Exception\\InvalidArgumentException' => $vendorDir . '/guzzlehttp/guzzle/src/Exception/InvalidArgumentException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Exception\\RequestException' => $vendorDir . '/guzzlehttp/guzzle/src/Exception/RequestException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Exception\\ServerException' => $vendorDir . '/guzzlehttp/guzzle/src/Exception/ServerException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Exception\\TooManyRedirectsException' => $vendorDir . '/guzzlehttp/guzzle/src/Exception/TooManyRedirectsException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Exception\\TransferException' => $vendorDir . '/guzzlehttp/guzzle/src/Exception/TransferException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\HandlerStack' => $vendorDir . '/guzzlehttp/guzzle/src/HandlerStack.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Handler\\CurlFactory' => $vendorDir . '/guzzlehttp/guzzle/src/Handler/CurlFactory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Handler\\CurlFactoryInterface' => $vendorDir . '/guzzlehttp/guzzle/src/Handler/CurlFactoryInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Handler\\CurlHandler' => $vendorDir . '/guzzlehttp/guzzle/src/Handler/CurlHandler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Handler\\CurlMultiHandler' => $vendorDir . '/guzzlehttp/guzzle/src/Handler/CurlMultiHandler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Handler\\EasyHandle' => $vendorDir . '/guzzlehttp/guzzle/src/Handler/EasyHandle.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Handler\\HeaderProcessor' => $vendorDir . '/guzzlehttp/guzzle/src/Handler/HeaderProcessor.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Handler\\MockHandler' => $vendorDir . '/guzzlehttp/guzzle/src/Handler/MockHandler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Handler\\Proxy' => $vendorDir . '/guzzlehttp/guzzle/src/Handler/Proxy.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Handler\\StreamHandler' => $vendorDir . '/guzzlehttp/guzzle/src/Handler/StreamHandler.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\MessageFormatter' => $vendorDir . '/guzzlehttp/guzzle/src/MessageFormatter.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\MessageFormatterInterface' => $vendorDir . '/guzzlehttp/guzzle/src/MessageFormatterInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Middleware' => $vendorDir . '/guzzlehttp/guzzle/src/Middleware.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Pool' => $vendorDir . '/guzzlehttp/guzzle/src/Pool.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\PrepareBodyMiddleware' => $vendorDir . '/guzzlehttp/guzzle/src/PrepareBodyMiddleware.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\AggregateException' => $vendorDir . '/guzzlehttp/promises/src/AggregateException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\CancellationException' => $vendorDir . '/guzzlehttp/promises/src/CancellationException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\Coroutine' => $vendorDir . '/guzzlehttp/promises/src/Coroutine.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\Create' => $vendorDir . '/guzzlehttp/promises/src/Create.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\Each' => $vendorDir . '/guzzlehttp/promises/src/Each.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\EachPromise' => $vendorDir . '/guzzlehttp/promises/src/EachPromise.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\FulfilledPromise' => $vendorDir . '/guzzlehttp/promises/src/FulfilledPromise.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\Is' => $vendorDir . '/guzzlehttp/promises/src/Is.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\Promise' => $vendorDir . '/guzzlehttp/promises/src/Promise.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\PromiseInterface' => $vendorDir . '/guzzlehttp/promises/src/PromiseInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\PromisorInterface' => $vendorDir . '/guzzlehttp/promises/src/PromisorInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\RejectedPromise' => $vendorDir . '/guzzlehttp/promises/src/RejectedPromise.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\RejectionException' => $vendorDir . '/guzzlehttp/promises/src/RejectionException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\TaskQueue' => $vendorDir . '/guzzlehttp/promises/src/TaskQueue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\TaskQueueInterface' => $vendorDir . '/guzzlehttp/promises/src/TaskQueueInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Promise\\Utils' => $vendorDir . '/guzzlehttp/promises/src/Utils.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\AppendStream' => $vendorDir . '/guzzlehttp/psr7/src/AppendStream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\BufferStream' => $vendorDir . '/guzzlehttp/psr7/src/BufferStream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\CachingStream' => $vendorDir . '/guzzlehttp/psr7/src/CachingStream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\DroppingStream' => $vendorDir . '/guzzlehttp/psr7/src/DroppingStream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\Exception\\MalformedUriException' => $vendorDir . '/guzzlehttp/psr7/src/Exception/MalformedUriException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\FnStream' => $vendorDir . '/guzzlehttp/psr7/src/FnStream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\Header' => $vendorDir . '/guzzlehttp/psr7/src/Header.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\HttpFactory' => $vendorDir . '/guzzlehttp/psr7/src/HttpFactory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\InflateStream' => $vendorDir . '/guzzlehttp/psr7/src/InflateStream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\LazyOpenStream' => $vendorDir . '/guzzlehttp/psr7/src/LazyOpenStream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\LimitStream' => $vendorDir . '/guzzlehttp/psr7/src/LimitStream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\Message' => $vendorDir . '/guzzlehttp/psr7/src/Message.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\MessageTrait' => $vendorDir . '/guzzlehttp/psr7/src/MessageTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\MimeType' => $vendorDir . '/guzzlehttp/psr7/src/MimeType.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\MultipartStream' => $vendorDir . '/guzzlehttp/psr7/src/MultipartStream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\NoSeekStream' => $vendorDir . '/guzzlehttp/psr7/src/NoSeekStream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\PumpStream' => $vendorDir . '/guzzlehttp/psr7/src/PumpStream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\Query' => $vendorDir . '/guzzlehttp/psr7/src/Query.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\Request' => $vendorDir . '/guzzlehttp/psr7/src/Request.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\Response' => $vendorDir . '/guzzlehttp/psr7/src/Response.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\Rfc7230' => $vendorDir . '/guzzlehttp/psr7/src/Rfc7230.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\ServerRequest' => $vendorDir . '/guzzlehttp/psr7/src/ServerRequest.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\Stream' => $vendorDir . '/guzzlehttp/psr7/src/Stream.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\StreamDecoratorTrait' => $vendorDir . '/guzzlehttp/psr7/src/StreamDecoratorTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\StreamWrapper' => $vendorDir . '/guzzlehttp/psr7/src/StreamWrapper.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\UploadedFile' => $vendorDir . '/guzzlehttp/psr7/src/UploadedFile.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\Uri' => $vendorDir . '/guzzlehttp/psr7/src/Uri.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\UriComparator' => $vendorDir . '/guzzlehttp/psr7/src/UriComparator.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\UriNormalizer' => $vendorDir . '/guzzlehttp/psr7/src/UriNormalizer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\UriResolver' => $vendorDir . '/guzzlehttp/psr7/src/UriResolver.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Psr7\\Utils' => $vendorDir . '/guzzlehttp/psr7/src/Utils.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\RedirectMiddleware' => $vendorDir . '/guzzlehttp/guzzle/src/RedirectMiddleware.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\RequestOptions' => $vendorDir . '/guzzlehttp/guzzle/src/RequestOptions.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\RetryMiddleware' => $vendorDir . '/guzzlehttp/guzzle/src/RetryMiddleware.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\TransferStats' => $vendorDir . '/guzzlehttp/guzzle/src/TransferStats.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\GuzzleHttp\\Utils' => $vendorDir . '/guzzlehttp/guzzle/src/Utils.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Argument\\ArgumentResolverInterface' => $vendorDir . '/league/container/src/Argument/ArgumentResolverInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Argument\\ArgumentResolverTrait' => $vendorDir . '/league/container/src/Argument/ArgumentResolverTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Argument\\ClassName' => $vendorDir . '/league/container/src/Argument/ClassName.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Argument\\ClassNameInterface' => $vendorDir . '/league/container/src/Argument/ClassNameInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Argument\\ClassNameWithOptionalValue' => $vendorDir . '/league/container/src/Argument/ClassNameWithOptionalValue.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Argument\\RawArgument' => $vendorDir . '/league/container/src/Argument/RawArgument.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Argument\\RawArgumentInterface' => $vendorDir . '/league/container/src/Argument/RawArgumentInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Container' => $vendorDir . '/league/container/src/Container.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\ContainerAwareInterface' => $vendorDir . '/league/container/src/ContainerAwareInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\ContainerAwareTrait' => $vendorDir . '/league/container/src/ContainerAwareTrait.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Definition\\Definition' => $vendorDir . '/league/container/src/Definition/Definition.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Definition\\DefinitionAggregate' => $vendorDir . '/league/container/src/Definition/DefinitionAggregate.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Definition\\DefinitionAggregateInterface' => $vendorDir . '/league/container/src/Definition/DefinitionAggregateInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Definition\\DefinitionInterface' => $vendorDir . '/league/container/src/Definition/DefinitionInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Exception\\ContainerException' => $vendorDir . '/league/container/src/Exception/ContainerException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Exception\\NotFoundException' => $vendorDir . '/league/container/src/Exception/NotFoundException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Inflector\\Inflector' => $vendorDir . '/league/container/src/Inflector/Inflector.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Inflector\\InflectorAggregate' => $vendorDir . '/league/container/src/Inflector/InflectorAggregate.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Inflector\\InflectorAggregateInterface' => $vendorDir . '/league/container/src/Inflector/InflectorAggregateInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\Inflector\\InflectorInterface' => $vendorDir . '/league/container/src/Inflector/InflectorInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\ReflectionContainer' => $vendorDir . '/league/container/src/ReflectionContainer.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\ServiceProvider\\AbstractServiceProvider' => $vendorDir . '/league/container/src/ServiceProvider/AbstractServiceProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\ServiceProvider\\BootableServiceProviderInterface' => $vendorDir . '/league/container/src/ServiceProvider/BootableServiceProviderInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\ServiceProvider\\ServiceProviderAggregate' => $vendorDir . '/league/container/src/ServiceProvider/ServiceProviderAggregate.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\ServiceProvider\\ServiceProviderAggregateInterface' => $vendorDir . '/league/container/src/ServiceProvider/ServiceProviderAggregateInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\Container\\ServiceProvider\\ServiceProviderInterface' => $vendorDir . '/league/container/src/ServiceProvider/ServiceProviderInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\ISO3166\\Exception\\DomainException' => $vendorDir . '/league/iso3166/src/Exception/DomainException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\ISO3166\\Exception\\ISO3166Exception' => $vendorDir . '/league/iso3166/src/Exception/ISO3166Exception.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\ISO3166\\Exception\\OutOfBoundsException' => $vendorDir . '/league/iso3166/src/Exception/OutOfBoundsException.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\ISO3166\\Guards' => $vendorDir . '/league/iso3166/src/Guards.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\ISO3166\\ISO3166' => $vendorDir . '/league/iso3166/src/ISO3166.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\ISO3166\\ISO3166DataProvider' => $vendorDir . '/league/iso3166/src/ISO3166DataProvider.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\ISO3166\\ISO3166DataValidator' => $vendorDir . '/league/iso3166/src/ISO3166DataValidator.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\League\\ISO3166\\ISO3166WithAliases' => $vendorDir . '/league/iso3166/src/ISO3166WithAliases.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Container\\ContainerExceptionInterface' => $vendorDir . '/psr/container/src/ContainerExceptionInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Container\\ContainerInterface' => $vendorDir . '/psr/container/src/ContainerInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Container\\NotFoundExceptionInterface' => $vendorDir . '/psr/container/src/NotFoundExceptionInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Client\\ClientExceptionInterface' => $vendorDir . '/psr/http-client/src/ClientExceptionInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Client\\ClientInterface' => $vendorDir . '/psr/http-client/src/ClientInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Client\\NetworkExceptionInterface' => $vendorDir . '/psr/http-client/src/NetworkExceptionInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Client\\RequestExceptionInterface' => $vendorDir . '/psr/http-client/src/RequestExceptionInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\MessageInterface' => $vendorDir . '/psr/http-message/src/MessageInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\RequestFactoryInterface' => $vendorDir . '/psr/http-factory/src/RequestFactoryInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\RequestInterface' => $vendorDir . '/psr/http-message/src/RequestInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\ResponseFactoryInterface' => $vendorDir . '/psr/http-factory/src/ResponseFactoryInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\ResponseInterface' => $vendorDir . '/psr/http-message/src/ResponseInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\ServerRequestFactoryInterface' => $vendorDir . '/psr/http-factory/src/ServerRequestFactoryInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\ServerRequestInterface' => $vendorDir . '/psr/http-message/src/ServerRequestInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\StreamFactoryInterface' => $vendorDir . '/psr/http-factory/src/StreamFactoryInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\StreamInterface' => $vendorDir . '/psr/http-message/src/StreamInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\UploadedFileFactoryInterface' => $vendorDir . '/psr/http-factory/src/UploadedFileFactoryInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\UploadedFileInterface' => $vendorDir . '/psr/http-message/src/UploadedFileInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\UriFactoryInterface' => $vendorDir . '/psr/http-factory/src/UriFactoryInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\Vendor\\Psr\\Http\\Message\\UriInterface' => $vendorDir . '/psr/http-message/src/UriInterface.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\View\\PHPView' => $baseDir . '/src/View/PHPView.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\View\\PHPViewFactory' => $baseDir . '/src/View/PHPViewFactory.php',
    'Automattic\\WooCommerce\\GoogleListingsAndAds\\View\\ViewException' => $baseDir . '/src/View/ViewException.php',
    'CURLStringFile' => $vendorDir . '/symfony/polyfill-php81/Resources/stubs/CURLStringFile.php',
    'Composer\\InstalledVersions' => $vendorDir . '/composer/InstalledVersions.php',
    'Firebase\\JWT\\BeforeValidException' => $vendorDir . '/firebase/php-jwt/src/BeforeValidException.php',
    'Firebase\\JWT\\CachedKeySet' => $vendorDir . '/firebase/php-jwt/src/CachedKeySet.php',
    'Firebase\\JWT\\ExpiredException' => $vendorDir . '/firebase/php-jwt/src/ExpiredException.php',
    'Firebase\\JWT\\JWK' => $vendorDir . '/firebase/php-jwt/src/JWK.php',
    'Firebase\\JWT\\JWT' => $vendorDir . '/firebase/php-jwt/src/JWT.php',
    'Firebase\\JWT\\JWTExceptionWithPayloadInterface' => $vendorDir . '/firebase/php-jwt/src/JWTExceptionWithPayloadInterface.php',
    'Firebase\\JWT\\Key' => $vendorDir . '/firebase/php-jwt/src/Key.php',
    'Firebase\\JWT\\SignatureInvalidException' => $vendorDir . '/firebase/php-jwt/src/SignatureInvalidException.php',
    'GPBMetadata\\ApiCore\\Testing\\Mocks' => $vendorDir . '/google/gax/metadata/ApiCore/Testing/Mocks.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\AdAsset' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/AdAsset.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\AdTypeInfos' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/AdTypeInfos.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\AssetPolicy' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/AssetPolicy.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\AssetSetTypes' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/AssetSetTypes.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\AssetTypes' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/AssetTypes.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\AssetUsage' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/AssetUsage.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\Audiences' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/Audiences.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\Bidding' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/Bidding.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\ClickLocation' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/ClickLocation.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\Criteria' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/Criteria.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\CriterionCategoryAvailability' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/CriterionCategoryAvailability.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\CustomParameter' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/CustomParameter.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\CustomizerValue' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/CustomizerValue.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\Dates' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/Dates.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\Extensions' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/Extensions.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\FeedCommon' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/FeedCommon.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\FeedItemSetFilterTypeInfos' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/FeedItemSetFilterTypeInfos.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\FinalAppUrl' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/FinalAppUrl.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\FrequencyCap' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/FrequencyCap.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\KeywordPlanCommon' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/KeywordPlanCommon.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\MatchingFunction' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/MatchingFunction.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\MetricGoal' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/MetricGoal.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\Metrics' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/Metrics.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\OfflineUserData' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/OfflineUserData.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\Policy' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/Policy.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\PolicySummary' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/PolicySummary.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\RealTimeBiddingSetting' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/RealTimeBiddingSetting.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\Segments' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/Segments.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\Simulation' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/Simulation.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\TagSnippet' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/TagSnippet.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\TargetingSetting' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/TargetingSetting.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\TextLabel' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/TextLabel.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\UrlCollection' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/UrlCollection.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\UserLists' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/UserLists.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Common\\Value' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Common/Value.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\AccessRole' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/AccessRole.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\AdvertisingChannelType' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/AdvertisingChannelType.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\AssetFieldType' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/AssetFieldType.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\AssetGroupStatus' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/AssetGroupStatus.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\AssetType' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/AssetType.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\BillingSetupStatus' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/BillingSetupStatus.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\CallToActionType' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/CallToActionType.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\CampaignCriterionStatus' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/CampaignCriterionStatus.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\CampaignStatus' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/CampaignStatus.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\ConversionActionCategory' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/ConversionActionCategory.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\ConversionActionStatus' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/ConversionActionStatus.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\ConversionActionType' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/ConversionActionType.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\ListingGroupFilterVertical' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/ListingGroupFilterVertical.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\MerchantCenterLinkStatus' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/MerchantCenterLinkStatus.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\TrackingCodePageFormat' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/TrackingCodePageFormat.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Enums\\TrackingCodeType' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Enums/TrackingCodeType.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AccessInvitationError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AccessInvitationError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AccountBudgetProposalError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AccountBudgetProposalError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AccountLinkError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AccountLinkError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdCustomizerError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdCustomizerError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdGroupAdError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdGroupAdError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdGroupBidModifierError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdGroupBidModifierError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdGroupCriterionCustomizerError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdGroupCriterionCustomizerError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdGroupCriterionError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdGroupCriterionError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdGroupCustomizerError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdGroupCustomizerError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdGroupError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdGroupError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdGroupFeedError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdGroupFeedError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdParameterError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdParameterError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdSharingError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdSharingError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AdxError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AdxError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AssetError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AssetError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AssetGroupAssetError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AssetGroupAssetError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AssetGroupError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AssetGroupError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AssetGroupListingGroupFilterError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AssetGroupListingGroupFilterError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AssetLinkError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AssetLinkError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AssetSetAssetError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AssetSetAssetError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AssetSetError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AssetSetError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AssetSetLinkError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AssetSetLinkError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AudienceError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AudienceError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AudienceInsightsError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AudienceInsightsError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AuthenticationError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AuthenticationError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\AuthorizationError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/AuthorizationError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\BatchJobError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/BatchJobError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\BiddingError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/BiddingError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\BiddingStrategyError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/BiddingStrategyError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\BillingSetupError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/BillingSetupError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CampaignBudgetError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CampaignBudgetError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CampaignConversionGoalError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CampaignConversionGoalError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CampaignCriterionError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CampaignCriterionError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CampaignCustomizerError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CampaignCustomizerError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CampaignDraftError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CampaignDraftError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CampaignError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CampaignError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CampaignExperimentError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CampaignExperimentError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CampaignFeedError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CampaignFeedError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CampaignSharedSetError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CampaignSharedSetError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ChangeEventError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ChangeEventError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ChangeStatusError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ChangeStatusError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CollectionSizeError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CollectionSizeError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ContextError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ContextError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ConversionActionError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ConversionActionError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ConversionAdjustmentUploadError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ConversionAdjustmentUploadError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ConversionCustomVariableError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ConversionCustomVariableError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ConversionGoalCampaignConfigError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ConversionGoalCampaignConfigError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ConversionUploadError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ConversionUploadError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ConversionValueRuleError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ConversionValueRuleError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ConversionValueRuleSetError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ConversionValueRuleSetError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CountryCodeError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CountryCodeError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CriterionError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CriterionError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CurrencyCodeError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CurrencyCodeError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CurrencyError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CurrencyError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CustomAudienceError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CustomAudienceError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CustomConversionGoalError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CustomConversionGoalError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CustomInterestError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CustomInterestError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CustomerClientLinkError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CustomerClientLinkError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CustomerCustomizerError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CustomerCustomizerError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CustomerError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CustomerError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CustomerFeedError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CustomerFeedError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CustomerManagerLinkError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CustomerManagerLinkError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CustomerSkAdNetworkConversionValueSchemaError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CustomerSkAdNetworkConversionValueSchemaError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CustomerUserAccessError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CustomerUserAccessError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\CustomizerAttributeError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/CustomizerAttributeError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\DatabaseError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/DatabaseError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\DateError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/DateError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\DateRangeError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/DateRangeError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\DistinctError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/DistinctError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\EnumError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/EnumError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\Errors' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/Errors.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ExperimentArmError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ExperimentArmError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ExperimentError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ExperimentError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ExtensionFeedItemError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ExtensionFeedItemError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ExtensionSettingError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ExtensionSettingError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FeedAttributeReferenceError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FeedAttributeReferenceError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FeedError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FeedError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FeedItemError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FeedItemError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FeedItemSetError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FeedItemSetError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FeedItemSetLinkError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FeedItemSetLinkError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FeedItemTargetError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FeedItemTargetError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FeedItemValidationError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FeedItemValidationError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FeedMappingError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FeedMappingError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FieldError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FieldError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FieldMaskError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FieldMaskError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FunctionError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FunctionError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\FunctionParsingError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/FunctionParsingError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\GeoTargetConstantSuggestionError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/GeoTargetConstantSuggestionError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\HeaderError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/HeaderError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\IdError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/IdError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ImageError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ImageError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\InternalError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/InternalError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\InvoiceError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/InvoiceError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\KeywordPlanAdGroupError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/KeywordPlanAdGroupError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\KeywordPlanAdGroupKeywordError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/KeywordPlanAdGroupKeywordError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\KeywordPlanCampaignError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/KeywordPlanCampaignError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\KeywordPlanCampaignKeywordError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/KeywordPlanCampaignKeywordError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\KeywordPlanError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/KeywordPlanError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\KeywordPlanIdeaError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/KeywordPlanIdeaError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\LabelError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/LabelError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\LanguageCodeError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/LanguageCodeError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ListOperationError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ListOperationError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ManagerLinkError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ManagerLinkError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\MediaBundleError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/MediaBundleError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\MediaFileError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/MediaFileError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\MediaUploadError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/MediaUploadError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\MerchantCenterError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/MerchantCenterError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\MultiplierError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/MultiplierError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\MutateError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/MutateError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\NewResourceCreationError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/NewResourceCreationError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\NotAllowlistedError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/NotAllowlistedError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\NotEmptyError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/NotEmptyError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\NullError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/NullError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\OfflineUserDataJobError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/OfflineUserDataJobError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\OperationAccessDeniedError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/OperationAccessDeniedError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\OperatorError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/OperatorError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\PartialFailureError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/PartialFailureError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\PaymentsAccountError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/PaymentsAccountError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\PolicyFindingError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/PolicyFindingError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\PolicyValidationParameterError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/PolicyValidationParameterError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\PolicyViolationError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/PolicyViolationError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\QueryError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/QueryError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\QuotaError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/QuotaError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\RangeError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/RangeError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ReachPlanError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ReachPlanError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\RecommendationError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/RecommendationError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\RegionCodeError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/RegionCodeError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\RequestError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/RequestError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ResourceAccessDeniedError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ResourceAccessDeniedError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ResourceCountLimitExceededError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ResourceCountLimitExceededError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\SettingError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/SettingError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\SharedCriterionError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/SharedCriterionError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\SharedSetError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/SharedSetError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\SizeLimitError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/SizeLimitError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\SmartCampaignError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/SmartCampaignError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\StringFormatError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/StringFormatError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\StringLengthError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/StringLengthError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\ThirdPartyAppAnalyticsLinkError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/ThirdPartyAppAnalyticsLinkError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\TimeZoneError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/TimeZoneError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\UrlFieldError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/UrlFieldError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\UserDataError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/UserDataError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\UserListError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/UserListError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Errors\\YoutubeVideoRegistrationError' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Errors/YoutubeVideoRegistrationError.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\AccountBudget' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/AccountBudget.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\AccountLink' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/AccountLink.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\Ad' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/Ad.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\AdGroup' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/AdGroup.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\AdGroupAd' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/AdGroupAd.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\AdGroupAdLabel' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/AdGroupAdLabel.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\AdGroupCriterion' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/AdGroupCriterion.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\Asset' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/Asset.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\AssetGroup' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/AssetGroup.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\AssetGroupAsset' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/AssetGroupAsset.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\AssetGroupListingGroupFilter' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/AssetGroupListingGroupFilter.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\BillingSetup' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/BillingSetup.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\Campaign' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/Campaign.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\CampaignBudget' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/CampaignBudget.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\CampaignCriterion' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/CampaignCriterion.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\ConversionAction' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/ConversionAction.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\Customer' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/Customer.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\CustomerUserAccess' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/CustomerUserAccess.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\GeoTargetConstant' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/GoogleAds/V14/Resources/GeoTargetConstant.php',
    'GPBMetadata\\Google\\Ads\\GoogleAds\\V14\\Resources\\MerchantCenterLink' => $vendorDir . '/googleads/google-ads-php/metadata/Google/Ads/Google